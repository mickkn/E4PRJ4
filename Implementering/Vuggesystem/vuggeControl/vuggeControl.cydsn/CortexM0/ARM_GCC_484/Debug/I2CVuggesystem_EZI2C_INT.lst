ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2CVuggesystem_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2CVuggesystem_EZI2C_NO_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	I2CVuggesystem_EZI2C_NO_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	I2CVuggesystem_EZI2C_NO_STRETCH_ISR, %function
  23              	I2CVuggesystem_EZI2C_NO_STRETCH_ISR:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\I2CVuggesystem_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * File Name: I2CVuggesystem_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** #include "I2CVuggesystem_PVT.h"
  19:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** #include "I2CVuggesystem_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  21:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** #if(I2CVuggesystem_EZI2C_SCL_STRETCH_ENABLE_CONST)
  22:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     /*******************************************************************************
  23:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Function Name: I2CVuggesystem_EZI2C_STRETCH_ISR
  24:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     ********************************************************************************
  25:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
  26:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Summary:
  27:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  28:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  used during operation.
  29:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
  30:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Parameters:
  31:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  None
  32:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 2


  33:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Return:
  34:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  None
  35:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
  36:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *******************************************************************************/
  37:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     CY_ISR_PROTO(I2CVuggesystem_EZI2C_STRETCH_ISR)
  38:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     {
  39:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static uint16 locBufSize;
  40:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locIndex;
  41:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locStatus;
  42:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  43:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 endTransfer;
  44:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 fifoIndex;
  45:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locByte;
  46:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  47:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locIntrCause;
  48:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locIntrSlave;
  49:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  50:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST)
  51:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  52:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static volatile uint8 * I2CVuggesystem_dataBuffer; /* Pointer to data buffer              *
  53:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static uint16 I2CVuggesystem_bufSizeBuf;           /* Size of buffer in bytes             *
  54:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static uint16 I2CVuggesystem_protectBuf;           /* Start index of write protected area *
  55:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  56:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static uint8 activeAddress;
  57:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 ackResponse;
  58:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  59:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         ackResponse = I2CVuggesystem_EZI2C_ACK_RECEIVED_ADDRESS;
  60:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #endif /* (I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST) */
  61:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  62:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #if !defined (CY_REMOVE_I2CVuggesystem_CUSTOM_INTR_HANDLER)
  63:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         if(NULL != I2CVuggesystem_customIntrHandler)
  64:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
  65:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_customIntrHandler();
  66:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
  67:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #else
  68:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         CY_I2CVuggesystem_CUSTOM_INTR_HANDLER();
  69:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_I2CVuggesystem_CUSTOM_INTR_HANDLER) */
  70:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  71:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Make local copy of global variable */
  72:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locIndex = I2CVuggesystem_EZI2C_GET_INDEX(activeAddress);
  73:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  74:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Get interrupt sources */
  75:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locIntrSlave = I2CVuggesystem_GetSlaveInterruptSource();
  76:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locIntrCause = I2CVuggesystem_GetInterruptCause();
  77:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  78:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  79:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  80:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  81:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         */
  82:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         if(0u != (locIntrSlave & (I2CVuggesystem_INTR_SLAVE_I2C_ARB_LOST |
  83:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                   I2CVuggesystem_INTR_SLAVE_I2C_BUS_ERROR)))
  84:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
  85:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_CTRL_REG &= (uint32) ~I2CVuggesystem_CTRL_ENABLED; /* Disable SCB block 
  86:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  87:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #if(I2CVuggesystem_CY_SCBIP_V0)
  88:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != ((uint8) I2CVuggesystem_EZI2C_STATUS_BUSY & I2CVuggesystem_curStatus))
  89:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 3


  90:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
  91:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_curStatus &= (uint8) ~I2CVuggesystem_EZI2C_STATUS_BUSY;
  92:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_curStatus |= (uint8)  I2CVuggesystem_EZI2C_STATUS_ERR;
  93:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
  94:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  95:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u == (I2CVuggesystem_GetTxInterruptMode() & I2CVuggesystem_INTR_TX_EMPTY))
  96:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
  97:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Write complete */
  98:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(I2CVuggesystem_indexBuf1 != I2CVuggesystem_offsetBuf1)
  99:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 100:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_INTR_SLAVE_I2C_WRITE_STO
 101:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 102:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 103:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 else
 104:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 105:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Read complete */
 106:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_INTR_SLAVE_I2C_NACK;
 107:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 109:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 110:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_DISABLE_SLAVE_AUTO_DATA;
 111:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 112:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 113:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 114:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_SetTxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 115:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 116:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #if(I2CVuggesystem_CY_SCBIP_V0)
 117:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 118:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_ALL);
 119:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_ALL);
 120:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
 121:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 122:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_IDLE;
 123:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 124:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_CTRL_REG |= (uint32) I2CVuggesystem_CTRL_ENABLED;  /* Enable SCB block *
 125:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
 126:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         else
 127:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
 128:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 129:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 130:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_I2C_EC))
 131:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 132:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 133:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_SetI2CExtClkInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 134:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 135:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 136:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrCause & (I2CVuggesystem_INTR_CAUSE_RX | I2CVuggesystem_INTR_CAUSE_SLAV
 137:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 138:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 139:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 140:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if (0u != (I2CVuggesystem_GetRxInterruptSourceMasked() & I2CVuggesystem_INTR_RX_NOT
 141:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 142:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST)
 143:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 144:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 145:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 146:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 4


 147:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if (0u == (locIntrCause & I2CVuggesystem_INTR_CAUSE_SLAVE))
 148:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #endif /* (I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST) */
 149:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 150:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locByte = I2CVuggesystem_RX_FIFO_RD_REG;
 151:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 152:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         switch(I2CVuggesystem_fsmState)
 153:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 154:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         case I2CVuggesystem_EZI2C_FSM_BYTE_WRITE:
 155:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             if(0u != locBufSize)
 156:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
 157:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 158:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_I2C_SLAVE_GENERATE_ACK;
 159:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 160:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_dataBuffer1[locIndex] = (uint8) locByte;
 161:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 locIndex++;
 162:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 locBufSize--;
 163:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 164:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             else
 165:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
 166:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 167:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_I2C_SLAVE_GENERATE_NACK;
 168:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             break;
 170:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 171:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST)
 172:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         case I2CVuggesystem_EZI2C_FSM_OFFSET_HI8:
 173:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 174:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_I2C_SLAVE_GENERATE_ACK;
 175:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Store offset most significant byre */
 177:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 178:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_OFFSET_LO8;
 180:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             break;
 182:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif /* (I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST) */
 183:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         case I2CVuggesystem_EZI2C_FSM_OFFSET_LO8:
 185:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             #if (I2CVuggesystem_SUB_ADDRESS_SIZE16)
 187:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
 188:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 189:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 190:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 191:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             #endif
 192:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 193:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Check offset against buffer size */
 194:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             if(locByte < (uint32) I2CVuggesystem_bufSizeBuf1)
 195:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
 196:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_I2C_SLAVE_GENERATE_ACK;
 197:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 199:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 locIndex = locByte;
 200:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 201:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 202:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < I2CVuggesystem_protectBuf1) ?
 203:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                                        (I2CVuggesystem_protectBuf1 - locByte) : (0u
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 5


 204:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 205:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             #if(I2CVuggesystem_CY_SCBIP_V0)
 206:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 207:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 if(locBufSize < I2CVuggesystem_EZI2C_FIFO_SIZE)
 208:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 {
 209:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 210:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_BYTE_WRITE;
 211:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 }
 212:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 213:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 else if(locBufSize == I2CVuggesystem_EZI2C_FIFO_SIZE)
 214:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 {
 215:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is 
 216:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_NO_INTR_SOURCE
 217:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 }
 218:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 else
 219:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX F
 221:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_INTR_RX_FULL);
 222:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 224:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             #else
 225:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 226:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE)
 227:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 {
 228:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 229:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 230:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     */
 231:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_BYTE_WRITE;
 232:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 }
 233:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 #else
 234:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 {
 235:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     if (locBufSize < I2CVuggesystem_EZI2C_FIFO_SIZE)
 236:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     {
 237:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 238:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_BYTE_WRI
 239:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     }
 240:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 241:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     else if (locBufSize == I2CVuggesystem_EZI2C_FIFO_SIZE)
 242:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     {
 243:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         I2CVuggesystem_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO
 244:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_NO_INTR_SO
 245:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     }
 246:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     else
 247:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         I2CVuggesystem_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when 
 249:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                         I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_INTR_RX_FU
 250:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 }
 252:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 #endif
 253:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 254:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
 255:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 256:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 257:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_EZI2C_SET_OFFSET(activeAddress, locIndex);
 258:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 259:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             else
 260:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 6


 261:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 262:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 I2CVuggesystem_I2C_SLAVE_GENERATE_NACK;
 263:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             break;
 265:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 266:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         default:
 267:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 268:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             break;
 269:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 270:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_NOT_EMPTY);
 272:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 273:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 274:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 275:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 276:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 else if (0u != (I2CVuggesystem_I2C_CTRL_REG & I2CVuggesystem_I2C_CTRL_S_READY_DATA_
 277:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 278:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 279:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 280:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 281:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     */
 282:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_SLAVE))
 283:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 284:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 285:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         fifoIndex = I2CVuggesystem_GET_RX_FIFO_ENTRIES;
 286:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 287:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE)
 288:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 289:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Update with current address match */
 290:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             if(I2CVuggesystem_CHECK_INTR_SLAVE_MASKED(I2CVuggesystem_INTR_SLAVE_I2C
 291:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             {
 292:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 293:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 fifoIndex = I2CVuggesystem_GET_RX_FIFO_ENTRIES;
 294:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 295:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 296:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 297:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 298:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 */
 299:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                 fifoIndex -= ((0u != I2CVuggesystem_GET_RX_FIFO_SR_VALID) ? (0u) : 
 300:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             }
 301:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 302:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         #endif
 303:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 304:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_DISABLE_SLAVE_AUTO_DATA;
 305:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         endTransfer = I2CVuggesystem_EZI2C_CONTINUE_TRANSFER;
 306:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 307:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     else
 308:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 309:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 310:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 311:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 312:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locBufSize -= (uint16) I2CVuggesystem_EZI2C_FIFO_SIZE;
 313:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 314:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(locBufSize <= I2CVuggesystem_EZI2C_FIFO_SIZE)
 315:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 316:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 317:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 7


 318:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             endTransfer = I2CVuggesystem_EZI2C_COMPLETE_TRANSFER;
 319:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 320:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else
 321:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 322:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Continue  transaction */
 323:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             fifoIndex   = I2CVuggesystem_EZI2C_FIFO_SIZE;
 324:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             endTransfer = I2CVuggesystem_EZI2C_CONTINUE_TRANSFER;
 325:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 326:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 327:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 328:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 329:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 330:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Store data in buffer */
 331:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_dataBuffer1[locIndex] = (uint8) I2CVuggesystem_RX_FIFO_RD_RE
 332:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locIndex++;
 333:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 334:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 335:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 336:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(I2CVuggesystem_EZI2C_COMPLETE_TRANSFER == endTransfer)
 337:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 338:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ENABLE_SLAVE_AUTO_DATA_NACK;
 339:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 340:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 341:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 342:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 343:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 344:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_FULL |
 345:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                                             I2CVuggesystem_INTR_RX_NOT_EMPTY);
 346:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 347:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 else
 348:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 349:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 350:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 351:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     */
 352:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 353:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 354:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 355:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_SLAVE))
 356:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 357:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 358:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 359:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #if(!I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST)
 360:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_STOP))
 361:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #else
 362:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 363:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if((0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_STOP)) &&
 364:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                    (0u != ((uint8) I2CVuggesystem_EZI2C_STATUS_BUSY & I2CVuggesystem_curStatus)))
 365:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #endif
 366:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 367:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 368:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 369:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_SetTxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 370:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 371:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Set read completion mask */
 372:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locStatus = I2CVuggesystem_INTR_SLAVE_I2C_NACK;
 373:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 374:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 8


 375:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(locIndex != I2CVuggesystem_EZI2C_GET_OFFSET(activeAddress))
 376:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 377:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locStatus |= I2CVuggesystem_INTR_SLAVE_I2C_WRITE_STOP;
 378:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 379:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 380:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Complete read or write transaction */
 381:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 382:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 383:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locStatus |= (uint32)  I2CVuggesystem_curStatus;
 384:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locStatus &= (uint32) ~I2CVuggesystem_EZI2C_STATUS_BUSY;
 385:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_curStatus = (uint8) locStatus;
 386:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 387:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_IDLE;
 388:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 389:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE)
 390:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 391:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 392:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_EZI2C_SET_INDEX(activeAddress, locIndex);
 393:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 394:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif
 395:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 396:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 397:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 398:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 399:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 400:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 401:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 */
 402:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_ADDR_MATCH))
 403:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 404:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE)
 405:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 406:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 407:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locByte = I2CVuggesystem_GET_I2C_7BIT_ADDRESS(I2CVuggesystem_RX_FIFO_RD_REG
 408:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 409:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_NOT_EMPTY);
 410:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 411:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Check received address against device addresses */
 412:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(I2CVuggesystem_addrBuf1 == locByte)
 413:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 414:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 415:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_dataBuffer = I2CVuggesystem_dataBuffer1;
 416:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_bufSizeBuf = I2CVuggesystem_bufSizeBuf1;
 417:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_protectBuf = I2CVuggesystem_protectBuf1;
 418:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 419:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             activeAddress = I2CVuggesystem_EZI2C_ACTIVE_ADDRESS1;
 420:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 421:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else if(I2CVuggesystem_addrBuf2 == locByte)
 422:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 423:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 424:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_dataBuffer = I2CVuggesystem_dataBuffer2;
 425:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_bufSizeBuf = I2CVuggesystem_bufSizeBuf2;
 426:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_protectBuf = I2CVuggesystem_protectBuf2;
 427:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 428:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             activeAddress = I2CVuggesystem_EZI2C_ACTIVE_ADDRESS2;
 429:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 430:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else
 431:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 9


 432:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Address does not match */
 433:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             ackResponse = I2CVuggesystem_EZI2C_NACK_RECEIVED_ADDRESS;
 434:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 435:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 436:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif
 437:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 438:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #if(I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST)
 439:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(I2CVuggesystem_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 440:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 441:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 442:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearI2CExtClkInterruptSource(I2CVuggesystem_INTR_I2C_EC_WAK
 443:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_ALL);
 444:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 445:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(!I2CVuggesystem_CY_SCBIP_V0)
 446:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 447:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_DISABLE_INTR_SLAVE(I2CVuggesystem_INTR_SLAVE_I2C_STOP);
 448:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif /* (!I2CVuggesystem_CY_SCBIP_V0) */
 449:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 450:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 451:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_I2C_SLAVE_GENERATE_NACK;
 452:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 453:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     else
 454:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #endif /* (I2CVuggesystem_SECONDARY_ADDRESS_ENABLE_CONST) */
 455:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 456:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 457:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(I2CVuggesystem_SCB_MODE_UNCONFIG_CONST_CFG)
 458:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(!I2CVuggesystem_SECONDARY_ADDRESS_ENABLE)
 459:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 460:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 461:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_dataBuffer = I2CVuggesystem_dataBuffer1;
 462:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_bufSizeBuf = I2CVuggesystem_bufSizeBuf1;
 463:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_protectBuf = I2CVuggesystem_protectBuf1;
 464:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 465:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             activeAddress = I2CVuggesystem_EZI2C_ACTIVE_ADDRESS1;
 466:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 467:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif /* (I2CVuggesystem_SCB_MODE_UNCONFIG_CONST_CFG) */
 468:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 469:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 470:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_EZI2C_STATUS_BUSY;
 471:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 472:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 473:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locIndex = I2CVuggesystem_EZI2C_GET_OFFSET(activeAddress);
 474:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 475:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Check transaction direction */
 476:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(I2CVuggesystem_CHECK_I2C_STATUS(I2CVuggesystem_I2C_STATUS_S_READ))
 477:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 478:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 479:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             locBufSize = I2CVuggesystem_bufSizeBuf1 - (uint16) locIndex;
 480:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 481:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 482:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_CLEAR_TX_FIFO;
 483:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_SetTxInterruptMode(I2CVuggesystem_INTR_TX_EMPTY);
 484:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 485:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else
 486:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 487:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 488:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_SetRxInterruptMode(I2CVuggesystem_INTR_RX_NOT_EMPTY);
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 10


 489:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 490:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 491:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 492:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearI2CExtClkInterruptSource(I2CVuggesystem_INTR_I2C_EC_WAK
 493:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_ALL);
 494:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 495:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if (!I2CVuggesystem_CY_SCBIP_V0)
 496:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 497:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ENABLE_INTR_SLAVE(I2CVuggesystem_INTR_SLAVE_I2C_STOP);
 498:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif /* (!I2CVuggesystem_CY_SCBIP_V0) */
 499:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 500:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* ACK the address byte */
 501:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_I2C_SLAVE_GENERATE_ACK;
 502:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 503:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 504:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 505:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 506:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearSlaveInterruptSource(locIntrSlave);
 507:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 508:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 509:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 510:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 511:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 512:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             */
 513:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (I2CVuggesystem_GetInterruptCause() & I2CVuggesystem_INTR_CAUSE_TX))
 514:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 515:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 516:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 do
 517:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 518:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 519:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(0u != locBufSize)
 520:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 521:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_TX_FIFO_WR_REG = (uint32) I2CVuggesystem_dataBuffer1[locInde
 522:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locIndex++;
 523:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locBufSize--;
 524:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 525:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     else
 526:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 527:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_TX_FIFO_WR_REG = I2CVuggesystem_EZI2C_OVFL_RETURN;
 528:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 529:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 530:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 while(I2CVuggesystem_EZI2C_FIFO_SIZE != I2CVuggesystem_GET_TX_FIFO_ENTRIES);
 531:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 532:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearTxInterruptSource(I2CVuggesystem_INTR_TX_EMPTY);
 533:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 534:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
 535:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 536:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Store local index copy into global variable */
 537:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         I2CVuggesystem_EZI2C_SET_INDEX(activeAddress, locIndex);
 538:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     }
 539:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** #endif /* (I2CVuggesystem_EZI2C_SCL_STRETCH_ENABLE_CONST) */
 540:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 541:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 542:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** #if(I2CVuggesystem_EZI2C_SCL_STRETCH_DISABLE_CONST)
 543:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     /*******************************************************************************
 544:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Function Name: I2CVuggesystem_EZI2C_NO_STRETCH_ISR
 545:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     ********************************************************************************
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 11


 546:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
 547:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Summary:
 548:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. Clock stretching is
 549:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  NOT used during operation.
 550:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
 551:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Parameters:
 552:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  None
 553:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
 554:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     * Return:
 555:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *  None
 556:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *
 557:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     *******************************************************************************/
 558:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     CY_ISR_PROTO(I2CVuggesystem_EZI2C_NO_STRETCH_ISR)
 559:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     {
  26              		.loc 1 559 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 84B0     		sub	sp, sp, #16
  33              		.cfi_def_cfa_offset 24
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
 560:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #if(I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST)
 561:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         static uint8 locOffset;
 562:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #endif /* (I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST) */
 563:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 564:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locByte;
 565:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locStatus;
 566:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locIntrSlave;
 567:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         uint32 locIntrCause;
 568:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 569:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #if !defined (CY_REMOVE_I2CVuggesystem_CUSTOM_INTR_HANDLER)
 570:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Calls registered customer routine to manage interrupt sources */
 571:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         if(NULL != I2CVuggesystem_customIntrHandler)
  36              		.loc 1 571 0
  37 0006 A04B     		ldr	r3, .L27
  38 0008 1B68     		ldr	r3, [r3]
  39 000a 002B     		cmp	r3, #0
  40 000c 02D0     		beq	.L2
 572:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
 573:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_customIntrHandler();
  41              		.loc 1 573 0
  42 000e 9E4B     		ldr	r3, .L27
  43 0010 1B68     		ldr	r3, [r3]
  44 0012 9847     		blx	r3
  45              	.L2:
 574:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
 575:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #else
 576:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         CY_I2CVuggesystem_CUSTOM_INTR_HANDLER();
 577:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_I2CVuggesystem_CUSTOM_INTR_HANDLER) */
 578:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 579:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locByte = 0u;
  46              		.loc 1 579 0
  47 0014 0023     		mov	r3, #0
  48 0016 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 12


 580:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 581:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Get copy of triggered slave interrupt sources */
 582:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locIntrSlave = I2CVuggesystem_GetSlaveInterruptSource();
  49              		.loc 1 582 0
  50 0018 9C4B     		ldr	r3, .L27+4
  51 001a 1B68     		ldr	r3, [r3]
  52 001c 3B60     		str	r3, [r7]
 583:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         locIntrCause = I2CVuggesystem_GetInterruptCause();
  53              		.loc 1 583 0
  54 001e 9C4B     		ldr	r3, .L27+8
  55 0020 1B68     		ldr	r3, [r3]
  56 0022 7B60     		str	r3, [r7, #4]
 584:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 585:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE.I2C_BUS_ERROR */
 586:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         /* Handles errors on the bus: There are cases when both bits are set.
 587:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
 588:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         */
 589:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         if(0u != (locIntrSlave & (I2CVuggesystem_INTR_SLAVE_I2C_ARB_LOST |
  57              		.loc 1 589 0
  58 0024 3A68     		ldr	r2, [r7]
  59 0026 0223     		mov	r3, #2
  60 0028 FF33     		add	r3, r3, #255
  61 002a 1340     		and	r3, r2
  62 002c 44D0     		beq	.L3
 590:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                                   I2CVuggesystem_INTR_SLAVE_I2C_BUS_ERROR)))
 591:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
 592:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_CTRL_REG &= (uint32) ~I2CVuggesystem_CTRL_ENABLED; /* Disable SCB block 
  63              		.loc 1 592 0
  64 002e 994B     		ldr	r3, .L27+12
  65 0030 984A     		ldr	r2, .L27+12
  66 0032 1268     		ldr	r2, [r2]
  67 0034 5200     		lsl	r2, r2, #1
  68 0036 5208     		lsr	r2, r2, #1
  69 0038 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 594:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #if (I2CVuggesystem_CY_SCBIP_V0)
 595:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_ADDR_MATCH))
  70              		.loc 1 595 0
  71 003a 3A68     		ldr	r2, [r7]
  72 003c 4023     		mov	r3, #64
  73 003e 1340     		and	r3, r2
  74 0040 26D0     		beq	.L4
 596:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
 597:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 598:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_EZI2C_STATUS_ERR;
  75              		.loc 1 598 0
  76 0042 954B     		ldr	r3, .L27+16
  77 0044 1B78     		ldrb	r3, [r3]
  78 0046 DBB2     		uxtb	r3, r3
  79 0048 1022     		mov	r2, #16
  80 004a 1343     		orr	r3, r2
  81 004c DAB2     		uxtb	r2, r3
  82 004e 924B     		ldr	r3, .L27+16
  83 0050 1A70     		strb	r2, [r3]
 599:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 600:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u != (I2CVuggesystem_EZI2C_FSM_WRITE_MASK & I2CVuggesystem_fsmState))
  84              		.loc 1 600 0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 13


  85 0052 924B     		ldr	r3, .L27+20
  86 0054 1A78     		ldrb	r2, [r3]
  87 0056 0123     		mov	r3, #1
  88 0058 1340     		and	r3, r2
  89 005a DBB2     		uxtb	r3, r3
  90 005c 002B     		cmp	r3, #0
  91 005e 0FD0     		beq	.L5
 601:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 602:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Write complete */
 603:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(I2CVuggesystem_indexBuf1 != I2CVuggesystem_offsetBuf1)
  92              		.loc 1 603 0
  93 0060 8F4B     		ldr	r3, .L27+24
  94 0062 1B78     		ldrb	r3, [r3]
  95 0064 1A1C     		mov	r2, r3
  96 0066 8F4B     		ldr	r3, .L27+28
  97 0068 1B88     		ldrh	r3, [r3]
  98 006a 9A42     		cmp	r2, r3
  99 006c 10D0     		beq	.L4
 604:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 605:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_INTR_SLAVE_I2C_WRITE_STO
 100              		.loc 1 605 0
 101 006e 8A4B     		ldr	r3, .L27+16
 102 0070 1B78     		ldrb	r3, [r3]
 103 0072 DBB2     		uxtb	r3, r3
 104 0074 0822     		mov	r2, #8
 105 0076 1343     		orr	r3, r2
 106 0078 DAB2     		uxtb	r2, r3
 107 007a 874B     		ldr	r3, .L27+16
 108 007c 1A70     		strb	r2, [r3]
 109 007e 07E0     		b	.L4
 110              	.L5:
 606:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 607:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 608:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 else
 609:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 610:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Read complete */
 611:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_curStatus |= (uint8) I2CVuggesystem_INTR_SLAVE_I2C_NACK;
 111              		.loc 1 611 0
 112 0080 854B     		ldr	r3, .L27+16
 113 0082 1B78     		ldrb	r3, [r3]
 114 0084 DBB2     		uxtb	r3, r3
 115 0086 0222     		mov	r2, #2
 116 0088 1343     		orr	r3, r2
 117 008a DAB2     		uxtb	r2, r3
 118 008c 824B     		ldr	r3, .L27+16
 119 008e 1A70     		strb	r2, [r3]
 120              	.L4:
 612:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 613:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 614:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 615:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Clean-up interrupt sources */
 616:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_SetTxInterruptMode(I2CVuggesystem_NO_INTR_SOURCES);
 121              		.loc 1 616 0 discriminator 1
 122 0090 854B     		ldr	r3, .L27+32
 123 0092 0022     		mov	r2, #0
 124 0094 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 14


 618:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #if (I2CVuggesystem_CY_SCBIP_V0)
 619:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 620:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_NOT_EMPTY);
 125              		.loc 1 620 0 discriminator 1
 126 0096 854B     		ldr	r3, .L27+36
 127 0098 0422     		mov	r2, #4
 128 009a 1A60     		str	r2, [r3]
 621:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_ALL);
 129              		.loc 1 621 0 discriminator 1
 130 009c 7B4B     		ldr	r3, .L27+4
 131 009e 844A     		ldr	r2, .L27+40
 132 00a0 1A60     		str	r2, [r3]
 622:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
 623:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 624:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_IDLE;
 133              		.loc 1 624 0 discriminator 1
 134 00a2 7E4B     		ldr	r3, .L27+20
 135 00a4 0022     		mov	r2, #0
 136 00a6 1A70     		strb	r2, [r3]
 625:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 626:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             I2CVuggesystem_CTRL_REG |= (uint32) I2CVuggesystem_CTRL_ENABLED;  /* Enable SCB block *
 137              		.loc 1 626 0 discriminator 1
 138 00a8 7A4B     		ldr	r3, .L27+12
 139 00aa 7A4A     		ldr	r2, .L27+12
 140 00ac 1268     		ldr	r2, [r2]
 141 00ae 8021     		mov	r1, #128
 142 00b0 0906     		lsl	r1, r1, #24
 143 00b2 0A43     		orr	r2, r1
 144 00b4 1A60     		str	r2, [r3]
 145 00b6 E4E0     		b	.L1
 146              	.L3:
 627:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
 628:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         else
 629:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         {
 630:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_RX.NOT_EMPTY */
 631:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* The slave receives data from the master: accepts into the RX FIFO. At least one entr
 632:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             * read. The offset is written first and all the following bytes are data (expected to b
 633:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             * The slave ACKs all bytes, but it discards them if they do not match the write criteri
 634:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             * The slave NACKs the bytes in the case of an RX FIFO overflow.
 635:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             */
 636:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_RX))
 147              		.loc 1 636 0
 148 00b8 7A68     		ldr	r2, [r7, #4]
 149 00ba 0823     		mov	r3, #8
 150 00bc 1340     		and	r3, r2
 151 00be 59D0     		beq	.L8
 152              	.L18:
 637:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 638:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Read all entries available in RX FIFO */
 639:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 do
 640:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 641:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locByte = I2CVuggesystem_RX_FIFO_RD_REG;
 153              		.loc 1 641 0
 154 00c0 7C4B     		ldr	r3, .L27+44
 155 00c2 1B68     		ldr	r3, [r3]
 156 00c4 FB60     		str	r3, [r7, #12]
 642:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 15


 643:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     switch(I2CVuggesystem_fsmState)
 157              		.loc 1 643 0
 158 00c6 754B     		ldr	r3, .L27+20
 159 00c8 1B78     		ldrb	r3, [r3]
 160 00ca 012B     		cmp	r3, #1
 161 00cc 04D0     		beq	.L10
 162 00ce 032B     		cmp	r3, #3
 163 00d0 36D0     		beq	.L11
 164 00d2 002B     		cmp	r3, #0
 165 00d4 19D0     		beq	.L12
 166 00d6 41E0     		b	.L26
 167              	.L10:
 644:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 645:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 646:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     case I2CVuggesystem_EZI2C_FSM_BYTE_WRITE:
 647:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Check buffer index against protect area */
 648:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(I2CVuggesystem_indexBuf1 < I2CVuggesystem_protectBuf1)
 168              		.loc 1 648 0
 169 00d8 724B     		ldr	r3, .L27+28
 170 00da 1A88     		ldrh	r2, [r3]
 171 00dc 764B     		ldr	r3, .L27+48
 172 00de 1B88     		ldrh	r3, [r3]
 173 00e0 9A42     		cmp	r2, r3
 174 00e2 0ED2     		bcs	.L13
 649:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 650:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Stores received byte into buffer */
 651:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_dataBuffer1[I2CVuggesystem_indexBuf1] = (uint8) locByte;
 175              		.loc 1 651 0
 176 00e4 754B     		ldr	r3, .L27+52
 177 00e6 1A68     		ldr	r2, [r3]
 178 00e8 6E4B     		ldr	r3, .L27+28
 179 00ea 1B88     		ldrh	r3, [r3]
 180 00ec D318     		add	r3, r2, r3
 181 00ee FA68     		ldr	r2, [r7, #12]
 182 00f0 D2B2     		uxtb	r2, r2
 183 00f2 1A70     		strb	r2, [r3]
 652:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_indexBuf1++;
 184              		.loc 1 652 0
 185 00f4 6B4B     		ldr	r3, .L27+28
 186 00f6 1B88     		ldrh	r3, [r3]
 187 00f8 0133     		add	r3, r3, #1
 188 00fa 9AB2     		uxth	r2, r3
 189 00fc 694B     		ldr	r3, .L27+28
 190 00fe 1A80     		strh	r2, [r3]
 653:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 654:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else
 655:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 656:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Discard current byte and sets FSM state to discard following bytes *
 657:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_WAIT_STOP;
 658:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 659:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 660:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         break;
 191              		.loc 1 660 0
 192 0100 30E0     		b	.L15
 193              	.L13:
 657:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_WAIT_STOP;
 194              		.loc 1 657 0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 16


 195 0102 664B     		ldr	r3, .L27+20
 196 0104 0322     		mov	r2, #3
 197 0106 1A70     		strb	r2, [r3]
 198              		.loc 1 660 0
 199 0108 2CE0     		b	.L15
 200              	.L12:
 661:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 662:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #if(I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST)
 663:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     case I2CVuggesystem_EZI2C_FSM_OFFSET_HI8:
 664:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 665:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Store high byte of offset */
 666:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         locOffset = (uint8) locByte;
 667:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 668:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_fsmState  = I2CVuggesystem_EZI2C_FSM_OFFSET_LO8;
 669:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 670:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         break;
 671:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #endif /* (I2CVuggesystem_SUB_ADDRESS_SIZE16_CONST) */
 672:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 673:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     case I2CVuggesystem_EZI2C_FSM_OFFSET_LO8:
 674:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 675:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         #if(I2CVuggesystem_SUB_ADDRESS_SIZE16)
 676:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 677:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Append offset with high byte */
 678:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             locByte = ((uint32) ((uint32) locOffset << 8u)) | locByte;
 679:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 680:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         #endif
 681:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 682:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Check if offset within buffer range */
 683:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         if(locByte < (uint32) I2CVuggesystem_bufSizeBuf1)
 201              		.loc 1 683 0
 202 010a 6D4B     		ldr	r3, .L27+56
 203 010c 1B88     		ldrh	r3, [r3]
 204 010e 1A1C     		mov	r2, r3
 205 0110 FB68     		ldr	r3, [r7, #12]
 206 0112 9A42     		cmp	r2, r3
 207 0114 0BD9     		bls	.L16
 684:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 685:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Store and sets received offset */
 686:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_offsetBuf1 = (uint8) locByte;
 208              		.loc 1 686 0
 209 0116 FB68     		ldr	r3, [r7, #12]
 210 0118 DAB2     		uxtb	r2, r3
 211 011a 614B     		ldr	r3, .L27+24
 212 011c 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_indexBuf1  = (uint16) locByte;
 213              		.loc 1 687 0
 214 011e FB68     		ldr	r3, [r7, #12]
 215 0120 9AB2     		uxth	r2, r3
 216 0122 604B     		ldr	r3, .L27+28
 217 0124 1A80     		strh	r2, [r3]
 688:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 689:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Move FSM to data receive state */
 690:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_BYTE_WRITE;
 218              		.loc 1 690 0
 219 0126 5D4B     		ldr	r3, .L27+20
 220 0128 0122     		mov	r2, #1
 221 012a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 17


 691:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 692:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         else
 693:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         {
 694:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Reset index due to TX FIFO fill */
 695:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_indexBuf1 = (uint16) I2CVuggesystem_offsetBuf1;
 696:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 697:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             /* Discard current byte and sets FSM state to default to discard follow
 698:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_WAIT_STOP;
 699:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         }
 700:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 701:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         break;
 222              		.loc 1 701 0
 223 012c 1AE0     		b	.L15
 224              	.L16:
 695:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_indexBuf1 = (uint16) I2CVuggesystem_offsetBuf1;
 225              		.loc 1 695 0
 226 012e 5C4B     		ldr	r3, .L27+24
 227 0130 1B78     		ldrb	r3, [r3]
 228 0132 1A1C     		mov	r2, r3
 229 0134 5B4B     		ldr	r3, .L27+28
 230 0136 1A80     		strh	r2, [r3]
 698:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                             I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_WAIT_STOP;
 231              		.loc 1 698 0
 232 0138 584B     		ldr	r3, .L27+20
 233 013a 0322     		mov	r2, #3
 234 013c 1A70     		strb	r2, [r3]
 235              		.loc 1 701 0
 236 013e 11E0     		b	.L15
 237              	.L11:
 702:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 703:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     case I2CVuggesystem_EZI2C_FSM_WAIT_STOP:
 704:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Clear RX FIFO to discard all received data */
 705:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_CLEAR_RX_FIFO;
 238              		.loc 1 705 0
 239 0140 604B     		ldr	r3, .L27+60
 240 0142 604A     		ldr	r2, .L27+60
 241 0144 1268     		ldr	r2, [r2]
 242 0146 8021     		mov	r1, #128
 243 0148 4902     		lsl	r1, r1, #9
 244 014a 0A43     		orr	r2, r1
 245 014c 1A60     		str	r2, [r3]
 246 014e 5D4B     		ldr	r3, .L27+60
 247 0150 5C4A     		ldr	r2, .L27+60
 248 0152 1168     		ldr	r1, [r2]
 249 0154 5C4A     		ldr	r2, .L27+64
 250 0156 0A40     		and	r2, r1
 251 0158 1A60     		str	r2, [r3]
 706:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 707:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         break;
 252              		.loc 1 707 0
 253 015a 03E0     		b	.L15
 254              	.L26:
 708:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 709:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     default:
 710:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         CYASSERT(0u != 0u); /* Should never get there */
 255              		.loc 1 710 0
 256 015c 0020     		mov	r0, #0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 18


 257 015e FFF7FEFF 		bl	CyHalt
 711:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         break;
 258              		.loc 1 711 0
 259 0162 C046     		mov	r8, r8
 260              	.L15:
 712:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 713:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 714:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 715:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 while(0u != I2CVuggesystem_GET_RX_FIFO_ENTRIES);
 261              		.loc 1 715 0
 262 0164 594B     		ldr	r3, .L27+68
 263 0166 1A68     		ldr	r2, [r3]
 264 0168 0F23     		mov	r3, #15
 265 016a 1340     		and	r3, r2
 266 016c A8D1     		bne	.L18
 716:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 717:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearRxInterruptSource(I2CVuggesystem_INTR_RX_NOT_EMPTY);
 267              		.loc 1 717 0
 268 016e 4F4B     		ldr	r3, .L27+36
 269 0170 0422     		mov	r2, #4
 270 0172 1A60     		str	r2, [r3]
 271              	.L8:
 718:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 719:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 720:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 721:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_SLAVE.I2C_START */
 722:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Catches start of transfer to trigger TX FIFO update event */
 723:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_START))
 272              		.loc 1 723 0
 273 0174 3A68     		ldr	r2, [r7]
 274 0176 2023     		mov	r3, #32
 275 0178 1340     		and	r3, r2
 276 017a 2BD0     		beq	.L19
 724:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 725:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #if(!I2CVuggesystem_CY_SCBIP_V0)
 726:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #if(I2CVuggesystem_EZI2C_EC_AM_ENABLE)
 727:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 728:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Manage INTR_I2C_EC.WAKE_UP as slave busy status */
 729:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_ClearI2CExtClkInterruptSource(I2CVuggesystem_INTR_I2C_EC_WAKE_UP
 730:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 731:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #else
 732:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 733:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 734:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_I2C_ADDR_MAT
 735:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 736:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #endif
 737:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #else
 738:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 739:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearSlaveInterruptSource(I2CVuggesystem_INTR_SLAVE_I2C_ADDR_MATCH);
 277              		.loc 1 739 0
 278 017c 434B     		ldr	r3, .L27+4
 279 017e 4022     		mov	r2, #64
 280 0180 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #endif /* (I2CVuggesystem_CY_SCBIP_V0) */
 741:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 742:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Clear TX FIFO and put a byte */
 743:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_CLEAR_TX_FIFO;
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 19


 281              		.loc 1 743 0
 282 0182 534B     		ldr	r3, .L27+72
 283 0184 524A     		ldr	r2, .L27+72
 284 0186 1268     		ldr	r2, [r2]
 285 0188 8021     		mov	r1, #128
 286 018a 4902     		lsl	r1, r1, #9
 287 018c 0A43     		orr	r2, r1
 288 018e 1A60     		str	r2, [r3]
 289 0190 4F4B     		ldr	r3, .L27+72
 290 0192 4F4A     		ldr	r2, .L27+72
 291 0194 1168     		ldr	r1, [r2]
 292 0196 4C4A     		ldr	r2, .L27+64
 293 0198 0A40     		and	r2, r1
 294 019a 1A60     		str	r2, [r3]
 744:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_TX_FIFO_WR_REG = (uint32) I2CVuggesystem_dataBuffer1[I2CVuggesystem_
 295              		.loc 1 744 0
 296 019c 4D4B     		ldr	r3, .L27+76
 297 019e 474A     		ldr	r2, .L27+52
 298 01a0 1168     		ldr	r1, [r2]
 299 01a2 3F4A     		ldr	r2, .L27+24
 300 01a4 1278     		ldrb	r2, [r2]
 301 01a6 8A18     		add	r2, r1, r2
 302 01a8 1278     		ldrb	r2, [r2]
 303 01aa D2B2     		uxtb	r2, r2
 304 01ac 1A60     		str	r2, [r3]
 745:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 746:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Store buffer index to be handled by INTR_SLAVE.I2C_STOP */
 747:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 locByte = (uint32) I2CVuggesystem_indexBuf1;
 305              		.loc 1 747 0
 306 01ae 3D4B     		ldr	r3, .L27+28
 307 01b0 1B88     		ldrh	r3, [r3]
 308 01b2 FB60     		str	r3, [r7, #12]
 748:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 749:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Update index: one byte is already in the TX FIFO */
 750:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_indexBuf1 = (uint16) I2CVuggesystem_offsetBuf1 + 1u;
 309              		.loc 1 750 0
 310 01b4 3A4B     		ldr	r3, .L27+24
 311 01b6 1B78     		ldrb	r3, [r3]
 312 01b8 0133     		add	r3, r3, #1
 313 01ba 9AB2     		uxth	r2, r3
 314 01bc 394B     		ldr	r3, .L27+28
 315 01be 1A80     		strh	r2, [r3]
 751:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 752:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Enable INTR_TX.NOT_FULL to load TX FIFO */
 753:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_SetTxInterruptMode(I2CVuggesystem_INTR_TX_TRIGGER);
 316              		.loc 1 753 0
 317 01c0 394B     		ldr	r3, .L27+32
 318 01c2 0122     		mov	r2, #1
 319 01c4 1A60     		str	r2, [r3]
 754:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 755:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Clear locIntrSlave after INTR.TX_TRIGGER is enabled */
 756:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearSlaveInterruptSource(locIntrSlave);
 320              		.loc 1 756 0
 321 01c6 314B     		ldr	r3, .L27+4
 322 01c8 3A68     		ldr	r2, [r7]
 323 01ca 1A60     		str	r2, [r3]
 757:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 20


 758:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 locIntrCause |= I2CVuggesystem_INTR_CAUSE_TX;
 324              		.loc 1 758 0
 325 01cc 7B68     		ldr	r3, [r7, #4]
 326 01ce 0422     		mov	r2, #4
 327 01d0 1343     		orr	r3, r2
 328 01d2 7B60     		str	r3, [r7, #4]
 329              	.L19:
 759:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 760:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 761:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 762:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_TX.TRIGGER */
 763:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The TX FIFO is loaded wit
 764:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             *  until used entries are less than I2CVuggesystem_TX_LOAD_SIZE. If index reaches end o
 765:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             *  buffer the 0xFF is sent to the end of transfer.
 766:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             */
 767:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_TX))
 330              		.loc 1 767 0
 331 01d4 7A68     		ldr	r2, [r7, #4]
 332 01d6 0423     		mov	r3, #4
 333 01d8 1340     		and	r3, r2
 334 01da 21D0     		beq	.L20
 335              	.L23:
 768:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 769:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is room */
 770:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 do
 771:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 772:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Check transmit buffer range */
 773:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     if(I2CVuggesystem_indexBuf1 < I2CVuggesystem_bufSizeBuf1)
 336              		.loc 1 773 0
 337 01dc 314B     		ldr	r3, .L27+28
 338 01de 1A88     		ldrh	r2, [r3]
 339 01e0 374B     		ldr	r3, .L27+56
 340 01e2 1B88     		ldrh	r3, [r3]
 341 01e4 9A42     		cmp	r2, r3
 342 01e6 0FD2     		bcs	.L21
 774:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 775:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_TX_FIFO_WR_REG = (uint32) I2CVuggesystem_dataBuffer1[I2CVugg
 343              		.loc 1 775 0
 344 01e8 3A4B     		ldr	r3, .L27+76
 345 01ea 344A     		ldr	r2, .L27+52
 346 01ec 1168     		ldr	r1, [r2]
 347 01ee 2D4A     		ldr	r2, .L27+28
 348 01f0 1288     		ldrh	r2, [r2]
 349 01f2 8A18     		add	r2, r1, r2
 350 01f4 1278     		ldrb	r2, [r2]
 351 01f6 D2B2     		uxtb	r2, r2
 352 01f8 1A60     		str	r2, [r3]
 776:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_indexBuf1++;
 353              		.loc 1 776 0
 354 01fa 2A4B     		ldr	r3, .L27+28
 355 01fc 1B88     		ldrh	r3, [r3]
 356 01fe 0133     		add	r3, r3, #1
 357 0200 9AB2     		uxth	r2, r3
 358 0202 284B     		ldr	r3, .L27+28
 359 0204 1A80     		strh	r2, [r3]
 360 0206 02E0     		b	.L22
 361              	.L21:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 21


 777:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 778:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     else
 779:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 780:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_TX_FIFO_WR_REG = I2CVuggesystem_EZI2C_OVFL_RETURN;
 362              		.loc 1 780 0
 363 0208 324B     		ldr	r3, .L27+76
 364 020a FF22     		mov	r2, #255
 365 020c 1A60     		str	r2, [r3]
 366              	.L22:
 781:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 782:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 783:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 784:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 while(I2CVuggesystem_TX_LOAD_SIZE != I2CVuggesystem_GET_TX_FIFO_ENTRIES);
 367              		.loc 1 784 0
 368 020e 324B     		ldr	r3, .L27+80
 369 0210 1A68     		ldr	r2, [r3]
 370 0212 0F23     		mov	r3, #15
 371 0214 1340     		and	r3, r2
 372 0216 022B     		cmp	r3, #2
 373 0218 E0D1     		bne	.L23
 785:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 786:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_ClearTxInterruptSource(I2CVuggesystem_INTR_TX_TRIGGER);
 374              		.loc 1 786 0
 375 021a 304B     		ldr	r3, .L27+84
 376 021c 0122     		mov	r2, #1
 377 021e 1A60     		str	r2, [r3]
 378              	.L20:
 787:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 788:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 789:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 790:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* INTR_SLAVE.I2C_STOP */
 791:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             /* Catch completion of write or read transfer. */
 792:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             if(0u != (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_STOP))
 379              		.loc 1 792 0
 380 0220 3A68     		ldr	r2, [r7]
 381 0222 1023     		mov	r3, #16
 382 0224 1340     		and	r3, r2
 383 0226 2CD0     		beq	.L1
 793:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 794:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u == (locIntrSlave & I2CVuggesystem_INTR_SLAVE_I2C_START))
 384              		.loc 1 794 0
 385 0228 3A68     		ldr	r2, [r7]
 386 022a 2023     		mov	r3, #32
 387 022c 1340     		and	r3, r2
 388 022e 05D1     		bne	.L24
 795:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 796:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #if(!I2CVuggesystem_CY_SCBIP_V0)
 797:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #if(I2CVuggesystem_EZI2C_EC_AM_ENABLE)
 798:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     {
 799:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         /* Manage INTR_I2C_EC.WAKE_UP as slave busy status */
 800:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                         I2CVuggesystem_ClearI2CExtClkInterruptSource(I2CVuggesystem_INTR_I2C_EC_WAK
 801:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     }
 802:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     #endif
 803:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 #endif /* (!I2CVuggesystem_CY_SCBIP_V0) */
 804:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 805:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Manage INTR_SLAVE.I2C_ADDR_MATCH as slave busy status */
 806:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_ClearSlaveInterruptSource(locIntrSlave);
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 22


 389              		.loc 1 806 0
 390 0230 164B     		ldr	r3, .L27+4
 391 0232 3A68     		ldr	r2, [r7]
 392 0234 1A60     		str	r2, [r3]
 807:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 808:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Read current buffer index */
 809:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locByte = (uint32) I2CVuggesystem_indexBuf1;
 393              		.loc 1 809 0
 394 0236 1B4B     		ldr	r3, .L27+28
 395 0238 1B88     		ldrh	r3, [r3]
 396 023a FB60     		str	r3, [r7, #12]
 397              	.L24:
 810:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 811:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 812:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Set read completion mask */
 813:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 locStatus = I2CVuggesystem_INTR_SLAVE_I2C_NACK;
 398              		.loc 1 813 0
 399 023c 0223     		mov	r3, #2
 400 023e BB60     		str	r3, [r7, #8]
 814:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 815:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if((locByte != I2CVuggesystem_offsetBuf1) &&
 401              		.loc 1 815 0
 402 0240 174B     		ldr	r3, .L27+24
 403 0242 1B78     		ldrb	r3, [r3]
 404 0244 1A1C     		mov	r2, r3
 405 0246 FB68     		ldr	r3, [r7, #12]
 406 0248 9A42     		cmp	r2, r3
 407 024a 0AD0     		beq	.L25
 816:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                    (0u != (I2CVuggesystem_EZI2C_FSM_WRITE_MASK & I2CVuggesystem_fsmState)))
 408              		.loc 1 816 0 discriminator 1
 409 024c 134B     		ldr	r3, .L27+20
 410 024e 1A78     		ldrb	r2, [r3]
 411 0250 0123     		mov	r3, #1
 412 0252 1340     		and	r3, r2
 413 0254 DBB2     		uxtb	r3, r3
 815:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if((locByte != I2CVuggesystem_offsetBuf1) &&
 414              		.loc 1 815 0 discriminator 1
 415 0256 002B     		cmp	r3, #0
 416 0258 03D0     		beq	.L25
 817:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 818:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     /* Set write completion mask */
 819:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     locStatus |= I2CVuggesystem_INTR_SLAVE_I2C_WRITE_STOP;
 417              		.loc 1 819 0
 418 025a BB68     		ldr	r3, [r7, #8]
 419 025c 0822     		mov	r2, #8
 420 025e 1343     		orr	r3, r2
 421 0260 BB60     		str	r3, [r7, #8]
 422              	.L25:
 820:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 821:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 822:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Set completion flags in the status variable */
 823:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_curStatus |= (uint8) (locStatus & locIntrSlave);
 423              		.loc 1 823 0
 424 0262 BB68     		ldr	r3, [r7, #8]
 425 0264 DBB2     		uxtb	r3, r3
 426 0266 3A68     		ldr	r2, [r7]
 427 0268 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 23


 428 026a 1340     		and	r3, r2
 429 026c DAB2     		uxtb	r2, r3
 430 026e 0A4B     		ldr	r3, .L27+16
 431 0270 1B78     		ldrb	r3, [r3]
 432 0272 DBB2     		uxtb	r3, r3
 433 0274 1343     		orr	r3, r2
 434 0276 DAB2     		uxtb	r2, r3
 435 0278 074B     		ldr	r3, .L27+16
 436 027a 1A70     		strb	r2, [r3]
 824:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 825:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 I2CVuggesystem_fsmState = I2CVuggesystem_EZI2C_FSM_IDLE;
 437              		.loc 1 825 0
 438 027c 074B     		ldr	r3, .L27+20
 439 027e 0022     		mov	r2, #0
 440 0280 1A70     		strb	r2, [r3]
 441              	.L1:
 826:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 827:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 828:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c **** 
 829:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #if(!I2CVuggesystem_CY_SCBIP_V0)
 830:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #if(I2CVuggesystem_EZI2C_EC_AM_ENABLE)
 831:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             {
 832:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* INTR_I2C_EC.WAKE_UP */
 833:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 /* Wake up device from deep sleep on address match event. The matched address is NA
 834:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 if(0u != (locIntrCause & I2CVuggesystem_INTR_CAUSE_I2C_EC))
 835:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 {
 836:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_I2C_SLAVE_GENERATE_NACK; /* NACK in active mode */
 837:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                     I2CVuggesystem_ClearI2CExtClkInterruptSource(I2CVuggesystem_INTR_I2C_EC_WAKE_UP
 838:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****                 }
 839:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             }
 840:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****             #endif
 841:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         #endif /* (!I2CVuggesystem_CY_SCBIP_V0) */
 842:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****         }
 843:.\Generated_Source\PSoC4/I2CVuggesystem_EZI2C_INT.c ****     }
 442              		.loc 1 843 0
 443 0282 BD46     		mov	sp, r7
 444 0284 04B0     		add	sp, sp, #16
 445              		@ sp needed
 446 0286 80BD     		pop	{r7, pc}
 447              	.L28:
 448              		.align	2
 449              	.L27:
 450 0288 00000000 		.word	I2CVuggesystem_customIntrHandler
 451 028c 400F0640 		.word	1074138944
 452 0290 000E0640 		.word	1074138624
 453 0294 00000640 		.word	1074135040
 454 0298 00000000 		.word	I2CVuggesystem_curStatus
 455 029c 00000000 		.word	I2CVuggesystem_fsmState
 456 02a0 00000000 		.word	I2CVuggesystem_offsetBuf1
 457 02a4 00000000 		.word	I2CVuggesystem_indexBuf1
 458 02a8 880F0640 		.word	1074139016
 459 02ac C00F0640 		.word	1074139072
 460 02b0 FF0F0000 		.word	4095
 461 02b4 40030640 		.word	1074135872
 462 02b8 00000000 		.word	I2CVuggesystem_protectBuf1
 463 02bc 00000000 		.word	I2CVuggesystem_dataBuffer1
 464 02c0 00000000 		.word	I2CVuggesystem_bufSizeBuf1
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 24


 465 02c4 04030640 		.word	1074135812
 466 02c8 FFFFFEFF 		.word	-65537
 467 02cc 08030640 		.word	1074135816
 468 02d0 04020640 		.word	1074135556
 469 02d4 40020640 		.word	1074135616
 470 02d8 08020640 		.word	1074135560
 471 02dc 800F0640 		.word	1074139008
 472              		.cfi_endproc
 473              	.LFE0:
 474              		.size	I2CVuggesystem_EZI2C_NO_STRETCH_ISR, .-I2CVuggesystem_EZI2C_NO_STRETCH_ISR
 475              		.text
 476              	.Letext0:
 477              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 478              		.file 3 ".\\Generated_Source\\PSoC4\\I2CVuggesystem_PVT.h"
 479              		.file 4 ".\\Generated_Source\\PSoC4\\I2CVuggesystem_EZI2C_PVT.h"
 480              		.section	.debug_info,"",%progbits
 481              	.Ldebug_info0:
 482 0000 7F010000 		.4byte	0x17f
 483 0004 0400     		.2byte	0x4
 484 0006 00000000 		.4byte	.Ldebug_abbrev0
 485 000a 04       		.byte	0x4
 486 000b 01       		.uleb128 0x1
 487 000c BA000000 		.4byte	.LASF30
 488 0010 01       		.byte	0x1
 489 0011 21000000 		.4byte	.LASF31
 490 0015 9C020000 		.4byte	.LASF32
 491 0019 00000000 		.4byte	.Ldebug_ranges0+0
 492 001d 00000000 		.4byte	0
 493 0021 00000000 		.4byte	.Ldebug_line0
 494 0025 02       		.uleb128 0x2
 495 0026 01       		.byte	0x1
 496 0027 06       		.byte	0x6
 497 0028 88020000 		.4byte	.LASF0
 498 002c 02       		.uleb128 0x2
 499 002d 01       		.byte	0x1
 500 002e 08       		.byte	0x8
 501 002f 57010000 		.4byte	.LASF1
 502 0033 02       		.uleb128 0x2
 503 0034 02       		.byte	0x2
 504 0035 05       		.byte	0x5
 505 0036 4F020000 		.4byte	.LASF2
 506 003a 02       		.uleb128 0x2
 507 003b 02       		.byte	0x2
 508 003c 07       		.byte	0x7
 509 003d 6D000000 		.4byte	.LASF3
 510 0041 02       		.uleb128 0x2
 511 0042 04       		.byte	0x4
 512 0043 05       		.byte	0x5
 513 0044 7F020000 		.4byte	.LASF4
 514 0048 02       		.uleb128 0x2
 515 0049 04       		.byte	0x4
 516 004a 07       		.byte	0x7
 517 004b 6F010000 		.4byte	.LASF5
 518 004f 02       		.uleb128 0x2
 519 0050 08       		.byte	0x8
 520 0051 05       		.byte	0x5
 521 0052 2F020000 		.4byte	.LASF6
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 25


 522 0056 02       		.uleb128 0x2
 523 0057 08       		.byte	0x8
 524 0058 07       		.byte	0x7
 525 0059 02020000 		.4byte	.LASF7
 526 005d 03       		.uleb128 0x3
 527 005e 04       		.byte	0x4
 528 005f 05       		.byte	0x5
 529 0060 696E7400 		.ascii	"int\000"
 530 0064 02       		.uleb128 0x2
 531 0065 04       		.byte	0x4
 532 0066 07       		.byte	0x7
 533 0067 C0010000 		.4byte	.LASF8
 534 006b 04       		.uleb128 0x4
 535 006c 81010000 		.4byte	.LASF9
 536 0070 02       		.byte	0x2
 537 0071 A1       		.byte	0xa1
 538 0072 2C000000 		.4byte	0x2c
 539 0076 04       		.uleb128 0x4
 540 0077 B2010000 		.4byte	.LASF10
 541 007b 02       		.byte	0x2
 542 007c A2       		.byte	0xa2
 543 007d 3A000000 		.4byte	0x3a
 544 0081 04       		.uleb128 0x4
 545 0082 B9010000 		.4byte	.LASF11
 546 0086 02       		.byte	0x2
 547 0087 A3       		.byte	0xa3
 548 0088 48000000 		.4byte	0x48
 549 008c 02       		.uleb128 0x2
 550 008d 04       		.byte	0x4
 551 008e 04       		.byte	0x4
 552 008f B4000000 		.4byte	.LASF12
 553 0093 02       		.uleb128 0x2
 554 0094 08       		.byte	0x8
 555 0095 04       		.byte	0x4
 556 0096 AB010000 		.4byte	.LASF13
 557 009a 02       		.uleb128 0x2
 558 009b 01       		.byte	0x1
 559 009c 08       		.byte	0x8
 560 009d 3D020000 		.4byte	.LASF14
 561 00a1 05       		.uleb128 0x5
 562 00a2 6B000000 		.4byte	0x6b
 563 00a6 06       		.uleb128 0x6
 564 00a7 00000000 		.4byte	.LASF15
 565 00ab 02       		.byte	0x2
 566 00ac 4D01     		.2byte	0x14d
 567 00ae B2000000 		.4byte	0xb2
 568 00b2 05       		.uleb128 0x5
 569 00b3 81000000 		.4byte	0x81
 570 00b7 06       		.uleb128 0x6
 571 00b8 19020000 		.4byte	.LASF16
 572 00bc 02       		.byte	0x2
 573 00bd 5D01     		.2byte	0x15d
 574 00bf C3000000 		.4byte	0xc3
 575 00c3 07       		.uleb128 0x7
 576 00c4 04       		.byte	0x4
 577 00c5 C9000000 		.4byte	0xc9
 578 00c9 08       		.uleb128 0x8
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 26


 579 00ca 02       		.uleb128 0x2
 580 00cb 04       		.byte	0x4
 581 00cc 07       		.byte	0x7
 582 00cd 26020000 		.4byte	.LASF17
 583 00d1 09       		.uleb128 0x9
 584 00d2 87010000 		.4byte	.LASF33
 585 00d6 01       		.byte	0x1
 586 00d7 2E02     		.2byte	0x22e
 587 00d9 00000000 		.4byte	.LFB0
 588 00dd E0020000 		.4byte	.LFE0-.LFB0
 589 00e1 01       		.uleb128 0x1
 590 00e2 9C       		.byte	0x9c
 591 00e3 24010000 		.4byte	0x124
 592 00e7 0A       		.uleb128 0xa
 593 00e8 94020000 		.4byte	.LASF18
 594 00ec 01       		.byte	0x1
 595 00ed 3402     		.2byte	0x234
 596 00ef 81000000 		.4byte	0x81
 597 00f3 02       		.uleb128 0x2
 598 00f4 91       		.byte	0x91
 599 00f5 74       		.sleb128 -12
 600 00f6 0A       		.uleb128 0xa
 601 00f7 65010000 		.4byte	.LASF19
 602 00fb 01       		.byte	0x1
 603 00fc 3502     		.2byte	0x235
 604 00fe 81000000 		.4byte	0x81
 605 0102 02       		.uleb128 0x2
 606 0103 91       		.byte	0x91
 607 0104 70       		.sleb128 -16
 608 0105 0A       		.uleb128 0xa
 609 0106 42020000 		.4byte	.LASF20
 610 010a 01       		.byte	0x1
 611 010b 3602     		.2byte	0x236
 612 010d 81000000 		.4byte	0x81
 613 0111 02       		.uleb128 0x2
 614 0112 91       		.byte	0x91
 615 0113 68       		.sleb128 -24
 616 0114 0A       		.uleb128 0xa
 617 0115 72020000 		.4byte	.LASF21
 618 0119 01       		.byte	0x1
 619 011a 3702     		.2byte	0x237
 620 011c 81000000 		.4byte	0x81
 621 0120 02       		.uleb128 0x2
 622 0121 91       		.byte	0x91
 623 0122 6C       		.sleb128 -20
 624 0123 00       		.byte	0
 625 0124 0B       		.uleb128 0xb
 626 0125 36010000 		.4byte	.LASF22
 627 0129 03       		.byte	0x3
 628 012a 39       		.byte	0x39
 629 012b B7000000 		.4byte	0xb7
 630 012f 0B       		.uleb128 0xb
 631 0130 59020000 		.4byte	.LASF23
 632 0134 04       		.byte	0x4
 633 0135 1D       		.byte	0x1d
 634 0136 A1000000 		.4byte	0xa1
 635 013a 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 27


 636 013b 55000000 		.4byte	.LASF24
 637 013f 04       		.byte	0x4
 638 0140 1E       		.byte	0x1e
 639 0141 6B000000 		.4byte	0x6b
 640 0145 0B       		.uleb128 0xb
 641 0146 99000000 		.4byte	.LASF25
 642 014a 04       		.byte	0x4
 643 014b 21       		.byte	0x21
 644 014c 50010000 		.4byte	0x150
 645 0150 07       		.uleb128 0x7
 646 0151 04       		.byte	0x4
 647 0152 A1000000 		.4byte	0xa1
 648 0156 0B       		.uleb128 0xb
 649 0157 CD010000 		.4byte	.LASF26
 650 015b 04       		.byte	0x4
 651 015c 22       		.byte	0x22
 652 015d 76000000 		.4byte	0x76
 653 0161 0B       		.uleb128 0xb
 654 0162 06000000 		.4byte	.LASF27
 655 0166 04       		.byte	0x4
 656 0167 23       		.byte	0x23
 657 0168 76000000 		.4byte	0x76
 658 016c 0B       		.uleb128 0xb
 659 016d E8010000 		.4byte	.LASF28
 660 0171 04       		.byte	0x4
 661 0172 24       		.byte	0x24
 662 0173 6B000000 		.4byte	0x6b
 663 0177 0B       		.uleb128 0xb
 664 0178 80000000 		.4byte	.LASF29
 665 017c 04       		.byte	0x4
 666 017d 25       		.byte	0x25
 667 017e 76000000 		.4byte	0x76
 668 0182 00       		.byte	0
 669              		.section	.debug_abbrev,"",%progbits
 670              	.Ldebug_abbrev0:
 671 0000 01       		.uleb128 0x1
 672 0001 11       		.uleb128 0x11
 673 0002 01       		.byte	0x1
 674 0003 25       		.uleb128 0x25
 675 0004 0E       		.uleb128 0xe
 676 0005 13       		.uleb128 0x13
 677 0006 0B       		.uleb128 0xb
 678 0007 03       		.uleb128 0x3
 679 0008 0E       		.uleb128 0xe
 680 0009 1B       		.uleb128 0x1b
 681 000a 0E       		.uleb128 0xe
 682 000b 55       		.uleb128 0x55
 683 000c 17       		.uleb128 0x17
 684 000d 11       		.uleb128 0x11
 685 000e 01       		.uleb128 0x1
 686 000f 10       		.uleb128 0x10
 687 0010 17       		.uleb128 0x17
 688 0011 00       		.byte	0
 689 0012 00       		.byte	0
 690 0013 02       		.uleb128 0x2
 691 0014 24       		.uleb128 0x24
 692 0015 00       		.byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 28


 693 0016 0B       		.uleb128 0xb
 694 0017 0B       		.uleb128 0xb
 695 0018 3E       		.uleb128 0x3e
 696 0019 0B       		.uleb128 0xb
 697 001a 03       		.uleb128 0x3
 698 001b 0E       		.uleb128 0xe
 699 001c 00       		.byte	0
 700 001d 00       		.byte	0
 701 001e 03       		.uleb128 0x3
 702 001f 24       		.uleb128 0x24
 703 0020 00       		.byte	0
 704 0021 0B       		.uleb128 0xb
 705 0022 0B       		.uleb128 0xb
 706 0023 3E       		.uleb128 0x3e
 707 0024 0B       		.uleb128 0xb
 708 0025 03       		.uleb128 0x3
 709 0026 08       		.uleb128 0x8
 710 0027 00       		.byte	0
 711 0028 00       		.byte	0
 712 0029 04       		.uleb128 0x4
 713 002a 16       		.uleb128 0x16
 714 002b 00       		.byte	0
 715 002c 03       		.uleb128 0x3
 716 002d 0E       		.uleb128 0xe
 717 002e 3A       		.uleb128 0x3a
 718 002f 0B       		.uleb128 0xb
 719 0030 3B       		.uleb128 0x3b
 720 0031 0B       		.uleb128 0xb
 721 0032 49       		.uleb128 0x49
 722 0033 13       		.uleb128 0x13
 723 0034 00       		.byte	0
 724 0035 00       		.byte	0
 725 0036 05       		.uleb128 0x5
 726 0037 35       		.uleb128 0x35
 727 0038 00       		.byte	0
 728 0039 49       		.uleb128 0x49
 729 003a 13       		.uleb128 0x13
 730 003b 00       		.byte	0
 731 003c 00       		.byte	0
 732 003d 06       		.uleb128 0x6
 733 003e 16       		.uleb128 0x16
 734 003f 00       		.byte	0
 735 0040 03       		.uleb128 0x3
 736 0041 0E       		.uleb128 0xe
 737 0042 3A       		.uleb128 0x3a
 738 0043 0B       		.uleb128 0xb
 739 0044 3B       		.uleb128 0x3b
 740 0045 05       		.uleb128 0x5
 741 0046 49       		.uleb128 0x49
 742 0047 13       		.uleb128 0x13
 743 0048 00       		.byte	0
 744 0049 00       		.byte	0
 745 004a 07       		.uleb128 0x7
 746 004b 0F       		.uleb128 0xf
 747 004c 00       		.byte	0
 748 004d 0B       		.uleb128 0xb
 749 004e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 29


 750 004f 49       		.uleb128 0x49
 751 0050 13       		.uleb128 0x13
 752 0051 00       		.byte	0
 753 0052 00       		.byte	0
 754 0053 08       		.uleb128 0x8
 755 0054 15       		.uleb128 0x15
 756 0055 00       		.byte	0
 757 0056 27       		.uleb128 0x27
 758 0057 19       		.uleb128 0x19
 759 0058 00       		.byte	0
 760 0059 00       		.byte	0
 761 005a 09       		.uleb128 0x9
 762 005b 2E       		.uleb128 0x2e
 763 005c 01       		.byte	0x1
 764 005d 3F       		.uleb128 0x3f
 765 005e 19       		.uleb128 0x19
 766 005f 03       		.uleb128 0x3
 767 0060 0E       		.uleb128 0xe
 768 0061 3A       		.uleb128 0x3a
 769 0062 0B       		.uleb128 0xb
 770 0063 3B       		.uleb128 0x3b
 771 0064 05       		.uleb128 0x5
 772 0065 27       		.uleb128 0x27
 773 0066 19       		.uleb128 0x19
 774 0067 11       		.uleb128 0x11
 775 0068 01       		.uleb128 0x1
 776 0069 12       		.uleb128 0x12
 777 006a 06       		.uleb128 0x6
 778 006b 40       		.uleb128 0x40
 779 006c 18       		.uleb128 0x18
 780 006d 9642     		.uleb128 0x2116
 781 006f 19       		.uleb128 0x19
 782 0070 01       		.uleb128 0x1
 783 0071 13       		.uleb128 0x13
 784 0072 00       		.byte	0
 785 0073 00       		.byte	0
 786 0074 0A       		.uleb128 0xa
 787 0075 34       		.uleb128 0x34
 788 0076 00       		.byte	0
 789 0077 03       		.uleb128 0x3
 790 0078 0E       		.uleb128 0xe
 791 0079 3A       		.uleb128 0x3a
 792 007a 0B       		.uleb128 0xb
 793 007b 3B       		.uleb128 0x3b
 794 007c 05       		.uleb128 0x5
 795 007d 49       		.uleb128 0x49
 796 007e 13       		.uleb128 0x13
 797 007f 02       		.uleb128 0x2
 798 0080 18       		.uleb128 0x18
 799 0081 00       		.byte	0
 800 0082 00       		.byte	0
 801 0083 0B       		.uleb128 0xb
 802 0084 34       		.uleb128 0x34
 803 0085 00       		.byte	0
 804 0086 03       		.uleb128 0x3
 805 0087 0E       		.uleb128 0xe
 806 0088 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 30


 807 0089 0B       		.uleb128 0xb
 808 008a 3B       		.uleb128 0x3b
 809 008b 0B       		.uleb128 0xb
 810 008c 49       		.uleb128 0x49
 811 008d 13       		.uleb128 0x13
 812 008e 3F       		.uleb128 0x3f
 813 008f 19       		.uleb128 0x19
 814 0090 3C       		.uleb128 0x3c
 815 0091 19       		.uleb128 0x19
 816 0092 00       		.byte	0
 817 0093 00       		.byte	0
 818 0094 00       		.byte	0
 819              		.section	.debug_aranges,"",%progbits
 820 0000 1C000000 		.4byte	0x1c
 821 0004 0200     		.2byte	0x2
 822 0006 00000000 		.4byte	.Ldebug_info0
 823 000a 04       		.byte	0x4
 824 000b 00       		.byte	0
 825 000c 0000     		.2byte	0
 826 000e 0000     		.2byte	0
 827 0010 00000000 		.4byte	.LFB0
 828 0014 E0020000 		.4byte	.LFE0-.LFB0
 829 0018 00000000 		.4byte	0
 830 001c 00000000 		.4byte	0
 831              		.section	.debug_ranges,"",%progbits
 832              	.Ldebug_ranges0:
 833 0000 00000000 		.4byte	.LFB0
 834 0004 E0020000 		.4byte	.LFE0
 835 0008 00000000 		.4byte	0
 836 000c 00000000 		.4byte	0
 837              		.section	.debug_line,"",%progbits
 838              	.Ldebug_line0:
 839 0000 16010000 		.section	.debug_str,"MS",%progbits,1
 839      02008D00 
 839      00000201 
 839      FB0E0D00 
 839      01010101 
 840              	.LASF15:
 841 0000 72656733 		.ascii	"reg32\000"
 841      3200
 842              	.LASF27:
 843 0006 49324356 		.ascii	"I2CVuggesystem_protectBuf1\000"
 843      75676765 
 843      73797374 
 843      656D5F70 
 843      726F7465 
 844              	.LASF31:
 845 0021 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\I2CVuggesystem_EZI2C_IN"
 845      6E657261 
 845      7465645F 
 845      536F7572 
 845      63655C50 
 846 0051 542E6300 		.ascii	"T.c\000"
 847              	.LASF24:
 848 0055 49324356 		.ascii	"I2CVuggesystem_fsmState\000"
 848      75676765 
 848      73797374 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 31


 848      656D5F66 
 848      736D5374 
 849              	.LASF3:
 850 006d 73686F72 		.ascii	"short unsigned int\000"
 850      7420756E 
 850      7369676E 
 850      65642069 
 850      6E7400
 851              	.LASF29:
 852 0080 49324356 		.ascii	"I2CVuggesystem_indexBuf1\000"
 852      75676765 
 852      73797374 
 852      656D5F69 
 852      6E646578 
 853              	.LASF25:
 854 0099 49324356 		.ascii	"I2CVuggesystem_dataBuffer1\000"
 854      75676765 
 854      73797374 
 854      656D5F64 
 854      61746142 
 855              	.LASF12:
 856 00b4 666C6F61 		.ascii	"float\000"
 856      7400
 857              	.LASF30:
 858 00ba 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 858      4320342E 
 858      382E3420 
 858      32303134 
 858      30353236 
 859 00ed 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 859      20726576 
 859      6973696F 
 859      6E203231 
 859      31333538 
 860 0120 30202D66 		.ascii	"0 -ffunction-sections\000"
 860      66756E63 
 860      74696F6E 
 860      2D736563 
 860      74696F6E 
 861              	.LASF22:
 862 0136 49324356 		.ascii	"I2CVuggesystem_customIntrHandler\000"
 862      75676765 
 862      73797374 
 862      656D5F63 
 862      7573746F 
 863              	.LASF1:
 864 0157 756E7369 		.ascii	"unsigned char\000"
 864      676E6564 
 864      20636861 
 864      7200
 865              	.LASF19:
 866 0165 6C6F6353 		.ascii	"locStatus\000"
 866      74617475 
 866      7300
 867              	.LASF5:
 868 016f 6C6F6E67 		.ascii	"long unsigned int\000"
 868      20756E73 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 32


 868      69676E65 
 868      6420696E 
 868      7400
 869              	.LASF9:
 870 0181 75696E74 		.ascii	"uint8\000"
 870      3800
 871              	.LASF33:
 872 0187 49324356 		.ascii	"I2CVuggesystem_EZI2C_NO_STRETCH_ISR\000"
 872      75676765 
 872      73797374 
 872      656D5F45 
 872      5A493243 
 873              	.LASF13:
 874 01ab 646F7562 		.ascii	"double\000"
 874      6C6500
 875              	.LASF10:
 876 01b2 75696E74 		.ascii	"uint16\000"
 876      313600
 877              	.LASF11:
 878 01b9 75696E74 		.ascii	"uint32\000"
 878      333200
 879              	.LASF8:
 880 01c0 756E7369 		.ascii	"unsigned int\000"
 880      676E6564 
 880      20696E74 
 880      00
 881              	.LASF26:
 882 01cd 49324356 		.ascii	"I2CVuggesystem_bufSizeBuf1\000"
 882      75676765 
 882      73797374 
 882      656D5F62 
 882      75665369 
 883              	.LASF28:
 884 01e8 49324356 		.ascii	"I2CVuggesystem_offsetBuf1\000"
 884      75676765 
 884      73797374 
 884      656D5F6F 
 884      66667365 
 885              	.LASF7:
 886 0202 6C6F6E67 		.ascii	"long long unsigned int\000"
 886      206C6F6E 
 886      6720756E 
 886      7369676E 
 886      65642069 
 887              	.LASF16:
 888 0219 63796973 		.ascii	"cyisraddress\000"
 888      72616464 
 888      72657373 
 888      00
 889              	.LASF17:
 890 0226 73697A65 		.ascii	"sizetype\000"
 890      74797065 
 890      00
 891              	.LASF6:
 892 022f 6C6F6E67 		.ascii	"long long int\000"
 892      206C6F6E 
 892      6720696E 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccb5pOAd.s 			page 33


 892      7400
 893              	.LASF14:
 894 023d 63686172 		.ascii	"char\000"
 894      00
 895              	.LASF20:
 896 0242 6C6F6349 		.ascii	"locIntrSlave\000"
 896      6E747253 
 896      6C617665 
 896      00
 897              	.LASF2:
 898 024f 73686F72 		.ascii	"short int\000"
 898      7420696E 
 898      7400
 899              	.LASF23:
 900 0259 49324356 		.ascii	"I2CVuggesystem_curStatus\000"
 900      75676765 
 900      73797374 
 900      656D5F63 
 900      75725374 
 901              	.LASF21:
 902 0272 6C6F6349 		.ascii	"locIntrCause\000"
 902      6E747243 
 902      61757365 
 902      00
 903              	.LASF4:
 904 027f 6C6F6E67 		.ascii	"long int\000"
 904      20696E74 
 904      00
 905              	.LASF0:
 906 0288 7369676E 		.ascii	"signed char\000"
 906      65642063 
 906      68617200 
 907              	.LASF18:
 908 0294 6C6F6342 		.ascii	"locByte\000"
 908      79746500 
 909              	.LASF32:
 910 029c 433A5C55 		.ascii	"C:\\Users\\Jeppe\\Documents\\Engineer\\4_Semester\\"
 910      73657273 
 910      5C4A6570 
 910      70655C44 
 910      6F63756D 
 911 02c9 45345052 		.ascii	"E4PRJ4\\Implementering\\Vuggesystem\\vuggeControl\\"
 911      4A345C49 
 911      6D706C65 
 911      6D656E74 
 911      6572696E 
 912 02f8 76756767 		.ascii	"vuggeControl.cydsn\000"
 912      65436F6E 
 912      74726F6C 
 912      2E637964 
 912      736E00
 913              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
