ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"sensorFortolker.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	imuInitArray
  18              		.section	.rodata
  19              		.align	2
  20              		.type	imuInitArray, %object
  21              		.size	imuInitArray, 10
  22              	imuInitArray:
  23 0000 19       		.byte	25
  24 0001 04       		.byte	4
  25 0002 1A       		.byte	26
  26 0003 05       		.byte	5
  27 0004 1B       		.byte	27
  28 0005 18       		.byte	24
  29 0006 1C       		.byte	28
  30 0007 08       		.byte	8
  31 0008 6B       		.byte	107
  32 0009 01       		.byte	1
  33              		.global	dataReady
  34 000a 0000     		.bss
  35              		.type	dataReady, %object
  36              		.size	dataReady, 1
  37              	dataReady:
  38 0000 00       		.space	1
  39              		.global	endstop_
  40              		.type	endstop_, %object
  41              		.size	endstop_, 1
  42              	endstop_:
  43 0001 00       		.space	1
  44              		.global	accData
  45 0002 0000     		.align	2
  46              		.type	accData, %object
  47              		.size	accData, 8
  48              	accData:
  49 0004 00000000 		.space	8
  49      00000000 
  50              		.global	gyroData
  51              		.align	2
  52              		.type	gyroData, %object
  53              		.size	gyroData, 4
  54              	gyroData:
  55 000c 00000000 		.space	4
  56              		.global	prevAng
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 2


  57              		.align	2
  58              		.type	prevAng, %object
  59              		.size	prevAng, 4
  60              	prevAng:
  61 0010 00000000 		.space	4
  62              		.global	accAng
  63              		.align	2
  64              		.type	accAng, %object
  65              		.size	accAng, 4
  66              	accAng:
  67 0014 00000000 		.space	4
  68              		.global	estAng
  69              		.align	2
  70              		.type	estAng, %object
  71              		.size	estAng, 4
  72              	estAng:
  73 0018 00000000 		.space	4
  74              		.global	stallCount
  75              		.type	stallCount, %object
  76              		.size	stallCount, 1
  77              	stallCount:
  78 001c 00       		.space	1
  79 001d 000000   		.section	.text.initSensors,"ax",%progbits
  80              		.align	2
  81              		.global	initSensors
  82              		.code	16
  83              		.thumb_func
  84              		.type	initSensors, %function
  85              	initSensors:
  86              	.LFB33:
  87              		.file 1 ".\\sensorFortolker.c"
   1:.\sensorFortolker.c **** /* ========================================
   2:.\sensorFortolker.c ****  *
   3:.\sensorFortolker.c ****  * Copyright Baby Watch, 2015
   4:.\sensorFortolker.c ****  * All Rights Reserved
   5:.\sensorFortolker.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\sensorFortolker.c ****  *
   7:.\sensorFortolker.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\sensorFortolker.c ****  * WHICH IS THE PROPERTY OF Baby Watch.
   9:.\sensorFortolker.c ****  *
  10:.\sensorFortolker.c ****  * ========================================
  11:.\sensorFortolker.c **** */
  12:.\sensorFortolker.c **** //========================================================================
  13:.\sensorFortolker.c **** // FILENAME : sensorFortolker.c
  14:.\sensorFortolker.c **** // CREATED : 03-03-2015
  15:.\sensorFortolker.c **** // AUTHOR  : Jeppe Hofni
  16:.\sensorFortolker.c **** // DESCR.  : c file for PSoC4
  17:.\sensorFortolker.c **** //
  18:.\sensorFortolker.c **** //------------------------------------------------------------------------
  19:.\sensorFortolker.c **** //
  20:.\sensorFortolker.c **** // REV.  DATE/AUTHOR  CHANGE DESCRIPTION
  21:.\sensorFortolker.c **** // 0.1  03-03-2015 - Jeppe - First writeup of vuggeControl.c
  22:.\sensorFortolker.c **** // 0.2	30-04-2015 - Jeppe - getEndstopGPIO implemented
  23:.\sensorFortolker.c **** // 0.3	23-05-2015 - Felix Blix - Proper implemented
  24:.\sensorFortolker.c **** //------------------------------------------------------------------------
  25:.\sensorFortolker.c **** // KNOWN ISSUES:
  26:.\sensorFortolker.c **** // REV. - ISSUE(S)
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 3


  27:.\sensorFortolker.c **** // 0.1 - Needs to be sorted proper
  28:.\sensorFortolker.c **** // 0.2 - SensorFortolker needs finished implementation
  29:.\sensorFortolker.c **** // 0.3 - Motor positionssensor not implemented
  30:.\sensorFortolker.c **** //========================================================================
  31:.\sensorFortolker.c **** 
  32:.\sensorFortolker.c **** //includes
  33:.\sensorFortolker.c **** #include "sensorFortolker.h"
  34:.\sensorFortolker.c **** #include <stdio.h>
  35:.\sensorFortolker.c **** #include <fixedMath.h>
  36:.\sensorFortolker.c **** #include "globals.h"
  37:.\sensorFortolker.c **** 
  38:.\sensorFortolker.c **** /*        -------------------        MACROS       --------------------          */
  39:.\sensorFortolker.c **** //sample rate and sample period
  40:.\sensorFortolker.c **** #define FS 200
  41:.\sensorFortolker.c **** #define DT 328 // 65536/FS //dt defined as a 16.16 fixed point number
  42:.\sensorFortolker.c **** 
  43:.\sensorFortolker.c **** /* The scale factor of the mpu6050 gyroscope is 16.4 Lsb per    *
  44:.\sensorFortolker.c ****  * deg/s, converted to 16.16 fixed point. (2^16/16.4  )         */
  45:.\sensorFortolker.c **** #define GYRO_SCALE_FACTOR 3996
  46:.\sensorFortolker.c **** 
  47:.\sensorFortolker.c **** /* The accelerometer scale factor of the mpu6050 accelerometer  *
  48:.\sensorFortolker.c ****  * in the +- 4g range is 8192 Lsb/g, converted to 16.16 fixed   *
  49:.\sensorFortolker.c ****  * point. (2^16/8192)                                           */
  50:.\sensorFortolker.c **** #define ACC_SCALE_FACTOR 8
  51:.\sensorFortolker.c **** 
  52:.\sensorFortolker.c **** #define GYRO_WEIGHT 58982 //0.90 * 2^16
  53:.\sensorFortolker.c **** #define ACC_WEIGHT 6554 // (1 - gyro_weight) * 2^16
  54:.\sensorFortolker.c **** 
  55:.\sensorFortolker.c **** //I2C defines
  56:.\sensorFortolker.c **** #define IMU_ADDRESS 0b1101000 //+1 for alt
  57:.\sensorFortolker.c **** 
  58:.\sensorFortolker.c **** #define GYRO_FIRST_DATA 0x43 //this is X_H which will be followed by X_L
  59:.\sensorFortolker.c **** #define ACC_FIRST_DATA 0x3D //first in seq. Y_H, Y_L, Z_H, Z_L
  60:.\sensorFortolker.c **** 
  61:.\sensorFortolker.c **** #define IMU_INIT_LEN 5
  62:.\sensorFortolker.c **** const uint8_t imuInitArray[IMU_INIT_LEN][2] = {
  63:.\sensorFortolker.c ****     {0x19, 4},              //set the datarate to 200Hz (1kHz/1+4)
  64:.\sensorFortolker.c ****     {0x1A, 5},              //set dlpf freq to 44 and 42 for acc and gyro respectively
  65:.\sensorFortolker.c ****     {0x1B, 24},             //gyro range = +/-2000 deg/s
  66:.\sensorFortolker.c ****     {0x1C, 8},              //acc range = +/-4g
  67:.\sensorFortolker.c ****     {0x6B, 1}               //set clk source to x gyro
  68:.\sensorFortolker.c **** };
  69:.\sensorFortolker.c **** 
  70:.\sensorFortolker.c **** /*        -------------------        END MACROS       --------------------          */
  71:.\sensorFortolker.c **** 
  72:.\sensorFortolker.c **** //flags
  73:.\sensorFortolker.c **** volatile BOOL dataReady = FALSE, endstop_ = FALSE;
  74:.\sensorFortolker.c **** //raw data
  75:.\sensorFortolker.c **** fix16_t accData[2] = {0, 0}, gyroData = 0;
  76:.\sensorFortolker.c **** //calculated angles
  77:.\sensorFortolker.c **** fix16_t prevAng = 0, accAng = 0, estAng = 0;
  78:.\sensorFortolker.c **** uint8_t stallCount = 0;
  79:.\sensorFortolker.c **** 
  80:.\sensorFortolker.c **** 
  81:.\sensorFortolker.c **** 
  82:.\sensorFortolker.c **** /*        --------------        FUNCTION DEFINITIONS       ---------------          */ 
  83:.\sensorFortolker.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 4


  84:.\sensorFortolker.c **** /* Function initSensor         *
  85:.\sensorFortolker.c ****  * Summary:                    *
  86:.\sensorFortolker.c ****  * Initialtes sensorFortolker  *
  87:.\sensorFortolker.c ****  * to operation status         */
  88:.\sensorFortolker.c **** void initSensors()
  89:.\sensorFortolker.c **** {
  88              		.loc 1 89 0
  89              		.cfi_startproc
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 82B0     		sub	sp, sp, #8
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  90:.\sensorFortolker.c ****     /* Start the Components */
  91:.\sensorFortolker.c ****     sensorI2C_Start();
  98              		.loc 1 91 0
  99 0006 FFF7FEFF 		bl	sensorI2C_Start
  92:.\sensorFortolker.c ****     //GYRO_DR_INT_StartEx(gyroDataReadyInterrupt);    
  93:.\sensorFortolker.c ****     Endstop_isr_StartEx(EndstopGPIO);
 100              		.loc 1 93 0
 101 000a 0C4B     		ldr	r3, .L4
 102 000c 181C     		mov	r0, r3
 103 000e FFF7FEFF 		bl	Endstop_isr_StartEx
  94:.\sensorFortolker.c ****     
  95:.\sensorFortolker.c ****     /* Setup the accelerometer and gyro */
  96:.\sensorFortolker.c ****     int i;
  97:.\sensorFortolker.c ****     for(i = 0; i < 10; i++){
 104              		.loc 1 97 0
 105 0012 0023     		mov	r3, #0
 106 0014 7B60     		str	r3, [r7, #4]
 107 0016 08E0     		b	.L2
 108              	.L3:
  98:.\sensorFortolker.c ****         setupI2CDevice(IMU_ADDRESS, imuInitArray, IMU_INIT_LEN);
 109              		.loc 1 98 0 discriminator 2
 110 0018 094B     		ldr	r3, .L4+4
 111 001a 6820     		mov	r0, #104
 112 001c 191C     		mov	r1, r3
 113 001e 0522     		mov	r2, #5
 114 0020 FFF7FEFF 		bl	setupI2CDevice
  97:.\sensorFortolker.c ****     for(i = 0; i < 10; i++){
 115              		.loc 1 97 0 discriminator 2
 116 0024 7B68     		ldr	r3, [r7, #4]
 117 0026 0133     		add	r3, r3, #1
 118 0028 7B60     		str	r3, [r7, #4]
 119              	.L2:
  97:.\sensorFortolker.c ****     for(i = 0; i < 10; i++){
 120              		.loc 1 97 0 is_stmt 0 discriminator 1
 121 002a 7B68     		ldr	r3, [r7, #4]
 122 002c 092B     		cmp	r3, #9
 123 002e F3DD     		ble	.L3
  99:.\sensorFortolker.c ****     };
 100:.\sensorFortolker.c ****     
 101:.\sensorFortolker.c ****     endstop_ = 0;
 124              		.loc 1 101 0 is_stmt 1
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 5


 125 0030 044B     		ldr	r3, .L4+8
 126 0032 0022     		mov	r2, #0
 127 0034 1A70     		strb	r2, [r3]
 102:.\sensorFortolker.c ****     
 103:.\sensorFortolker.c **** }
 128              		.loc 1 103 0
 129 0036 BD46     		mov	sp, r7
 130 0038 02B0     		add	sp, sp, #8
 131              		@ sp needed
 132 003a 80BD     		pop	{r7, pc}
 133              	.L5:
 134              		.align	2
 135              	.L4:
 136 003c 00000000 		.word	EndstopGPIO
 137 0040 00000000 		.word	imuInitArray
 138 0044 00000000 		.word	endstop_
 139              		.cfi_endproc
 140              	.LFE33:
 141              		.size	initSensors, .-initSensors
 142              		.section	.text.getVuggeUdsvingSens,"ax",%progbits
 143              		.align	2
 144              		.global	getVuggeUdsvingSens
 145              		.code	16
 146              		.thumb_func
 147              		.type	getVuggeUdsvingSens, %function
 148              	getVuggeUdsvingSens:
 149              	.LFB34:
 104:.\sensorFortolker.c **** 
 105:.\sensorFortolker.c **** ///* Function getMotorPosSens
 106:.\sensorFortolker.c **** //   Summary:
 107:.\sensorFortolker.c **** //    ??
 108:.\sensorFortolker.c **** //*/
 109:.\sensorFortolker.c **** //fix16_t getMotorPosSens()
 110:.\sensorFortolker.c **** //{
 111:.\sensorFortolker.c **** //
 112:.\sensorFortolker.c **** //}
 113:.\sensorFortolker.c **** 
 114:.\sensorFortolker.c **** /* Function getVuggeUdsvingSens
 115:.\sensorFortolker.c ****    Summary:
 116:.\sensorFortolker.c ****     ??
 117:.\sensorFortolker.c **** */
 118:.\sensorFortolker.c **** fix16_t getVuggeUdsvingSens()
 119:.\sensorFortolker.c **** {
 150              		.loc 1 119 0
 151              		.cfi_startproc
 152 0000 90B5     		push	{r4, r7, lr}
 153              		.cfi_def_cfa_offset 12
 154              		.cfi_offset 4, -12
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 83B0     		sub	sp, sp, #12
 158              		.cfi_def_cfa_offset 24
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 120:.\sensorFortolker.c ****      //read sensor data
 121:.\sensorFortolker.c ****     readGyroData(&gyroData);
 161              		.loc 1 121 0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 6


 162 0006 3A4B     		ldr	r3, .L11
 163 0008 181C     		mov	r0, r3
 164 000a FFF7FEFF 		bl	readGyroData
 122:.\sensorFortolker.c ****     readAccData(accData);
 165              		.loc 1 122 0
 166 000e 394B     		ldr	r3, .L11+4
 167 0010 181C     		mov	r0, r3
 168 0012 FFF7FEFF 		bl	readAccData
 123:.\sensorFortolker.c ****     
 124:.\sensorFortolker.c ****     //save prev ang
 125:.\sensorFortolker.c ****     prevAng = estAng;
 169              		.loc 1 125 0
 170 0016 384B     		ldr	r3, .L11+8
 171 0018 1A68     		ldr	r2, [r3]
 172 001a 384B     		ldr	r3, .L11+12
 173 001c 1A60     		str	r2, [r3]
 126:.\sensorFortolker.c ****     
 127:.\sensorFortolker.c ****     // Integrate gyro data over last sample period, and calculate new angle from gyro              
 128:.\sensorFortolker.c ****     estAng += fix16mul(gyroData, DT);
 174              		.loc 1 128 0
 175 001e 344B     		ldr	r3, .L11
 176 0020 1A68     		ldr	r2, [r3]
 177 0022 A423     		mov	r3, #164
 178 0024 5B00     		lsl	r3, r3, #1
 179 0026 101C     		mov	r0, r2
 180 0028 191C     		mov	r1, r3
 181 002a FFF7FEFF 		bl	fix16mul
 182 002e 021C     		mov	r2, r0
 183 0030 314B     		ldr	r3, .L11+8
 184 0032 1B68     		ldr	r3, [r3]
 185 0034 D218     		add	r2, r2, r3
 186 0036 304B     		ldr	r3, .L11+8
 187 0038 1A60     		str	r2, [r3]
 129:.\sensorFortolker.c ****     
 130:.\sensorFortolker.c ****     // wrap angle if outside +/- 180 area
 131:.\sensorFortolker.c ****     if(estAng < -FIXED_DEG_180) estAng += FIXED_DEG_360; 
 188              		.loc 1 131 0
 189 003a 2F4B     		ldr	r3, .L11+8
 190 003c 1A68     		ldr	r2, [r3]
 191 003e 304B     		ldr	r3, .L11+16
 192 0040 9A42     		cmp	r2, r3
 193 0042 06DA     		bge	.L7
 194              		.loc 1 131 0 is_stmt 0 discriminator 1
 195 0044 2C4B     		ldr	r3, .L11+8
 196 0046 1B68     		ldr	r3, [r3]
 197 0048 B421     		mov	r1, #180
 198 004a 4904     		lsl	r1, r1, #17
 199 004c 5A18     		add	r2, r3, r1
 200 004e 2A4B     		ldr	r3, .L11+8
 201 0050 1A60     		str	r2, [r3]
 202              	.L7:
 132:.\sensorFortolker.c ****     if(estAng > FIXED_DEG_180) estAng -= FIXED_DEG_360; 
 203              		.loc 1 132 0 is_stmt 1
 204 0052 294B     		ldr	r3, .L11+8
 205 0054 1A68     		ldr	r2, [r3]
 206 0056 B423     		mov	r3, #180
 207 0058 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 7


 208 005a 9A42     		cmp	r2, r3
 209 005c 05DD     		ble	.L8
 210              		.loc 1 132 0 is_stmt 0 discriminator 1
 211 005e 264B     		ldr	r3, .L11+8
 212 0060 1B68     		ldr	r3, [r3]
 213 0062 2849     		ldr	r1, .L11+20
 214 0064 5A18     		add	r2, r3, r1
 215 0066 244B     		ldr	r3, .L11+8
 216 0068 1A60     		str	r2, [r3]
 217              	.L8:
 133:.\sensorFortolker.c ****     
 134:.\sensorFortolker.c ****     /* Correct angle estimate using accelerometer data if it is estimated valid. *
 135:.\sensorFortolker.c ****      * The acc input can be used if the accelleration vector has a length close  *
 136:.\sensorFortolker.c ****      * to 1g (no force other than gravity), which is estimated by the sum of the *
 137:.\sensorFortolker.c ****      * components for computational efficiency.                                  */
 138:.\sensorFortolker.c ****     fix16_t forceMagEst = fix16abs(accData[0]) + fix16abs(accData[1]);
 218              		.loc 1 138 0 is_stmt 1
 219 006a 224B     		ldr	r3, .L11+4
 220 006c 1B68     		ldr	r3, [r3]
 221 006e 181C     		mov	r0, r3
 222 0070 FFF7FEFF 		bl	fix16abs
 223 0074 041C     		mov	r4, r0
 224 0076 1F4B     		ldr	r3, .L11+4
 225 0078 5B68     		ldr	r3, [r3, #4]
 226 007a 181C     		mov	r0, r3
 227 007c FFF7FEFF 		bl	fix16abs
 228 0080 031C     		mov	r3, r0
 229 0082 E318     		add	r3, r4, r3
 230 0084 7B60     		str	r3, [r7, #4]
 139:.\sensorFortolker.c ****     
 140:.\sensorFortolker.c ****     // Use if forcemag is between 0.90*(2^16) and 1.4*(2^16)
 141:.\sensorFortolker.c ****     fix16_t accAng = 0;
 231              		.loc 1 141 0
 232 0086 0023     		mov	r3, #0
 233 0088 3B60     		str	r3, [r7]
 142:.\sensorFortolker.c ****     if(58982 < forceMagEst && forceMagEst < 91750) 
 234              		.loc 1 142 0
 235 008a 7A68     		ldr	r2, [r7, #4]
 236 008c 1E4B     		ldr	r3, .L11+24
 237 008e 9A42     		cmp	r2, r3
 238 0090 25DD     		ble	.L9
 239              		.loc 1 142 0 is_stmt 0 discriminator 1
 240 0092 7A68     		ldr	r2, [r7, #4]
 241 0094 1D4B     		ldr	r3, .L11+28
 242 0096 9A42     		cmp	r2, r3
 243 0098 21DC     		bgt	.L9
 143:.\sensorFortolker.c ****     {
 144:.\sensorFortolker.c ****         accAng = fix16rad2deg(FIXED_HALF_PI + fix16atan2(accData[1], accData[0]));
 244              		.loc 1 144 0 is_stmt 1
 245 009a 164B     		ldr	r3, .L11+4
 246 009c 5A68     		ldr	r2, [r3, #4]
 247 009e 154B     		ldr	r3, .L11+4
 248 00a0 1B68     		ldr	r3, [r3]
 249 00a2 101C     		mov	r0, r2
 250 00a4 191C     		mov	r1, r3
 251 00a6 FFF7FEFF 		bl	fix16atan2
 252 00aa 031C     		mov	r3, r0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 8


 253 00ac 184A     		ldr	r2, .L11+32
 254 00ae 9B18     		add	r3, r3, r2
 255 00b0 181C     		mov	r0, r3
 256 00b2 FFF7FEFF 		bl	fix16rad2deg
 257 00b6 031C     		mov	r3, r0
 258 00b8 3B60     		str	r3, [r7]
 145:.\sensorFortolker.c ****         //take part of gyro estimate and add complementary part of acc estimate
 146:.\sensorFortolker.c ****         estAng = fix16mul(GYRO_WEIGHT, estAng) 
 259              		.loc 1 146 0
 260 00ba 0F4B     		ldr	r3, .L11+8
 261 00bc 1B68     		ldr	r3, [r3]
 262 00be 124A     		ldr	r2, .L11+24
 263 00c0 101C     		mov	r0, r2
 264 00c2 191C     		mov	r1, r3
 265 00c4 FFF7FEFF 		bl	fix16mul
 266 00c8 041C     		mov	r4, r0
 147:.\sensorFortolker.c ****                  + fix16mul(ACC_WEIGHT, accAng);
 267              		.loc 1 147 0
 268 00ca 124A     		ldr	r2, .L11+36
 269 00cc 3B68     		ldr	r3, [r7]
 270 00ce 101C     		mov	r0, r2
 271 00d0 191C     		mov	r1, r3
 272 00d2 FFF7FEFF 		bl	fix16mul
 273 00d6 031C     		mov	r3, r0
 274 00d8 E218     		add	r2, r4, r3
 146:.\sensorFortolker.c ****         estAng = fix16mul(GYRO_WEIGHT, estAng) 
 275              		.loc 1 146 0
 276 00da 074B     		ldr	r3, .L11+8
 277 00dc 1A60     		str	r2, [r3]
 278              	.L9:
 148:.\sensorFortolker.c ****     }   
 149:.\sensorFortolker.c ****     
 150:.\sensorFortolker.c **** //    if(estAng == prevAng) 
 151:.\sensorFortolker.c **** //    {
 152:.\sensorFortolker.c **** //        stallCount++;
 153:.\sensorFortolker.c **** //    } else {
 154:.\sensorFortolker.c **** //        stallCount = 0;
 155:.\sensorFortolker.c **** //    }
 156:.\sensorFortolker.c **** //    if(stallCount >= 10) setupI2CDevice(IMU_ADDRESS, imuInitArray, IMU_INIT_LEN);
 157:.\sensorFortolker.c **** //    char str[20];
 158:.\sensorFortolker.c **** //    sprintf(str, "%d, ", estang);
 159:.\sensorFortolker.c **** //    debugout_putstring(str);
 160:.\sensorFortolker.c ****     return estAng - 327680;
 279              		.loc 1 160 0
 280 00de 064B     		ldr	r3, .L11+8
 281 00e0 1B68     		ldr	r3, [r3]
 282 00e2 0D49     		ldr	r1, .L11+40
 283 00e4 5B18     		add	r3, r3, r1
 161:.\sensorFortolker.c **** }
 284              		.loc 1 161 0
 285 00e6 181C     		mov	r0, r3
 286 00e8 BD46     		mov	sp, r7
 287 00ea 03B0     		add	sp, sp, #12
 288              		@ sp needed
 289 00ec 90BD     		pop	{r4, r7, pc}
 290              	.L12:
 291 00ee C046     		.align	2
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 9


 292              	.L11:
 293 00f0 00000000 		.word	gyroData
 294 00f4 00000000 		.word	accData
 295 00f8 00000000 		.word	estAng
 296 00fc 00000000 		.word	prevAng
 297 0100 00004CFF 		.word	-11796480
 298 0104 000098FE 		.word	-23592960
 299 0108 66E60000 		.word	58982
 300 010c 65660100 		.word	91749
 301 0110 20920100 		.word	102944
 302 0114 9A190000 		.word	6554
 303 0118 0000FBFF 		.word	-327680
 304              		.cfi_endproc
 305              	.LFE34:
 306              		.size	getVuggeUdsvingSens, .-getVuggeUdsvingSens
 307              		.section	.text.getEndstopGPIO,"ax",%progbits
 308              		.align	2
 309              		.global	getEndstopGPIO
 310              		.code	16
 311              		.thumb_func
 312              		.type	getEndstopGPIO, %function
 313              	getEndstopGPIO:
 314              	.LFB35:
 162:.\sensorFortolker.c **** 
 163:.\sensorFortolker.c **** /* Function getEndstopGPIO
 164:.\sensorFortolker.c ****    Summary:
 165:.\sensorFortolker.c ****     Returns a ptr pointing at enstop_ adress
 166:.\sensorFortolker.c **** */
 167:.\sensorFortolker.c **** BOOL getEndstopGPIO()
 168:.\sensorFortolker.c **** {
 315              		.loc 1 168 0
 316              		.cfi_startproc
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 169:.\sensorFortolker.c ****     return endstop_;
 323              		.loc 1 169 0
 324 0004 024B     		ldr	r3, .L15
 325 0006 1B78     		ldrb	r3, [r3]
 326 0008 DBB2     		uxtb	r3, r3
 170:.\sensorFortolker.c **** }
 327              		.loc 1 170 0
 328 000a 181C     		mov	r0, r3
 329 000c BD46     		mov	sp, r7
 330              		@ sp needed
 331 000e 80BD     		pop	{r7, pc}
 332              	.L16:
 333              		.align	2
 334              	.L15:
 335 0010 00000000 		.word	endstop_
 336              		.cfi_endproc
 337              	.LFE35:
 338              		.size	getEndstopGPIO, .-getEndstopGPIO
 339              		.section	.text.setupI2CDevice,"ax",%progbits
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 10


 340              		.align	2
 341              		.global	setupI2CDevice
 342              		.code	16
 343              		.thumb_func
 344              		.type	setupI2CDevice, %function
 345              	setupI2CDevice:
 346              	.LFB36:
 171:.\sensorFortolker.c **** 
 172:.\sensorFortolker.c **** void setupI2CDevice(uint8_t addr, const uint8_t initArray[][2] , uint8_t arrayLen){
 347              		.loc 1 172 0
 348              		.cfi_startproc
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 84B0     		sub	sp, sp, #16
 354              		.cfi_def_cfa_offset 24
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 3960     		str	r1, [r7]
 358 0008 FB1D     		add	r3, r7, #7
 359 000a 011C     		add	r1, r0, #0
 360 000c 1970     		strb	r1, [r3]
 361 000e BB1D     		add	r3, r7, #6
 362 0010 1A70     		strb	r2, [r3]
 173:.\sensorFortolker.c ****     int i;
 174:.\sensorFortolker.c ****     for(i = 0; i < arrayLen; i++){
 363              		.loc 1 174 0
 364 0012 0023     		mov	r3, #0
 365 0014 FB60     		str	r3, [r7, #12]
 366 0016 13E0     		b	.L18
 367              	.L19:
 175:.\sensorFortolker.c ****         writeI2CReg(addr, initArray[i][0], initArray[i][1]);
 368              		.loc 1 175 0 discriminator 2
 369 0018 FB68     		ldr	r3, [r7, #12]
 370 001a 5B00     		lsl	r3, r3, #1
 371 001c 3A68     		ldr	r2, [r7]
 372 001e D318     		add	r3, r2, r3
 373 0020 1A78     		ldrb	r2, [r3]
 374 0022 FB68     		ldr	r3, [r7, #12]
 375 0024 5B00     		lsl	r3, r3, #1
 376 0026 3968     		ldr	r1, [r7]
 377 0028 CB18     		add	r3, r1, r3
 378 002a 5B78     		ldrb	r3, [r3, #1]
 379 002c F91D     		add	r1, r7, #7
 380 002e 0978     		ldrb	r1, [r1]
 381 0030 081C     		mov	r0, r1
 382 0032 111C     		mov	r1, r2
 383 0034 1A1C     		mov	r2, r3
 384 0036 FFF7FEFF 		bl	writeI2CReg
 174:.\sensorFortolker.c ****     for(i = 0; i < arrayLen; i++){
 385              		.loc 1 174 0 discriminator 2
 386 003a FB68     		ldr	r3, [r7, #12]
 387 003c 0133     		add	r3, r3, #1
 388 003e FB60     		str	r3, [r7, #12]
 389              	.L18:
 174:.\sensorFortolker.c ****     for(i = 0; i < arrayLen; i++){
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 11


 390              		.loc 1 174 0 is_stmt 0 discriminator 1
 391 0040 BB1D     		add	r3, r7, #6
 392 0042 1A78     		ldrb	r2, [r3]
 393 0044 FB68     		ldr	r3, [r7, #12]
 394 0046 9A42     		cmp	r2, r3
 395 0048 E6DC     		bgt	.L19
 176:.\sensorFortolker.c ****     }
 177:.\sensorFortolker.c **** }
 396              		.loc 1 177 0 is_stmt 1
 397 004a BD46     		mov	sp, r7
 398 004c 04B0     		add	sp, sp, #16
 399              		@ sp needed
 400 004e 80BD     		pop	{r7, pc}
 401              		.cfi_endproc
 402              	.LFE36:
 403              		.size	setupI2CDevice, .-setupI2CDevice
 404              		.section	.text.readI2CReg,"ax",%progbits
 405              		.align	2
 406              		.global	readI2CReg
 407              		.code	16
 408              		.thumb_func
 409              		.type	readI2CReg, %function
 410              	readI2CReg:
 411              	.LFB37:
 178:.\sensorFortolker.c ****     
 179:.\sensorFortolker.c **** uint8_t readI2CReg(uint8_t addr, uint8_t reg)
 180:.\sensorFortolker.c **** {
 412              		.loc 1 180 0
 413              		.cfi_startproc
 414 0000 80B5     		push	{r7, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 84B0     		sub	sp, sp, #16
 419              		.cfi_def_cfa_offset 24
 420 0004 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 422 0006 0A1C     		mov	r2, r1
 423 0008 FB1D     		add	r3, r7, #7
 424 000a 011C     		add	r1, r0, #0
 425 000c 1970     		strb	r1, [r3]
 426 000e BB1D     		add	r3, r7, #6
 427 0010 1A70     		strb	r2, [r3]
 181:.\sensorFortolker.c ****     
 182:.\sensorFortolker.c ****     uint8_t result; 
 183:.\sensorFortolker.c ****     
 184:.\sensorFortolker.c **** 	if (sensorI2C_I2CMasterSendStart(addr, 0) == sensorI2C_I2C_MSTR_NO_ERROR) /* Check if transfer com
 428              		.loc 1 184 0
 429 0012 FB1D     		add	r3, r7, #7
 430 0014 1B78     		ldrb	r3, [r3]
 431 0016 181C     		mov	r0, r3
 432 0018 0021     		mov	r1, #0
 433 001a FFF7FEFF 		bl	sensorI2C_I2CMasterSendStart
 434 001e 031C     		mov	r3, r0
 435 0020 002B     		cmp	r3, #0
 436 0022 19D1     		bne	.L21
 185:.\sensorFortolker.c ****     { 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 12


 186:.\sensorFortolker.c ****         if(sensorI2C_I2CMasterWriteByte(reg) == sensorI2C_I2C_MSTR_NO_ERROR)
 437              		.loc 1 186 0
 438 0024 BB1D     		add	r3, r7, #6
 439 0026 1B78     		ldrb	r3, [r3]
 440 0028 181C     		mov	r0, r3
 441 002a FFF7FEFF 		bl	sensorI2C_I2CMasterWriteByte
 442 002e 031C     		mov	r3, r0
 443 0030 002B     		cmp	r3, #0
 444 0032 11D1     		bne	.L21
 187:.\sensorFortolker.c **** 		{
 188:.\sensorFortolker.c ****             if(sensorI2C_I2CMasterSendRestart(addr, 1) == sensorI2C_I2C_MSTR_NO_ERROR)
 445              		.loc 1 188 0
 446 0034 FB1D     		add	r3, r7, #7
 447 0036 1B78     		ldrb	r3, [r3]
 448 0038 181C     		mov	r0, r3
 449 003a 0121     		mov	r1, #1
 450 003c FFF7FEFF 		bl	sensorI2C_I2CMasterSendRestart
 451 0040 031C     		mov	r3, r0
 452 0042 002B     		cmp	r3, #0
 453 0044 08D1     		bne	.L21
 189:.\sensorFortolker.c **** 			{
 190:.\sensorFortolker.c ****                 result = sensorI2C_I2CMasterReadByte(sensorI2C_I2C_NAK_DATA);
 454              		.loc 1 190 0
 455 0046 0120     		mov	r0, #1
 456 0048 FFF7FEFF 		bl	sensorI2C_I2CMasterReadByte
 457 004c 021C     		mov	r2, r0
 458 004e 3B1C     		mov	r3, r7
 459 0050 0F33     		add	r3, r3, #15
 460 0052 1A70     		strb	r2, [r3]
 191:.\sensorFortolker.c ****                 sensorI2C_I2CMasterSendStop();
 461              		.loc 1 191 0
 462 0054 FFF7FEFF 		bl	sensorI2C_I2CMasterSendStop
 463              	.L21:
 192:.\sensorFortolker.c **** 				
 193:.\sensorFortolker.c **** 			}
 194:.\sensorFortolker.c **** 		}
 195:.\sensorFortolker.c **** 	}
 196:.\sensorFortolker.c **** 	return result;		
 464              		.loc 1 196 0
 465 0058 3B1C     		mov	r3, r7
 466 005a 0F33     		add	r3, r3, #15
 467 005c 1B78     		ldrb	r3, [r3]
 197:.\sensorFortolker.c ****     
 198:.\sensorFortolker.c **** }
 468              		.loc 1 198 0
 469 005e 181C     		mov	r0, r3
 470 0060 BD46     		mov	sp, r7
 471 0062 04B0     		add	sp, sp, #16
 472              		@ sp needed
 473 0064 80BD     		pop	{r7, pc}
 474              		.cfi_endproc
 475              	.LFE37:
 476              		.size	readI2CReg, .-readI2CReg
 477 0066 C046     		.section	.text.writeI2CReg,"ax",%progbits
 478              		.align	2
 479              		.global	writeI2CReg
 480              		.code	16
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 13


 481              		.thumb_func
 482              		.type	writeI2CReg, %function
 483              	writeI2CReg:
 484              	.LFB38:
 199:.\sensorFortolker.c **** 
 200:.\sensorFortolker.c **** void writeI2CReg(uint8_t addr, uint8_t reg, uint8_t val){    
 485              		.loc 1 200 0
 486              		.cfi_startproc
 487 0000 80B5     		push	{r7, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 82B0     		sub	sp, sp, #8
 492              		.cfi_def_cfa_offset 16
 493 0004 00AF     		add	r7, sp, #0
 494              		.cfi_def_cfa_register 7
 495 0006 FB1D     		add	r3, r7, #7
 496 0008 1870     		strb	r0, [r3]
 497 000a BB1D     		add	r3, r7, #6
 498 000c 1970     		strb	r1, [r3]
 499 000e 7B1D     		add	r3, r7, #5
 500 0010 1A70     		strb	r2, [r3]
 201:.\sensorFortolker.c **** 	if (sensorI2C_I2CMasterSendStart(addr, 0) == sensorI2C_I2C_MSTR_NO_ERROR) /* Check if transfer com
 501              		.loc 1 201 0
 502 0012 FB1D     		add	r3, r7, #7
 503 0014 1B78     		ldrb	r3, [r3]
 504 0016 181C     		mov	r0, r3
 505 0018 0021     		mov	r1, #0
 506 001a FFF7FEFF 		bl	sensorI2C_I2CMasterSendStart
 507 001e 031C     		mov	r3, r0
 508 0020 002B     		cmp	r3, #0
 509 0022 11D1     		bne	.L23
 202:.\sensorFortolker.c ****     { 
 203:.\sensorFortolker.c ****         if(sensorI2C_I2CMasterWriteByte(reg) == sensorI2C_I2C_MSTR_NO_ERROR)
 510              		.loc 1 203 0
 511 0024 BB1D     		add	r3, r7, #6
 512 0026 1B78     		ldrb	r3, [r3]
 513 0028 181C     		mov	r0, r3
 514 002a FFF7FEFF 		bl	sensorI2C_I2CMasterWriteByte
 515 002e 031C     		mov	r3, r0
 516 0030 002B     		cmp	r3, #0
 517 0032 09D1     		bne	.L23
 204:.\sensorFortolker.c **** 		{
 205:.\sensorFortolker.c ****               if(sensorI2C_I2CMasterWriteByte(val) == sensorI2C_I2C_MSTR_NO_ERROR)   
 518              		.loc 1 205 0
 519 0034 7B1D     		add	r3, r7, #5
 520 0036 1B78     		ldrb	r3, [r3]
 521 0038 181C     		mov	r0, r3
 522 003a FFF7FEFF 		bl	sensorI2C_I2CMasterWriteByte
 523 003e 031C     		mov	r3, r0
 524 0040 002B     		cmp	r3, #0
 525 0042 01D1     		bne	.L23
 206:.\sensorFortolker.c ****                 {      
 207:.\sensorFortolker.c ****                     sensorI2C_I2CMasterSendStop();
 526              		.loc 1 207 0
 527 0044 FFF7FEFF 		bl	sensorI2C_I2CMasterSendStop
 528              	.L23:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 14


 208:.\sensorFortolker.c ****     		    }
 209:.\sensorFortolker.c **** 		}
 210:.\sensorFortolker.c **** 	}
 211:.\sensorFortolker.c **** 	
 212:.\sensorFortolker.c ****     
 213:.\sensorFortolker.c ****     
 214:.\sensorFortolker.c **** }
 529              		.loc 1 214 0
 530 0048 BD46     		mov	sp, r7
 531 004a 02B0     		add	sp, sp, #8
 532              		@ sp needed
 533 004c 80BD     		pop	{r7, pc}
 534              		.cfi_endproc
 535              	.LFE38:
 536              		.size	writeI2CReg, .-writeI2CReg
 537 004e C046     		.section	.text.readGyroData,"ax",%progbits
 538              		.align	2
 539              		.global	readGyroData
 540              		.code	16
 541              		.thumb_func
 542              		.type	readGyroData, %function
 543              	readGyroData:
 544              	.LFB39:
 215:.\sensorFortolker.c **** 
 216:.\sensorFortolker.c **** void readGyroData(fix16_t* gyroData)
 217:.\sensorFortolker.c **** {
 545              		.loc 1 217 0
 546              		.cfi_startproc
 547 0000 90B5     		push	{r4, r7, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 85B0     		sub	sp, sp, #20
 553              		.cfi_def_cfa_offset 32
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 556 0006 7860     		str	r0, [r7, #4]
 218:.\sensorFortolker.c ****     //read the acc data from the accellerometer
 219:.\sensorFortolker.c ****     int16_t rawGyroX = readI2CReg(IMU_ADDRESS, GYRO_FIRST_DATA + 1) 
 557              		.loc 1 219 0
 558 0008 6820     		mov	r0, #104
 559 000a 4421     		mov	r1, #68
 560 000c FFF7FEFF 		bl	readI2CReg
 561 0010 031C     		mov	r3, r0
 562 0012 1C1C     		mov	r4, r3
 220:.\sensorFortolker.c ****             + ((int16_t) readI2CReg(IMU_ADDRESS, GYRO_FIRST_DATA) << 8);
 563              		.loc 1 220 0
 564 0014 6820     		mov	r0, #104
 565 0016 4321     		mov	r1, #67
 566 0018 FFF7FEFF 		bl	readI2CReg
 567 001c 031C     		mov	r3, r0
 219:.\sensorFortolker.c ****     int16_t rawGyroX = readI2CReg(IMU_ADDRESS, GYRO_FIRST_DATA + 1) 
 568              		.loc 1 219 0
 569 001e 1B02     		lsl	r3, r3, #8
 570 0020 9BB2     		uxth	r3, r3
 571 0022 E318     		add	r3, r4, r3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 15


 572 0024 9AB2     		uxth	r2, r3
 573 0026 3B1C     		mov	r3, r7
 574 0028 0E33     		add	r3, r3, #14
 575 002a 1A80     		strh	r2, [r3]
 221:.\sensorFortolker.c ****     //scale data and return it
 222:.\sensorFortolker.c ****     *gyroData = (fix16_t) rawGyroX * GYRO_SCALE_FACTOR;
 576              		.loc 1 222 0
 577 002c 3B1C     		mov	r3, r7
 578 002e 0E33     		add	r3, r3, #14
 579 0030 0022     		mov	r2, #0
 580 0032 9B5E     		ldrsh	r3, [r3, r2]
 581 0034 034A     		ldr	r2, .L26
 582 0036 5A43     		mul	r2, r3
 583 0038 7B68     		ldr	r3, [r7, #4]
 584 003a 1A60     		str	r2, [r3]
 223:.\sensorFortolker.c **** }
 585              		.loc 1 223 0
 586 003c BD46     		mov	sp, r7
 587 003e 05B0     		add	sp, sp, #20
 588              		@ sp needed
 589 0040 90BD     		pop	{r4, r7, pc}
 590              	.L27:
 591 0042 C046     		.align	2
 592              	.L26:
 593 0044 9C0F0000 		.word	3996
 594              		.cfi_endproc
 595              	.LFE39:
 596              		.size	readGyroData, .-readGyroData
 597              		.section	.text.readAccData,"ax",%progbits
 598              		.align	2
 599              		.global	readAccData
 600              		.code	16
 601              		.thumb_func
 602              		.type	readAccData, %function
 603              	readAccData:
 604              	.LFB40:
 224:.\sensorFortolker.c **** 
 225:.\sensorFortolker.c **** void readAccData(fix16_t* accData)
 226:.\sensorFortolker.c **** {
 605              		.loc 1 226 0
 606              		.cfi_startproc
 607 0000 90B5     		push	{r4, r7, lr}
 608              		.cfi_def_cfa_offset 12
 609              		.cfi_offset 4, -12
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 32
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 227:.\sensorFortolker.c ****     //read the raw data from the accellerometer
 228:.\sensorFortolker.c ****     int16 rawAccY = readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA+1) 
 617              		.loc 1 228 0
 618 0008 6820     		mov	r0, #104
 619 000a 3E21     		mov	r1, #62
 620 000c FFF7FEFF 		bl	readI2CReg
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 16


 621 0010 031C     		mov	r3, r0
 622 0012 1C1C     		mov	r4, r3
 229:.\sensorFortolker.c ****             + ((int16_t) readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA)<<8);
 623              		.loc 1 229 0
 624 0014 6820     		mov	r0, #104
 625 0016 3D21     		mov	r1, #61
 626 0018 FFF7FEFF 		bl	readI2CReg
 627 001c 031C     		mov	r3, r0
 228:.\sensorFortolker.c ****     int16 rawAccY = readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA+1) 
 628              		.loc 1 228 0
 629 001e 1B02     		lsl	r3, r3, #8
 630 0020 9BB2     		uxth	r3, r3
 631 0022 E318     		add	r3, r4, r3
 632 0024 9AB2     		uxth	r2, r3
 633 0026 3B1C     		mov	r3, r7
 634 0028 0E33     		add	r3, r3, #14
 635 002a 1A80     		strh	r2, [r3]
 230:.\sensorFortolker.c ****     int16 rawAccZ = readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA+3) 
 636              		.loc 1 230 0
 637 002c 6820     		mov	r0, #104
 638 002e 4021     		mov	r1, #64
 639 0030 FFF7FEFF 		bl	readI2CReg
 640 0034 031C     		mov	r3, r0
 641 0036 1C1C     		mov	r4, r3
 231:.\sensorFortolker.c ****             + ((int16_t) readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA + 2)<<8);
 642              		.loc 1 231 0
 643 0038 6820     		mov	r0, #104
 644 003a 3F21     		mov	r1, #63
 645 003c FFF7FEFF 		bl	readI2CReg
 646 0040 031C     		mov	r3, r0
 230:.\sensorFortolker.c ****     int16 rawAccZ = readI2CReg(IMU_ADDRESS, ACC_FIRST_DATA+3) 
 647              		.loc 1 230 0
 648 0042 1B02     		lsl	r3, r3, #8
 649 0044 9BB2     		uxth	r3, r3
 650 0046 E318     		add	r3, r4, r3
 651 0048 9AB2     		uxth	r2, r3
 652 004a 3B1C     		mov	r3, r7
 653 004c 0C33     		add	r3, r3, #12
 654 004e 1A80     		strh	r2, [r3]
 232:.\sensorFortolker.c ****     //scale data and return it
 233:.\sensorFortolker.c ****     accData[0] = (fix16_t) rawAccY * ACC_SCALE_FACTOR; 
 655              		.loc 1 233 0
 656 0050 3B1C     		mov	r3, r7
 657 0052 0E33     		add	r3, r3, #14
 658 0054 0021     		mov	r1, #0
 659 0056 5B5E     		ldrsh	r3, [r3, r1]
 660 0058 DA00     		lsl	r2, r3, #3
 661 005a 7B68     		ldr	r3, [r7, #4]
 662 005c 1A60     		str	r2, [r3]
 234:.\sensorFortolker.c ****     accData[1] = (fix16_t) rawAccZ * ACC_SCALE_FACTOR;
 663              		.loc 1 234 0
 664 005e 7B68     		ldr	r3, [r7, #4]
 665 0060 0433     		add	r3, r3, #4
 666 0062 3A1C     		mov	r2, r7
 667 0064 0C32     		add	r2, r2, #12
 668 0066 0021     		mov	r1, #0
 669 0068 525E     		ldrsh	r2, [r2, r1]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 17


 670 006a D200     		lsl	r2, r2, #3
 671 006c 1A60     		str	r2, [r3]
 235:.\sensorFortolker.c **** }
 672              		.loc 1 235 0
 673 006e BD46     		mov	sp, r7
 674 0070 05B0     		add	sp, sp, #20
 675              		@ sp needed
 676 0072 90BD     		pop	{r4, r7, pc}
 677              		.cfi_endproc
 678              	.LFE40:
 679              		.size	readAccData, .-readAccData
 680              		.section	.text.gyroDataReadyInterrupt,"ax",%progbits
 681              		.align	2
 682              		.global	gyroDataReadyInterrupt
 683              		.code	16
 684              		.thumb_func
 685              		.type	gyroDataReadyInterrupt, %function
 686              	gyroDataReadyInterrupt:
 687              	.LFB41:
 236:.\sensorFortolker.c **** 
 237:.\sensorFortolker.c **** /* interrupt definitions */
 238:.\sensorFortolker.c **** 
 239:.\sensorFortolker.c **** //Data ready interrupt from sensor
 240:.\sensorFortolker.c **** CY_ISR(gyroDataReadyInterrupt)
 241:.\sensorFortolker.c **** {
 688              		.loc 1 241 0
 689              		.cfi_startproc
 690 0000 80B5     		push	{r7, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 242:.\sensorFortolker.c ****    //TODO: insert data interrupt code to improve data collection
 243:.\sensorFortolker.c **** }
 696              		.loc 1 243 0
 697 0004 BD46     		mov	sp, r7
 698              		@ sp needed
 699 0006 80BD     		pop	{r7, pc}
 700              		.cfi_endproc
 701              	.LFE41:
 702              		.size	gyroDataReadyInterrupt, .-gyroDataReadyInterrupt
 703              		.section	.text.EndstopGPIO,"ax",%progbits
 704              		.align	2
 705              		.global	EndstopGPIO
 706              		.code	16
 707              		.thumb_func
 708              		.type	EndstopGPIO, %function
 709              	EndstopGPIO:
 710              	.LFB42:
 244:.\sensorFortolker.c **** 
 245:.\sensorFortolker.c **** 
 246:.\sensorFortolker.c **** /* ISR Function EndstopGPIO
 247:.\sensorFortolker.c ****    Summary:
 248:.\sensorFortolker.c ****     ISR triggers on Endstop activation and sets endstop_ flag high
 249:.\sensorFortolker.c **** */
 250:.\sensorFortolker.c **** CY_ISR(EndstopGPIO)
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 18


 251:.\sensorFortolker.c **** {   
 711              		.loc 1 251 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 252:.\sensorFortolker.c ****     endstop_ = 1;  
 719              		.loc 1 252 0
 720 0004 024B     		ldr	r3, .L31
 721 0006 0122     		mov	r2, #1
 722 0008 1A70     		strb	r2, [r3]
 253:.\sensorFortolker.c **** }
 723              		.loc 1 253 0
 724 000a BD46     		mov	sp, r7
 725              		@ sp needed
 726 000c 80BD     		pop	{r7, pc}
 727              	.L32:
 728 000e C046     		.align	2
 729              	.L31:
 730 0010 00000000 		.word	endstop_
 731              		.cfi_endproc
 732              	.LFE42:
 733              		.size	EndstopGPIO, .-EndstopGPIO
 734              		.text
 735              	.Letext0:
 736              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 737              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 738              		.file 4 ".\\Generated_Source\\PSoC4/cytypes.h"
 739              		.file 5 ".\\globals.h"
 740              		.file 6 ".\\fixedMath.h"
 741              		.section	.debug_info,"",%progbits
 742              	.Ldebug_info0:
 743 0000 A8030000 		.4byte	0x3a8
 744 0004 0400     		.2byte	0x4
 745 0006 00000000 		.4byte	.Ldebug_abbrev0
 746 000a 04       		.byte	0x4
 747 000b 01       		.uleb128 0x1
 748 000c 25010000 		.4byte	.LASF50
 749 0010 01       		.byte	0x1
 750 0011 B0020000 		.4byte	.LASF51
 751 0015 A2000000 		.4byte	.LASF52
 752 0019 00000000 		.4byte	.Ldebug_ranges0+0
 753 001d 00000000 		.4byte	0
 754 0021 00000000 		.4byte	.Ldebug_line0
 755 0025 02       		.uleb128 0x2
 756 0026 01       		.byte	0x1
 757 0027 06       		.byte	0x6
 758 0028 04030000 		.4byte	.LASF0
 759 002c 03       		.uleb128 0x3
 760 002d 00000000 		.4byte	.LASF2
 761 0031 02       		.byte	0x2
 762 0032 1C       		.byte	0x1c
 763 0033 37000000 		.4byte	0x37
 764 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 19


 765 0038 01       		.byte	0x1
 766 0039 08       		.byte	0x8
 767 003a AC010000 		.4byte	.LASF1
 768 003e 03       		.uleb128 0x3
 769 003f 19000000 		.4byte	.LASF3
 770 0043 02       		.byte	0x2
 771 0044 25       		.byte	0x25
 772 0045 49000000 		.4byte	0x49
 773 0049 02       		.uleb128 0x2
 774 004a 02       		.byte	0x2
 775 004b 05       		.byte	0x5
 776 004c D3020000 		.4byte	.LASF4
 777 0050 02       		.uleb128 0x2
 778 0051 02       		.byte	0x2
 779 0052 07       		.byte	0x7
 780 0053 64000000 		.4byte	.LASF5
 781 0057 03       		.uleb128 0x3
 782 0058 3B000000 		.4byte	.LASF6
 783 005c 02       		.byte	0x2
 784 005d 37       		.byte	0x37
 785 005e 62000000 		.4byte	0x62
 786 0062 02       		.uleb128 0x2
 787 0063 04       		.byte	0x4
 788 0064 05       		.byte	0x5
 789 0065 EB020000 		.4byte	.LASF7
 790 0069 02       		.uleb128 0x2
 791 006a 04       		.byte	0x4
 792 006b 07       		.byte	0x7
 793 006c 3B020000 		.4byte	.LASF8
 794 0070 02       		.uleb128 0x2
 795 0071 08       		.byte	0x8
 796 0072 05       		.byte	0x5
 797 0073 A2020000 		.4byte	.LASF9
 798 0077 02       		.uleb128 0x2
 799 0078 08       		.byte	0x8
 800 0079 07       		.byte	0x7
 801 007a 5A020000 		.4byte	.LASF10
 802 007e 04       		.uleb128 0x4
 803 007f 04       		.byte	0x4
 804 0080 05       		.byte	0x5
 805 0081 696E7400 		.ascii	"int\000"
 806 0085 02       		.uleb128 0x2
 807 0086 04       		.byte	0x4
 808 0087 07       		.byte	0x7
 809 0088 4D020000 		.4byte	.LASF11
 810 008c 03       		.uleb128 0x3
 811 008d 71020000 		.4byte	.LASF12
 812 0091 03       		.byte	0x3
 813 0092 2A       		.byte	0x2a
 814 0093 2C000000 		.4byte	0x2c
 815 0097 03       		.uleb128 0x3
 816 0098 80020000 		.4byte	.LASF13
 817 009c 03       		.byte	0x3
 818 009d 35       		.byte	0x35
 819 009e 3E000000 		.4byte	0x3e
 820 00a2 03       		.uleb128 0x3
 821 00a3 88020000 		.4byte	.LASF14
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 20


 822 00a7 03       		.byte	0x3
 823 00a8 41       		.byte	0x41
 824 00a9 57000000 		.4byte	0x57
 825 00ad 03       		.uleb128 0x3
 826 00ae E5020000 		.4byte	.LASF15
 827 00b2 04       		.byte	0x4
 828 00b3 A1       		.byte	0xa1
 829 00b4 37000000 		.4byte	0x37
 830 00b8 03       		.uleb128 0x3
 831 00b9 C4010000 		.4byte	.LASF16
 832 00bd 04       		.byte	0x4
 833 00be A5       		.byte	0xa5
 834 00bf 49000000 		.4byte	0x49
 835 00c3 02       		.uleb128 0x2
 836 00c4 04       		.byte	0x4
 837 00c5 04       		.byte	0x4
 838 00c6 1F010000 		.4byte	.LASF17
 839 00ca 02       		.uleb128 0x2
 840 00cb 08       		.byte	0x8
 841 00cc 04       		.byte	0x4
 842 00cd 1C020000 		.4byte	.LASF18
 843 00d1 02       		.uleb128 0x2
 844 00d2 01       		.byte	0x1
 845 00d3 08       		.byte	0x8
 846 00d4 C4020000 		.4byte	.LASF19
 847 00d8 02       		.uleb128 0x2
 848 00d9 04       		.byte	0x4
 849 00da 07       		.byte	0x7
 850 00db 90020000 		.4byte	.LASF20
 851 00df 03       		.uleb128 0x3
 852 00e0 52000000 		.4byte	.LASF21
 853 00e4 05       		.byte	0x5
 854 00e5 13       		.byte	0x13
 855 00e6 AD000000 		.4byte	0xad
 856 00ea 03       		.uleb128 0x3
 857 00eb DD020000 		.4byte	.LASF22
 858 00ef 06       		.byte	0x6
 859 00f0 12       		.byte	0x12
 860 00f1 A2000000 		.4byte	0xa2
 861 00f5 05       		.uleb128 0x5
 862 00f6 10020000 		.4byte	.LASF25
 863 00fa 01       		.byte	0x1
 864 00fb 58       		.byte	0x58
 865 00fc 00000000 		.4byte	.LFB33
 866 0100 48000000 		.4byte	.LFE33-.LFB33
 867 0104 01       		.uleb128 0x1
 868 0105 9C       		.byte	0x9c
 869 0106 17010000 		.4byte	0x117
 870 010a 06       		.uleb128 0x6
 871 010b 6900     		.ascii	"i\000"
 872 010d 01       		.byte	0x1
 873 010e 60       		.byte	0x60
 874 010f 7E000000 		.4byte	0x7e
 875 0113 02       		.uleb128 0x2
 876 0114 91       		.byte	0x91
 877 0115 74       		.sleb128 -12
 878 0116 00       		.byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 21


 879 0117 07       		.uleb128 0x7
 880 0118 FC010000 		.4byte	.LASF30
 881 011c 01       		.byte	0x1
 882 011d 76       		.byte	0x76
 883 011e EA000000 		.4byte	0xea
 884 0122 00000000 		.4byte	.LFB34
 885 0126 1C010000 		.4byte	.LFE34-.LFB34
 886 012a 01       		.uleb128 0x1
 887 012b 9C       		.byte	0x9c
 888 012c 4D010000 		.4byte	0x14d
 889 0130 08       		.uleb128 0x8
 890 0131 96000000 		.4byte	.LASF23
 891 0135 01       		.byte	0x1
 892 0136 8A       		.byte	0x8a
 893 0137 EA000000 		.4byte	0xea
 894 013b 02       		.uleb128 0x2
 895 013c 91       		.byte	0x91
 896 013d 6C       		.sleb128 -20
 897 013e 08       		.uleb128 0x8
 898 013f F5010000 		.4byte	.LASF24
 899 0143 01       		.byte	0x1
 900 0144 8D       		.byte	0x8d
 901 0145 EA000000 		.4byte	0xea
 902 0149 02       		.uleb128 0x2
 903 014a 91       		.byte	0x91
 904 014b 68       		.sleb128 -24
 905 014c 00       		.byte	0
 906 014d 09       		.uleb128 0x9
 907 014e 0A000000 		.4byte	.LASF41
 908 0152 01       		.byte	0x1
 909 0153 A7       		.byte	0xa7
 910 0154 DF000000 		.4byte	0xdf
 911 0158 00000000 		.4byte	.LFB35
 912 015c 14000000 		.4byte	.LFE35-.LFB35
 913 0160 01       		.uleb128 0x1
 914 0161 9C       		.byte	0x9c
 915 0162 05       		.uleb128 0x5
 916 0163 E6010000 		.4byte	.LASF26
 917 0167 01       		.byte	0x1
 918 0168 AC       		.byte	0xac
 919 0169 00000000 		.4byte	.LFB36
 920 016d 50000000 		.4byte	.LFE36-.LFB36
 921 0171 01       		.uleb128 0x1
 922 0172 9C       		.byte	0x9c
 923 0173 AE010000 		.4byte	0x1ae
 924 0177 0A       		.uleb128 0xa
 925 0178 E1010000 		.4byte	.LASF27
 926 017c 01       		.byte	0x1
 927 017d AC       		.byte	0xac
 928 017e 8C000000 		.4byte	0x8c
 929 0182 02       		.uleb128 0x2
 930 0183 91       		.byte	0x91
 931 0184 6F       		.sleb128 -17
 932 0185 0A       		.uleb128 0xa
 933 0186 BA010000 		.4byte	.LASF28
 934 018a 01       		.byte	0x1
 935 018b AC       		.byte	0xac
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 22


 936 018c BE010000 		.4byte	0x1be
 937 0190 02       		.uleb128 0x2
 938 0191 91       		.byte	0x91
 939 0192 68       		.sleb128 -24
 940 0193 0A       		.uleb128 0xa
 941 0194 2A000000 		.4byte	.LASF29
 942 0198 01       		.byte	0x1
 943 0199 AC       		.byte	0xac
 944 019a 8C000000 		.4byte	0x8c
 945 019e 02       		.uleb128 0x2
 946 019f 91       		.byte	0x91
 947 01a0 6E       		.sleb128 -18
 948 01a1 06       		.uleb128 0x6
 949 01a2 6900     		.ascii	"i\000"
 950 01a4 01       		.byte	0x1
 951 01a5 AD       		.byte	0xad
 952 01a6 7E000000 		.4byte	0x7e
 953 01aa 02       		.uleb128 0x2
 954 01ab 91       		.byte	0x91
 955 01ac 74       		.sleb128 -12
 956 01ad 00       		.byte	0
 957 01ae 0B       		.uleb128 0xb
 958 01af 8C000000 		.4byte	0x8c
 959 01b3 BE010000 		.4byte	0x1be
 960 01b7 0C       		.uleb128 0xc
 961 01b8 D8000000 		.4byte	0xd8
 962 01bc 01       		.byte	0x1
 963 01bd 00       		.byte	0
 964 01be 0D       		.uleb128 0xd
 965 01bf 04       		.byte	0x4
 966 01c0 AE010000 		.4byte	0x1ae
 967 01c4 07       		.uleb128 0x7
 968 01c5 A1010000 		.4byte	.LASF31
 969 01c9 01       		.byte	0x1
 970 01ca B3       		.byte	0xb3
 971 01cb 8C000000 		.4byte	0x8c
 972 01cf 00000000 		.4byte	.LFB37
 973 01d3 66000000 		.4byte	.LFE37-.LFB37
 974 01d7 01       		.uleb128 0x1
 975 01d8 9C       		.byte	0x9c
 976 01d9 08020000 		.4byte	0x208
 977 01dd 0A       		.uleb128 0xa
 978 01de E1010000 		.4byte	.LASF27
 979 01e2 01       		.byte	0x1
 980 01e3 B3       		.byte	0xb3
 981 01e4 8C000000 		.4byte	0x8c
 982 01e8 02       		.uleb128 0x2
 983 01e9 91       		.byte	0x91
 984 01ea 6F       		.sleb128 -17
 985 01eb 0E       		.uleb128 0xe
 986 01ec 72656700 		.ascii	"reg\000"
 987 01f0 01       		.byte	0x1
 988 01f1 B3       		.byte	0xb3
 989 01f2 8C000000 		.4byte	0x8c
 990 01f6 02       		.uleb128 0x2
 991 01f7 91       		.byte	0x91
 992 01f8 6E       		.sleb128 -18
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 23


 993 01f9 08       		.uleb128 0x8
 994 01fa 79020000 		.4byte	.LASF32
 995 01fe 01       		.byte	0x1
 996 01ff B6       		.byte	0xb6
 997 0200 8C000000 		.4byte	0x8c
 998 0204 02       		.uleb128 0x2
 999 0205 91       		.byte	0x91
 1000 0206 77       		.sleb128 -9
 1001 0207 00       		.byte	0
 1002 0208 05       		.uleb128 0x5
 1003 0209 23020000 		.4byte	.LASF33
 1004 020d 01       		.byte	0x1
 1005 020e C8       		.byte	0xc8
 1006 020f 00000000 		.4byte	.LFB38
 1007 0213 4E000000 		.4byte	.LFE38-.LFB38
 1008 0217 01       		.uleb128 0x1
 1009 0218 9C       		.byte	0x9c
 1010 0219 48020000 		.4byte	0x248
 1011 021d 0A       		.uleb128 0xa
 1012 021e E1010000 		.4byte	.LASF27
 1013 0222 01       		.byte	0x1
 1014 0223 C8       		.byte	0xc8
 1015 0224 8C000000 		.4byte	0x8c
 1016 0228 02       		.uleb128 0x2
 1017 0229 91       		.byte	0x91
 1018 022a 77       		.sleb128 -9
 1019 022b 0E       		.uleb128 0xe
 1020 022c 72656700 		.ascii	"reg\000"
 1021 0230 01       		.byte	0x1
 1022 0231 C8       		.byte	0xc8
 1023 0232 8C000000 		.4byte	0x8c
 1024 0236 02       		.uleb128 0x2
 1025 0237 91       		.byte	0x91
 1026 0238 76       		.sleb128 -10
 1027 0239 0E       		.uleb128 0xe
 1028 023a 76616C00 		.ascii	"val\000"
 1029 023e 01       		.byte	0x1
 1030 023f C8       		.byte	0xc8
 1031 0240 8C000000 		.4byte	0x8c
 1032 0244 02       		.uleb128 0x2
 1033 0245 91       		.byte	0x91
 1034 0246 75       		.sleb128 -11
 1035 0247 00       		.byte	0
 1036 0248 05       		.uleb128 0x5
 1037 0249 57000000 		.4byte	.LASF34
 1038 024d 01       		.byte	0x1
 1039 024e D8       		.byte	0xd8
 1040 024f 00000000 		.4byte	.LFB39
 1041 0253 48000000 		.4byte	.LFE39-.LFB39
 1042 0257 01       		.uleb128 0x1
 1043 0258 9C       		.byte	0x9c
 1044 0259 7A020000 		.4byte	0x27a
 1045 025d 0A       		.uleb128 0xa
 1046 025e 10030000 		.4byte	.LASF35
 1047 0262 01       		.byte	0x1
 1048 0263 D8       		.byte	0xd8
 1049 0264 7A020000 		.4byte	0x27a
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 24


 1050 0268 02       		.uleb128 0x2
 1051 0269 91       		.byte	0x91
 1052 026a 64       		.sleb128 -28
 1053 026b 08       		.uleb128 0x8
 1054 026c 19030000 		.4byte	.LASF36
 1055 0270 01       		.byte	0x1
 1056 0271 DB       		.byte	0xdb
 1057 0272 97000000 		.4byte	0x97
 1058 0276 02       		.uleb128 0x2
 1059 0277 91       		.byte	0x91
 1060 0278 6E       		.sleb128 -18
 1061 0279 00       		.byte	0
 1062 027a 0D       		.uleb128 0xd
 1063 027b 04       		.byte	0x4
 1064 027c EA000000 		.4byte	0xea
 1065 0280 05       		.uleb128 0x5
 1066 0281 2F020000 		.4byte	.LASF37
 1067 0285 01       		.byte	0x1
 1068 0286 E1       		.byte	0xe1
 1069 0287 00000000 		.4byte	.LFB40
 1070 028b 74000000 		.4byte	.LFE40-.LFB40
 1071 028f 01       		.uleb128 0x1
 1072 0290 9C       		.byte	0x9c
 1073 0291 C0020000 		.4byte	0x2c0
 1074 0295 0A       		.uleb128 0xa
 1075 0296 82000000 		.4byte	.LASF38
 1076 029a 01       		.byte	0x1
 1077 029b E1       		.byte	0xe1
 1078 029c 7A020000 		.4byte	0x27a
 1079 02a0 02       		.uleb128 0x2
 1080 02a1 91       		.byte	0x91
 1081 02a2 64       		.sleb128 -28
 1082 02a3 08       		.uleb128 0x8
 1083 02a4 F4020000 		.4byte	.LASF39
 1084 02a8 01       		.byte	0x1
 1085 02a9 E4       		.byte	0xe4
 1086 02aa B8000000 		.4byte	0xb8
 1087 02ae 02       		.uleb128 0x2
 1088 02af 91       		.byte	0x91
 1089 02b0 6E       		.sleb128 -18
 1090 02b1 08       		.uleb128 0x8
 1091 02b2 FC020000 		.4byte	.LASF40
 1092 02b6 01       		.byte	0x1
 1093 02b7 E6       		.byte	0xe6
 1094 02b8 B8000000 		.4byte	0xb8
 1095 02bc 02       		.uleb128 0x2
 1096 02bd 91       		.byte	0x91
 1097 02be 6C       		.sleb128 -20
 1098 02bf 00       		.byte	0
 1099 02c0 0F       		.uleb128 0xf
 1100 02c1 CA010000 		.4byte	.LASF42
 1101 02c5 01       		.byte	0x1
 1102 02c6 F0       		.byte	0xf0
 1103 02c7 00000000 		.4byte	.LFB41
 1104 02cb 08000000 		.4byte	.LFE41-.LFB41
 1105 02cf 01       		.uleb128 0x1
 1106 02d0 9C       		.byte	0x9c
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 25


 1107 02d1 0F       		.uleb128 0xf
 1108 02d2 8A000000 		.4byte	.LASF43
 1109 02d6 01       		.byte	0x1
 1110 02d7 FA       		.byte	0xfa
 1111 02d8 00000000 		.4byte	.LFB42
 1112 02dc 14000000 		.4byte	.LFE42-.LFB42
 1113 02e0 01       		.uleb128 0x1
 1114 02e1 9C       		.byte	0x9c
 1115 02e2 0B       		.uleb128 0xb
 1116 02e3 8C000000 		.4byte	0x8c
 1117 02e7 F8020000 		.4byte	0x2f8
 1118 02eb 0C       		.uleb128 0xc
 1119 02ec D8000000 		.4byte	0xd8
 1120 02f0 04       		.byte	0x4
 1121 02f1 0C       		.uleb128 0xc
 1122 02f2 D8000000 		.4byte	0xd8
 1123 02f6 01       		.byte	0x1
 1124 02f7 00       		.byte	0
 1125 02f8 10       		.uleb128 0x10
 1126 02f9 45000000 		.4byte	.LASF44
 1127 02fd 01       		.byte	0x1
 1128 02fe 3E       		.byte	0x3e
 1129 02ff 09030000 		.4byte	0x309
 1130 0303 05       		.uleb128 0x5
 1131 0304 03       		.byte	0x3
 1132 0305 00000000 		.4byte	imuInitArray
 1133 0309 11       		.uleb128 0x11
 1134 030a E2020000 		.4byte	0x2e2
 1135 030e 10       		.uleb128 0x10
 1136 030f C9020000 		.4byte	.LASF45
 1137 0313 01       		.byte	0x1
 1138 0314 49       		.byte	0x49
 1139 0315 1F030000 		.4byte	0x31f
 1140 0319 05       		.uleb128 0x5
 1141 031a 03       		.byte	0x3
 1142 031b 00000000 		.4byte	dataReady
 1143 031f 12       		.uleb128 0x12
 1144 0320 DF000000 		.4byte	0xdf
 1145 0324 10       		.uleb128 0x10
 1146 0325 99020000 		.4byte	.LASF46
 1147 0329 01       		.byte	0x1
 1148 032a 49       		.byte	0x49
 1149 032b 1F030000 		.4byte	0x31f
 1150 032f 05       		.uleb128 0x5
 1151 0330 03       		.byte	0x3
 1152 0331 00000000 		.4byte	endstop_
 1153 0335 0B       		.uleb128 0xb
 1154 0336 EA000000 		.4byte	0xea
 1155 033a 45030000 		.4byte	0x345
 1156 033e 0C       		.uleb128 0xc
 1157 033f D8000000 		.4byte	0xd8
 1158 0343 01       		.byte	0x1
 1159 0344 00       		.byte	0
 1160 0345 10       		.uleb128 0x10
 1161 0346 82000000 		.4byte	.LASF38
 1162 034a 01       		.byte	0x1
 1163 034b 4B       		.byte	0x4b
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 26


 1164 034c 35030000 		.4byte	0x335
 1165 0350 05       		.uleb128 0x5
 1166 0351 03       		.byte	0x3
 1167 0352 00000000 		.4byte	accData
 1168 0356 10       		.uleb128 0x10
 1169 0357 10030000 		.4byte	.LASF35
 1170 035b 01       		.byte	0x1
 1171 035c 4B       		.byte	0x4b
 1172 035d EA000000 		.4byte	0xea
 1173 0361 05       		.uleb128 0x5
 1174 0362 03       		.byte	0x3
 1175 0363 00000000 		.4byte	gyroData
 1176 0367 10       		.uleb128 0x10
 1177 0368 33000000 		.4byte	.LASF47
 1178 036c 01       		.byte	0x1
 1179 036d 4D       		.byte	0x4d
 1180 036e EA000000 		.4byte	0xea
 1181 0372 05       		.uleb128 0x5
 1182 0373 03       		.byte	0x3
 1183 0374 00000000 		.4byte	prevAng
 1184 0378 10       		.uleb128 0x10
 1185 0379 F5010000 		.4byte	.LASF24
 1186 037d 01       		.byte	0x1
 1187 037e 4D       		.byte	0x4d
 1188 037f EA000000 		.4byte	0xea
 1189 0383 05       		.uleb128 0x5
 1190 0384 03       		.byte	0x3
 1191 0385 00000000 		.4byte	accAng
 1192 0389 10       		.uleb128 0x10
 1193 038a 23000000 		.4byte	.LASF48
 1194 038e 01       		.byte	0x1
 1195 038f 4D       		.byte	0x4d
 1196 0390 EA000000 		.4byte	0xea
 1197 0394 05       		.uleb128 0x5
 1198 0395 03       		.byte	0x3
 1199 0396 00000000 		.4byte	estAng
 1200 039a 10       		.uleb128 0x10
 1201 039b 77000000 		.4byte	.LASF49
 1202 039f 01       		.byte	0x1
 1203 03a0 4E       		.byte	0x4e
 1204 03a1 8C000000 		.4byte	0x8c
 1205 03a5 05       		.uleb128 0x5
 1206 03a6 03       		.byte	0x3
 1207 03a7 00000000 		.4byte	stallCount
 1208 03ab 00       		.byte	0
 1209              		.section	.debug_abbrev,"",%progbits
 1210              	.Ldebug_abbrev0:
 1211 0000 01       		.uleb128 0x1
 1212 0001 11       		.uleb128 0x11
 1213 0002 01       		.byte	0x1
 1214 0003 25       		.uleb128 0x25
 1215 0004 0E       		.uleb128 0xe
 1216 0005 13       		.uleb128 0x13
 1217 0006 0B       		.uleb128 0xb
 1218 0007 03       		.uleb128 0x3
 1219 0008 0E       		.uleb128 0xe
 1220 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 27


 1221 000a 0E       		.uleb128 0xe
 1222 000b 55       		.uleb128 0x55
 1223 000c 17       		.uleb128 0x17
 1224 000d 11       		.uleb128 0x11
 1225 000e 01       		.uleb128 0x1
 1226 000f 10       		.uleb128 0x10
 1227 0010 17       		.uleb128 0x17
 1228 0011 00       		.byte	0
 1229 0012 00       		.byte	0
 1230 0013 02       		.uleb128 0x2
 1231 0014 24       		.uleb128 0x24
 1232 0015 00       		.byte	0
 1233 0016 0B       		.uleb128 0xb
 1234 0017 0B       		.uleb128 0xb
 1235 0018 3E       		.uleb128 0x3e
 1236 0019 0B       		.uleb128 0xb
 1237 001a 03       		.uleb128 0x3
 1238 001b 0E       		.uleb128 0xe
 1239 001c 00       		.byte	0
 1240 001d 00       		.byte	0
 1241 001e 03       		.uleb128 0x3
 1242 001f 16       		.uleb128 0x16
 1243 0020 00       		.byte	0
 1244 0021 03       		.uleb128 0x3
 1245 0022 0E       		.uleb128 0xe
 1246 0023 3A       		.uleb128 0x3a
 1247 0024 0B       		.uleb128 0xb
 1248 0025 3B       		.uleb128 0x3b
 1249 0026 0B       		.uleb128 0xb
 1250 0027 49       		.uleb128 0x49
 1251 0028 13       		.uleb128 0x13
 1252 0029 00       		.byte	0
 1253 002a 00       		.byte	0
 1254 002b 04       		.uleb128 0x4
 1255 002c 24       		.uleb128 0x24
 1256 002d 00       		.byte	0
 1257 002e 0B       		.uleb128 0xb
 1258 002f 0B       		.uleb128 0xb
 1259 0030 3E       		.uleb128 0x3e
 1260 0031 0B       		.uleb128 0xb
 1261 0032 03       		.uleb128 0x3
 1262 0033 08       		.uleb128 0x8
 1263 0034 00       		.byte	0
 1264 0035 00       		.byte	0
 1265 0036 05       		.uleb128 0x5
 1266 0037 2E       		.uleb128 0x2e
 1267 0038 01       		.byte	0x1
 1268 0039 3F       		.uleb128 0x3f
 1269 003a 19       		.uleb128 0x19
 1270 003b 03       		.uleb128 0x3
 1271 003c 0E       		.uleb128 0xe
 1272 003d 3A       		.uleb128 0x3a
 1273 003e 0B       		.uleb128 0xb
 1274 003f 3B       		.uleb128 0x3b
 1275 0040 0B       		.uleb128 0xb
 1276 0041 27       		.uleb128 0x27
 1277 0042 19       		.uleb128 0x19
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 28


 1278 0043 11       		.uleb128 0x11
 1279 0044 01       		.uleb128 0x1
 1280 0045 12       		.uleb128 0x12
 1281 0046 06       		.uleb128 0x6
 1282 0047 40       		.uleb128 0x40
 1283 0048 18       		.uleb128 0x18
 1284 0049 9642     		.uleb128 0x2116
 1285 004b 19       		.uleb128 0x19
 1286 004c 01       		.uleb128 0x1
 1287 004d 13       		.uleb128 0x13
 1288 004e 00       		.byte	0
 1289 004f 00       		.byte	0
 1290 0050 06       		.uleb128 0x6
 1291 0051 34       		.uleb128 0x34
 1292 0052 00       		.byte	0
 1293 0053 03       		.uleb128 0x3
 1294 0054 08       		.uleb128 0x8
 1295 0055 3A       		.uleb128 0x3a
 1296 0056 0B       		.uleb128 0xb
 1297 0057 3B       		.uleb128 0x3b
 1298 0058 0B       		.uleb128 0xb
 1299 0059 49       		.uleb128 0x49
 1300 005a 13       		.uleb128 0x13
 1301 005b 02       		.uleb128 0x2
 1302 005c 18       		.uleb128 0x18
 1303 005d 00       		.byte	0
 1304 005e 00       		.byte	0
 1305 005f 07       		.uleb128 0x7
 1306 0060 2E       		.uleb128 0x2e
 1307 0061 01       		.byte	0x1
 1308 0062 3F       		.uleb128 0x3f
 1309 0063 19       		.uleb128 0x19
 1310 0064 03       		.uleb128 0x3
 1311 0065 0E       		.uleb128 0xe
 1312 0066 3A       		.uleb128 0x3a
 1313 0067 0B       		.uleb128 0xb
 1314 0068 3B       		.uleb128 0x3b
 1315 0069 0B       		.uleb128 0xb
 1316 006a 27       		.uleb128 0x27
 1317 006b 19       		.uleb128 0x19
 1318 006c 49       		.uleb128 0x49
 1319 006d 13       		.uleb128 0x13
 1320 006e 11       		.uleb128 0x11
 1321 006f 01       		.uleb128 0x1
 1322 0070 12       		.uleb128 0x12
 1323 0071 06       		.uleb128 0x6
 1324 0072 40       		.uleb128 0x40
 1325 0073 18       		.uleb128 0x18
 1326 0074 9642     		.uleb128 0x2116
 1327 0076 19       		.uleb128 0x19
 1328 0077 01       		.uleb128 0x1
 1329 0078 13       		.uleb128 0x13
 1330 0079 00       		.byte	0
 1331 007a 00       		.byte	0
 1332 007b 08       		.uleb128 0x8
 1333 007c 34       		.uleb128 0x34
 1334 007d 00       		.byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 29


 1335 007e 03       		.uleb128 0x3
 1336 007f 0E       		.uleb128 0xe
 1337 0080 3A       		.uleb128 0x3a
 1338 0081 0B       		.uleb128 0xb
 1339 0082 3B       		.uleb128 0x3b
 1340 0083 0B       		.uleb128 0xb
 1341 0084 49       		.uleb128 0x49
 1342 0085 13       		.uleb128 0x13
 1343 0086 02       		.uleb128 0x2
 1344 0087 18       		.uleb128 0x18
 1345 0088 00       		.byte	0
 1346 0089 00       		.byte	0
 1347 008a 09       		.uleb128 0x9
 1348 008b 2E       		.uleb128 0x2e
 1349 008c 00       		.byte	0
 1350 008d 3F       		.uleb128 0x3f
 1351 008e 19       		.uleb128 0x19
 1352 008f 03       		.uleb128 0x3
 1353 0090 0E       		.uleb128 0xe
 1354 0091 3A       		.uleb128 0x3a
 1355 0092 0B       		.uleb128 0xb
 1356 0093 3B       		.uleb128 0x3b
 1357 0094 0B       		.uleb128 0xb
 1358 0095 49       		.uleb128 0x49
 1359 0096 13       		.uleb128 0x13
 1360 0097 11       		.uleb128 0x11
 1361 0098 01       		.uleb128 0x1
 1362 0099 12       		.uleb128 0x12
 1363 009a 06       		.uleb128 0x6
 1364 009b 40       		.uleb128 0x40
 1365 009c 18       		.uleb128 0x18
 1366 009d 9742     		.uleb128 0x2117
 1367 009f 19       		.uleb128 0x19
 1368 00a0 00       		.byte	0
 1369 00a1 00       		.byte	0
 1370 00a2 0A       		.uleb128 0xa
 1371 00a3 05       		.uleb128 0x5
 1372 00a4 00       		.byte	0
 1373 00a5 03       		.uleb128 0x3
 1374 00a6 0E       		.uleb128 0xe
 1375 00a7 3A       		.uleb128 0x3a
 1376 00a8 0B       		.uleb128 0xb
 1377 00a9 3B       		.uleb128 0x3b
 1378 00aa 0B       		.uleb128 0xb
 1379 00ab 49       		.uleb128 0x49
 1380 00ac 13       		.uleb128 0x13
 1381 00ad 02       		.uleb128 0x2
 1382 00ae 18       		.uleb128 0x18
 1383 00af 00       		.byte	0
 1384 00b0 00       		.byte	0
 1385 00b1 0B       		.uleb128 0xb
 1386 00b2 01       		.uleb128 0x1
 1387 00b3 01       		.byte	0x1
 1388 00b4 49       		.uleb128 0x49
 1389 00b5 13       		.uleb128 0x13
 1390 00b6 01       		.uleb128 0x1
 1391 00b7 13       		.uleb128 0x13
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 30


 1392 00b8 00       		.byte	0
 1393 00b9 00       		.byte	0
 1394 00ba 0C       		.uleb128 0xc
 1395 00bb 21       		.uleb128 0x21
 1396 00bc 00       		.byte	0
 1397 00bd 49       		.uleb128 0x49
 1398 00be 13       		.uleb128 0x13
 1399 00bf 2F       		.uleb128 0x2f
 1400 00c0 0B       		.uleb128 0xb
 1401 00c1 00       		.byte	0
 1402 00c2 00       		.byte	0
 1403 00c3 0D       		.uleb128 0xd
 1404 00c4 0F       		.uleb128 0xf
 1405 00c5 00       		.byte	0
 1406 00c6 0B       		.uleb128 0xb
 1407 00c7 0B       		.uleb128 0xb
 1408 00c8 49       		.uleb128 0x49
 1409 00c9 13       		.uleb128 0x13
 1410 00ca 00       		.byte	0
 1411 00cb 00       		.byte	0
 1412 00cc 0E       		.uleb128 0xe
 1413 00cd 05       		.uleb128 0x5
 1414 00ce 00       		.byte	0
 1415 00cf 03       		.uleb128 0x3
 1416 00d0 08       		.uleb128 0x8
 1417 00d1 3A       		.uleb128 0x3a
 1418 00d2 0B       		.uleb128 0xb
 1419 00d3 3B       		.uleb128 0x3b
 1420 00d4 0B       		.uleb128 0xb
 1421 00d5 49       		.uleb128 0x49
 1422 00d6 13       		.uleb128 0x13
 1423 00d7 02       		.uleb128 0x2
 1424 00d8 18       		.uleb128 0x18
 1425 00d9 00       		.byte	0
 1426 00da 00       		.byte	0
 1427 00db 0F       		.uleb128 0xf
 1428 00dc 2E       		.uleb128 0x2e
 1429 00dd 00       		.byte	0
 1430 00de 3F       		.uleb128 0x3f
 1431 00df 19       		.uleb128 0x19
 1432 00e0 03       		.uleb128 0x3
 1433 00e1 0E       		.uleb128 0xe
 1434 00e2 3A       		.uleb128 0x3a
 1435 00e3 0B       		.uleb128 0xb
 1436 00e4 3B       		.uleb128 0x3b
 1437 00e5 0B       		.uleb128 0xb
 1438 00e6 27       		.uleb128 0x27
 1439 00e7 19       		.uleb128 0x19
 1440 00e8 11       		.uleb128 0x11
 1441 00e9 01       		.uleb128 0x1
 1442 00ea 12       		.uleb128 0x12
 1443 00eb 06       		.uleb128 0x6
 1444 00ec 40       		.uleb128 0x40
 1445 00ed 18       		.uleb128 0x18
 1446 00ee 9742     		.uleb128 0x2117
 1447 00f0 19       		.uleb128 0x19
 1448 00f1 00       		.byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 31


 1449 00f2 00       		.byte	0
 1450 00f3 10       		.uleb128 0x10
 1451 00f4 34       		.uleb128 0x34
 1452 00f5 00       		.byte	0
 1453 00f6 03       		.uleb128 0x3
 1454 00f7 0E       		.uleb128 0xe
 1455 00f8 3A       		.uleb128 0x3a
 1456 00f9 0B       		.uleb128 0xb
 1457 00fa 3B       		.uleb128 0x3b
 1458 00fb 0B       		.uleb128 0xb
 1459 00fc 49       		.uleb128 0x49
 1460 00fd 13       		.uleb128 0x13
 1461 00fe 3F       		.uleb128 0x3f
 1462 00ff 19       		.uleb128 0x19
 1463 0100 02       		.uleb128 0x2
 1464 0101 18       		.uleb128 0x18
 1465 0102 00       		.byte	0
 1466 0103 00       		.byte	0
 1467 0104 11       		.uleb128 0x11
 1468 0105 26       		.uleb128 0x26
 1469 0106 00       		.byte	0
 1470 0107 49       		.uleb128 0x49
 1471 0108 13       		.uleb128 0x13
 1472 0109 00       		.byte	0
 1473 010a 00       		.byte	0
 1474 010b 12       		.uleb128 0x12
 1475 010c 35       		.uleb128 0x35
 1476 010d 00       		.byte	0
 1477 010e 49       		.uleb128 0x49
 1478 010f 13       		.uleb128 0x13
 1479 0110 00       		.byte	0
 1480 0111 00       		.byte	0
 1481 0112 00       		.byte	0
 1482              		.section	.debug_aranges,"",%progbits
 1483 0000 64000000 		.4byte	0x64
 1484 0004 0200     		.2byte	0x2
 1485 0006 00000000 		.4byte	.Ldebug_info0
 1486 000a 04       		.byte	0x4
 1487 000b 00       		.byte	0
 1488 000c 0000     		.2byte	0
 1489 000e 0000     		.2byte	0
 1490 0010 00000000 		.4byte	.LFB33
 1491 0014 48000000 		.4byte	.LFE33-.LFB33
 1492 0018 00000000 		.4byte	.LFB34
 1493 001c 1C010000 		.4byte	.LFE34-.LFB34
 1494 0020 00000000 		.4byte	.LFB35
 1495 0024 14000000 		.4byte	.LFE35-.LFB35
 1496 0028 00000000 		.4byte	.LFB36
 1497 002c 50000000 		.4byte	.LFE36-.LFB36
 1498 0030 00000000 		.4byte	.LFB37
 1499 0034 66000000 		.4byte	.LFE37-.LFB37
 1500 0038 00000000 		.4byte	.LFB38
 1501 003c 4E000000 		.4byte	.LFE38-.LFB38
 1502 0040 00000000 		.4byte	.LFB39
 1503 0044 48000000 		.4byte	.LFE39-.LFB39
 1504 0048 00000000 		.4byte	.LFB40
 1505 004c 74000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 32


 1506 0050 00000000 		.4byte	.LFB41
 1507 0054 08000000 		.4byte	.LFE41-.LFB41
 1508 0058 00000000 		.4byte	.LFB42
 1509 005c 14000000 		.4byte	.LFE42-.LFB42
 1510 0060 00000000 		.4byte	0
 1511 0064 00000000 		.4byte	0
 1512              		.section	.debug_ranges,"",%progbits
 1513              	.Ldebug_ranges0:
 1514 0000 00000000 		.4byte	.LFB33
 1515 0004 48000000 		.4byte	.LFE33
 1516 0008 00000000 		.4byte	.LFB34
 1517 000c 1C010000 		.4byte	.LFE34
 1518 0010 00000000 		.4byte	.LFB35
 1519 0014 14000000 		.4byte	.LFE35
 1520 0018 00000000 		.4byte	.LFB36
 1521 001c 50000000 		.4byte	.LFE36
 1522 0020 00000000 		.4byte	.LFB37
 1523 0024 66000000 		.4byte	.LFE37
 1524 0028 00000000 		.4byte	.LFB38
 1525 002c 4E000000 		.4byte	.LFE38
 1526 0030 00000000 		.4byte	.LFB39
 1527 0034 48000000 		.4byte	.LFE39
 1528 0038 00000000 		.4byte	.LFB40
 1529 003c 74000000 		.4byte	.LFE40
 1530 0040 00000000 		.4byte	.LFB41
 1531 0044 08000000 		.4byte	.LFE41
 1532 0048 00000000 		.4byte	.LFB42
 1533 004c 14000000 		.4byte	.LFE42
 1534 0050 00000000 		.4byte	0
 1535 0054 00000000 		.4byte	0
 1536              		.section	.debug_line,"",%progbits
 1537              	.Ldebug_line0:
 1538 0000 82020000 		.section	.debug_str,"MS",%progbits,1
 1538      02006E01 
 1538      00000201 
 1538      FB0E0D00 
 1538      01010101 
 1539              	.LASF2:
 1540 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1540      6E74385F 
 1540      7400
 1541              	.LASF41:
 1542 000a 67657445 		.ascii	"getEndstopGPIO\000"
 1542      6E647374 
 1542      6F704750 
 1542      494F00
 1543              	.LASF3:
 1544 0019 5F5F696E 		.ascii	"__int16_t\000"
 1544      7431365F 
 1544      7400
 1545              	.LASF48:
 1546 0023 65737441 		.ascii	"estAng\000"
 1546      6E6700
 1547              	.LASF29:
 1548 002a 61727261 		.ascii	"arrayLen\000"
 1548      794C656E 
 1548      00
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 33


 1549              	.LASF47:
 1550 0033 70726576 		.ascii	"prevAng\000"
 1550      416E6700 
 1551              	.LASF6:
 1552 003b 5F5F696E 		.ascii	"__int32_t\000"
 1552      7433325F 
 1552      7400
 1553              	.LASF44:
 1554 0045 696D7549 		.ascii	"imuInitArray\000"
 1554      6E697441 
 1554      72726179 
 1554      00
 1555              	.LASF21:
 1556 0052 424F4F4C 		.ascii	"BOOL\000"
 1556      00
 1557              	.LASF34:
 1558 0057 72656164 		.ascii	"readGyroData\000"
 1558      4779726F 
 1558      44617461 
 1558      00
 1559              	.LASF5:
 1560 0064 73686F72 		.ascii	"short unsigned int\000"
 1560      7420756E 
 1560      7369676E 
 1560      65642069 
 1560      6E7400
 1561              	.LASF49:
 1562 0077 7374616C 		.ascii	"stallCount\000"
 1562      6C436F75 
 1562      6E7400
 1563              	.LASF38:
 1564 0082 61636344 		.ascii	"accData\000"
 1564      61746100 
 1565              	.LASF43:
 1566 008a 456E6473 		.ascii	"EndstopGPIO\000"
 1566      746F7047 
 1566      50494F00 
 1567              	.LASF23:
 1568 0096 666F7263 		.ascii	"forceMagEst\000"
 1568      654D6167 
 1568      45737400 
 1569              	.LASF52:
 1570 00a2 433A5C55 		.ascii	"C:\\Users\\Jeppe\\Google Drev\\E4PRJ4 gDrive\\Vugge"
 1570      73657273 
 1570      5C4A6570 
 1570      70655C47 
 1570      6F6F676C 
 1571 00d0 73797374 		.ascii	"system arbejdsdokumenter\\Test\\Integrationstest\\v"
 1571      656D2061 
 1571      7262656A 
 1571      6473646F 
 1571      6B756D65 
 1572 0100 75676765 		.ascii	"uggeControl\\vuggeControl.cydsn\000"
 1572      436F6E74 
 1572      726F6C5C 
 1572      76756767 
 1572      65436F6E 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 34


 1573              	.LASF17:
 1574 011f 666C6F61 		.ascii	"float\000"
 1574      7400
 1575              	.LASF50:
 1576 0125 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1576      4320342E 
 1576      382E3420 
 1576      32303134 
 1576      30353236 
 1577 0158 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1577      20726576 
 1577      6973696F 
 1577      6E203231 
 1577      31333538 
 1578 018b 30202D66 		.ascii	"0 -ffunction-sections\000"
 1578      66756E63 
 1578      74696F6E 
 1578      2D736563 
 1578      74696F6E 
 1579              	.LASF31:
 1580 01a1 72656164 		.ascii	"readI2CReg\000"
 1580      49324352 
 1580      656700
 1581              	.LASF1:
 1582 01ac 756E7369 		.ascii	"unsigned char\000"
 1582      676E6564 
 1582      20636861 
 1582      7200
 1583              	.LASF28:
 1584 01ba 696E6974 		.ascii	"initArray\000"
 1584      41727261 
 1584      7900
 1585              	.LASF16:
 1586 01c4 696E7431 		.ascii	"int16\000"
 1586      3600
 1587              	.LASF42:
 1588 01ca 6779726F 		.ascii	"gyroDataReadyInterrupt\000"
 1588      44617461 
 1588      52656164 
 1588      79496E74 
 1588      65727275 
 1589              	.LASF27:
 1590 01e1 61646472 		.ascii	"addr\000"
 1590      00
 1591              	.LASF26:
 1592 01e6 73657475 		.ascii	"setupI2CDevice\000"
 1592      70493243 
 1592      44657669 
 1592      636500
 1593              	.LASF24:
 1594 01f5 61636341 		.ascii	"accAng\000"
 1594      6E6700
 1595              	.LASF30:
 1596 01fc 67657456 		.ascii	"getVuggeUdsvingSens\000"
 1596      75676765 
 1596      55647376 
 1596      696E6753 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 35


 1596      656E7300 
 1597              	.LASF25:
 1598 0210 696E6974 		.ascii	"initSensors\000"
 1598      53656E73 
 1598      6F727300 
 1599              	.LASF18:
 1600 021c 646F7562 		.ascii	"double\000"
 1600      6C6500
 1601              	.LASF33:
 1602 0223 77726974 		.ascii	"writeI2CReg\000"
 1602      65493243 
 1602      52656700 
 1603              	.LASF37:
 1604 022f 72656164 		.ascii	"readAccData\000"
 1604      41636344 
 1604      61746100 
 1605              	.LASF8:
 1606 023b 6C6F6E67 		.ascii	"long unsigned int\000"
 1606      20756E73 
 1606      69676E65 
 1606      6420696E 
 1606      7400
 1607              	.LASF11:
 1608 024d 756E7369 		.ascii	"unsigned int\000"
 1608      676E6564 
 1608      20696E74 
 1608      00
 1609              	.LASF10:
 1610 025a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1610      206C6F6E 
 1610      6720756E 
 1610      7369676E 
 1610      65642069 
 1611              	.LASF12:
 1612 0271 75696E74 		.ascii	"uint8_t\000"
 1612      385F7400 
 1613              	.LASF32:
 1614 0279 72657375 		.ascii	"result\000"
 1614      6C7400
 1615              	.LASF13:
 1616 0280 696E7431 		.ascii	"int16_t\000"
 1616      365F7400 
 1617              	.LASF14:
 1618 0288 696E7433 		.ascii	"int32_t\000"
 1618      325F7400 
 1619              	.LASF20:
 1620 0290 73697A65 		.ascii	"sizetype\000"
 1620      74797065 
 1620      00
 1621              	.LASF46:
 1622 0299 656E6473 		.ascii	"endstop_\000"
 1622      746F705F 
 1622      00
 1623              	.LASF9:
 1624 02a2 6C6F6E67 		.ascii	"long long int\000"
 1624      206C6F6E 
 1624      6720696E 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\ccGnhrxh.s 			page 36


 1624      7400
 1625              	.LASF51:
 1626 02b0 2E5C7365 		.ascii	".\\sensorFortolker.c\000"
 1626      6E736F72 
 1626      466F7274 
 1626      6F6C6B65 
 1626      722E6300 
 1627              	.LASF19:
 1628 02c4 63686172 		.ascii	"char\000"
 1628      00
 1629              	.LASF45:
 1630 02c9 64617461 		.ascii	"dataReady\000"
 1630      52656164 
 1630      7900
 1631              	.LASF4:
 1632 02d3 73686F72 		.ascii	"short int\000"
 1632      7420696E 
 1632      7400
 1633              	.LASF22:
 1634 02dd 66697831 		.ascii	"fix16_t\000"
 1634      365F7400 
 1635              	.LASF15:
 1636 02e5 75696E74 		.ascii	"uint8\000"
 1636      3800
 1637              	.LASF7:
 1638 02eb 6C6F6E67 		.ascii	"long int\000"
 1638      20696E74 
 1638      00
 1639              	.LASF39:
 1640 02f4 72617741 		.ascii	"rawAccY\000"
 1640      63635900 
 1641              	.LASF40:
 1642 02fc 72617741 		.ascii	"rawAccZ\000"
 1642      63635A00 
 1643              	.LASF0:
 1644 0304 7369676E 		.ascii	"signed char\000"
 1644      65642063 
 1644      68617200 
 1645              	.LASF35:
 1646 0310 6779726F 		.ascii	"gyroData\000"
 1646      44617461 
 1646      00
 1647              	.LASF36:
 1648 0319 72617747 		.ascii	"rawGyroX\000"
 1648      79726F58 
 1648      00
 1649              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
