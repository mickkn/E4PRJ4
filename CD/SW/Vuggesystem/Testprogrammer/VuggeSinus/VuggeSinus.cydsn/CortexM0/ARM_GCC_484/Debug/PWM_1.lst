ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Start, %function
  29              	PWM_1_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.20
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_20 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_1_Init
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_1_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	PWM_1_Start, .-PWM_1_Start
  65              		.section	.text.PWM_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_1_Init, %function
  71              	PWM_1_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_1.c **** 
  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 1C4B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 184B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0921     		mov	r1, #9
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 0022 164B     		ldr	r3, .L6+4
 102 0024 154A     		ldr	r2, .L6+4
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 5


 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 109              		.loc 1 133 0
 110 0032 FF20     		mov	r0, #255
 111 0034 FFF7FEFF 		bl	PWM_1_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 112              		.loc 1 136 0
 113 0038 FF20     		mov	r0, #255
 114 003a FFF7FEFF 		bl	PWM_1_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 115              		.loc 1 139 0
 116 003e 7F20     		mov	r0, #127
 117 0040 FFF7FEFF 		bl	PWM_1_WriteCompare
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 118              		.loc 1 154 0
 119 0044 0020     		mov	r0, #0
 120 0046 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 6


 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 121              		.loc 1 167 0
 122 004a BC1D     		add	r4, r7, #6
 123 004c FFF7FEFF 		bl	CyEnterCriticalSection
 124 0050 031C     		mov	r3, r0
 125 0052 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 126              		.loc 1 169 0
 127 0054 0A4B     		ldr	r3, .L6+8
 128 0056 0A4A     		ldr	r2, .L6+8
 129 0058 1278     		ldrb	r2, [r2]
 130 005a D2B2     		uxtb	r2, r2
 131 005c 1021     		mov	r1, #16
 132 005e 0A43     		orr	r2, r1
 133 0060 D2B2     		uxtb	r2, r2
 134 0062 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 135              		.loc 1 172 0
 136 0064 BB1D     		add	r3, r7, #6
 137 0066 1B78     		ldrb	r3, [r3]
 138 0068 181C     		mov	r0, r3
 139 006a FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 140              		.loc 1 176 0
 141 006e FFF7FEFF 		bl	PWM_1_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 142              		.loc 1 179 0
 143 0072 BD46     		mov	sp, r7
 144 0074 03B0     		add	sp, sp, #12
 145              		@ sp needed
 146 0076 90BD     		pop	{r4, r7, pc}
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 0078 71000F40 		.word	1074724977
 151 007c 91000F40 		.word	1074725009
 152 0080 90000F40 		.word	1074725008
 153              		.cfi_endproc
 154              	.LFE1:
 155              		.size	PWM_1_Init, .-PWM_1_Init
 156              		.section	.text.PWM_1_Enable,"ax",%progbits
 157              		.align	2
 158              		.global	PWM_1_Enable
 159              		.code	16
 160              		.thumb_func
 161              		.type	PWM_1_Enable, %function
 162              	PWM_1_Enable:
 163              	.LFB2:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 7


 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
 164              		.loc 1 200 0
 165              		.cfi_startproc
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 172              		.loc 1 209 0
 173 0004 054B     		ldr	r3, .L9
 174 0006 054A     		ldr	r2, .L9
 175 0008 1278     		ldrb	r2, [r2]
 176 000a D2B2     		uxtb	r2, r2
 177 000c 8021     		mov	r1, #128
 178 000e 4942     		neg	r1, r1
 179 0010 0A43     		orr	r2, r1
 180 0012 D2B2     		uxtb	r2, r2
 181 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
 182              		.loc 1 211 0
 183 0016 BD46     		mov	sp, r7
 184              		@ sp needed
 185 0018 80BD     		pop	{r7, pc}
 186              	.L10:
 187 001a C046     		.align	2
 188              	.L9:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 8


 189 001c 71000F40 		.word	1074724977
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	PWM_1_Enable, .-PWM_1_Enable
 193              		.section	.text.PWM_1_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	PWM_1_Stop
 196              		.code	16
 197              		.thumb_func
 198              		.type	PWM_1_Stop, %function
 199              	PWM_1_Stop:
 200              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
 201              		.loc 1 234 0
 202              		.cfi_startproc
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 209              		.loc 1 236 0
 210 0004 044B     		ldr	r3, .L12
 211 0006 044A     		ldr	r2, .L12
 212 0008 1278     		ldrb	r2, [r2]
 213 000a D1B2     		uxtb	r1, r2
 214 000c 7F22     		mov	r2, #127
 215 000e 0A40     		and	r2, r1
 216 0010 D2B2     		uxtb	r2, r2
 217 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 9


 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
 218              		.loc 1 244 0
 219 0014 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0016 80BD     		pop	{r7, pc}
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 0018 71000F40 		.word	1074724977
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	PWM_1_Stop, .-PWM_1_Stop
 229              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 230              		.align	2
 231              		.global	PWM_1_WriteCounter
 232              		.code	16
 233              		.thumb_func
 234              		.type	PWM_1_WriteCounter, %function
 235              	PWM_1_WriteCounter:
 236              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 10


 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 11


 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
 379:.\Generated_Source\PSoC4/PWM_1.c **** 
 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 12


 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
 237              		.loc 1 405 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 82B0     		sub	sp, sp, #8
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 0006 021C     		mov	r2, r0
 248 0008 FB1D     		add	r3, r7, #7
 249 000a 1A70     		strb	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 250              		.loc 1 406 0
 251 000c 034B     		ldr	r3, .L15
 252 000e FA1D     		add	r2, r7, #7
 253 0010 1278     		ldrb	r2, [r2]
 254 0012 1A70     		strb	r2, [r3]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
 255              		.loc 1 407 0
 256 0014 BD46     		mov	sp, r7
 257 0016 02B0     		add	sp, sp, #8
 258              		@ sp needed
 259 0018 80BD     		pop	{r7, pc}
 260              	.L16:
 261 001a C046     		.align	2
 262              	.L15:
 263 001c 01000F40 		.word	1074724865
 264              		.cfi_endproc
 265              	.LFE4:
 266              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 267              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_ReadCounter
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_1_ReadCounter, %function
 273              	PWM_1_ReadCounter:
 274              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 13


 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 275              		.loc 1 426 0
 276              		.cfi_startproc
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 283              		.loc 1 430 0
 284 0004 034B     		ldr	r3, .L19
 285 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 286              		.loc 1 433 0
 287 0008 034B     		ldr	r3, .L19+4
 288 000a 1B78     		ldrb	r3, [r3]
 289 000c DBB2     		uxtb	r3, r3
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 290              		.loc 1 434 0
 291 000e 181C     		mov	r0, r3
 292 0010 BD46     		mov	sp, r7
 293              		@ sp needed
 294 0012 80BD     		pop	{r7, pc}
 295              	.L20:
 296              		.align	2
 297              	.L19:
 298 0014 11000F40 		.word	1074724881
 299 0018 51000F40 		.word	1074724945
 300              		.cfi_endproc
 301              	.LFE5:
 302              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 303              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_1_ClearFIFO
 306              		.code	16
 307              		.thumb_func
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 14


 308              		.type	PWM_1_ClearFIFO, %function
 309              	PWM_1_ClearFIFO:
 310              	.LFB6:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 319              		.loc 1 455 0
 320 0004 01E0     		b	.L22
 321              	.L23:
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 322              		.loc 1 457 0
 323 0006 FFF7FEFF 		bl	PWM_1_ReadCapture
 324              	.L22:
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 325              		.loc 1 455 0 discriminator 1
 326 000a FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 327 000e 031C     		mov	r3, r0
 328 0010 1A1C     		mov	r2, r3
 329 0012 1023     		mov	r3, #16
 330 0014 1340     		and	r3, r2
 331 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 332              		.loc 1 459 0
 333 0018 BD46     		mov	sp, r7
 334              		@ sp needed
 335 001a 80BD     		pop	{r7, pc}
 336              		.cfi_endproc
 337              	.LFE6:
 338              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 15


 339              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 340              		.align	2
 341              		.global	PWM_1_WritePeriod
 342              		.code	16
 343              		.thumb_func
 344              		.type	PWM_1_WritePeriod, %function
 345              	PWM_1_WritePeriod:
 346              	.LFB7:
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 347              		.loc 1 483 0
 348              		.cfi_startproc
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 021C     		mov	r2, r0
 358 0008 FB1D     		add	r3, r7, #7
 359 000a 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 360              		.loc 1 487 0
 361 000c 034B     		ldr	r3, .L25
 362 000e FA1D     		add	r2, r7, #7
 363 0010 1278     		ldrb	r2, [r2]
 364 0012 1A70     		strb	r2, [r3]
 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 365              		.loc 1 489 0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 16


 366 0014 BD46     		mov	sp, r7
 367 0016 02B0     		add	sp, sp, #8
 368              		@ sp needed
 369 0018 80BD     		pop	{r7, pc}
 370              	.L26:
 371 001a C046     		.align	2
 372              	.L25:
 373 001c 41000F40 		.word	1074724929
 374              		.cfi_endproc
 375              	.LFE7:
 376              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 377              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 378              		.align	2
 379              		.global	PWM_1_WriteCompare
 380              		.code	16
 381              		.thumb_func
 382              		.type	PWM_1_WriteCompare, %function
 383              	PWM_1_WriteCompare:
 384              	.LFB8:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 385              		.loc 1 518 0
 386              		.cfi_startproc
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 17


 394              		.cfi_def_cfa_register 7
 395 0006 021C     		mov	r2, r0
 396 0008 FB1D     		add	r3, r7, #7
 397 000a 1A70     		strb	r2, [r3]
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 398              		.loc 1 522 0
 399 000c 034B     		ldr	r3, .L28
 400 000e FA1D     		add	r2, r7, #7
 401 0010 1278     		ldrb	r2, [r2]
 402 0012 1A70     		strb	r2, [r3]
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 403              		.loc 1 532 0
 404 0014 BD46     		mov	sp, r7
 405 0016 02B0     		add	sp, sp, #8
 406              		@ sp needed
 407 0018 80BD     		pop	{r7, pc}
 408              	.L29:
 409 001a C046     		.align	2
 410              	.L28:
 411 001c 21000F40 		.word	1074724897
 412              		.cfi_endproc
 413              	.LFE8:
 414              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 415              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 416              		.align	2
 417              		.global	PWM_1_SetInterruptMode
 418              		.code	16
 419              		.thumb_func
 420              		.type	PWM_1_SetInterruptMode, %function
 421              	PWM_1_SetInterruptMode:
 422              	.LFB9:
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 18


 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 19


 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 20


 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 423              		.loc 1 685 0
 424              		.cfi_startproc
 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 433 0006 021C     		mov	r2, r0
 434 0008 FB1D     		add	r3, r7, #7
 435 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 436              		.loc 1 686 0
 437 000c 034B     		ldr	r3, .L31
 438 000e FA1D     		add	r2, r7, #7
 439 0010 1278     		ldrb	r2, [r2]
 440 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 441              		.loc 1 687 0
 442 0014 BD46     		mov	sp, r7
 443 0016 02B0     		add	sp, sp, #8
 444              		@ sp needed
 445 0018 80BD     		pop	{r7, pc}
 446              	.L32:
 447 001a C046     		.align	2
 448              	.L31:
 449 001c 80000F40 		.word	1074724992
 450              		.cfi_endproc
 451              	.LFE9:
 452              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 21


 453              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 454              		.align	2
 455              		.global	PWM_1_ReadStatusRegister
 456              		.code	16
 457              		.thumb_func
 458              		.type	PWM_1_ReadStatusRegister, %function
 459              	PWM_1_ReadStatusRegister:
 460              	.LFB10:
 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 461              		.loc 1 712 0
 462              		.cfi_startproc
 463 0000 80B5     		push	{r7, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 469              		.loc 1 713 0
 470 0004 024B     		ldr	r3, .L35
 471 0006 1B78     		ldrb	r3, [r3]
 472 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 473              		.loc 1 714 0
 474 000a 181C     		mov	r0, r3
 475 000c BD46     		mov	sp, r7
 476              		@ sp needed
 477 000e 80BD     		pop	{r7, pc}
 478              	.L36:
 479              		.align	2
 480              	.L35:
 481 0010 60000F40 		.word	1074724960
 482              		.cfi_endproc
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 22


 483              	.LFE10:
 484              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 485              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 486              		.align	2
 487              		.global	PWM_1_ReadControlRegister
 488              		.code	16
 489              		.thumb_func
 490              		.type	PWM_1_ReadControlRegister, %function
 491              	PWM_1_ReadControlRegister:
 492              	.LFB11:
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 493              		.loc 1 738 0
 494              		.cfi_startproc
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              		.cfi_def_cfa_offset 16
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 503              		.loc 1 741 0
 504 0006 054A     		ldr	r2, .L39
 505 0008 FB1D     		add	r3, r7, #7
 506 000a 1278     		ldrb	r2, [r2]
 507 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 508              		.loc 1 742 0
 509 000e FB1D     		add	r3, r7, #7
 510 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 23


 511              		.loc 1 743 0
 512 0012 181C     		mov	r0, r3
 513 0014 BD46     		mov	sp, r7
 514 0016 02B0     		add	sp, sp, #8
 515              		@ sp needed
 516 0018 80BD     		pop	{r7, pc}
 517              	.L40:
 518 001a C046     		.align	2
 519              	.L39:
 520 001c 71000F40 		.word	1074724977
 521              		.cfi_endproc
 522              	.LFE11:
 523              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 524              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 525              		.align	2
 526              		.global	PWM_1_WriteControlRegister
 527              		.code	16
 528              		.thumb_func
 529              		.type	PWM_1_WriteControlRegister, %function
 530              	PWM_1_WriteControlRegister:
 531              	.LFB12:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
 532              		.loc 1 766 0
 533              		.cfi_startproc
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 82B0     		sub	sp, sp, #8
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 021C     		mov	r2, r0
 543 0008 FB1D     		add	r3, r7, #7
 544 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 24


 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 545              		.loc 1 767 0
 546 000c 034B     		ldr	r3, .L42
 547 000e FA1D     		add	r2, r7, #7
 548 0010 1278     		ldrb	r2, [r2]
 549 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 550              		.loc 1 768 0
 551 0014 BD46     		mov	sp, r7
 552 0016 02B0     		add	sp, sp, #8
 553              		@ sp needed
 554 0018 80BD     		pop	{r7, pc}
 555              	.L43:
 556 001a C046     		.align	2
 557              	.L42:
 558 001c 71000F40 		.word	1074724977
 559              		.cfi_endproc
 560              	.LFE12:
 561              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 562              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 563              		.align	2
 564              		.global	PWM_1_ReadCapture
 565              		.code	16
 566              		.thumb_func
 567              		.type	PWM_1_ReadCapture, %function
 568              	PWM_1_ReadCapture:
 569              	.LFB13:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 570              		.loc 1 791 0
 571              		.cfi_startproc
 572 0000 80B5     		push	{r7, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 25


 577              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 578              		.loc 1 792 0
 579 0004 024B     		ldr	r3, .L46
 580 0006 1B78     		ldrb	r3, [r3]
 581 0008 DBB2     		uxtb	r3, r3
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 582              		.loc 1 793 0
 583 000a 181C     		mov	r0, r3
 584 000c BD46     		mov	sp, r7
 585              		@ sp needed
 586 000e 80BD     		pop	{r7, pc}
 587              	.L47:
 588              		.align	2
 589              	.L46:
 590 0010 51000F40 		.word	1074724945
 591              		.cfi_endproc
 592              	.LFE13:
 593              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 594              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 595              		.align	2
 596              		.global	PWM_1_ReadCompare
 597              		.code	16
 598              		.thumb_func
 599              		.type	PWM_1_ReadCompare, %function
 600              	PWM_1_ReadCompare:
 601              	.LFB14:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 602              		.loc 1 817 0
 603              		.cfi_startproc
 604 0000 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 26


 608 0002 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 610              		.loc 1 821 0
 611 0004 024B     		ldr	r3, .L50
 612 0006 1B78     		ldrb	r3, [r3]
 613 0008 DBB2     		uxtb	r3, r3
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 614              		.loc 1 823 0
 615 000a 181C     		mov	r0, r3
 616 000c BD46     		mov	sp, r7
 617              		@ sp needed
 618 000e 80BD     		pop	{r7, pc}
 619              	.L51:
 620              		.align	2
 621              	.L50:
 622 0010 21000F40 		.word	1074724897
 623              		.cfi_endproc
 624              	.LFE14:
 625              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 626              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 627              		.align	2
 628              		.global	PWM_1_ReadPeriod
 629              		.code	16
 630              		.thumb_func
 631              		.type	PWM_1_ReadPeriod, %function
 632              	PWM_1_ReadPeriod:
 633              	.LFB15:
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 27


 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 634              		.loc 1 885 0
 635              		.cfi_startproc
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 642              		.loc 1 889 0
 643 0004 024B     		ldr	r3, .L54
 644 0006 1B78     		ldrb	r3, [r3]
 645 0008 DBB2     		uxtb	r3, r3
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 646              		.loc 1 891 0
 647 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 28


 648 000c BD46     		mov	sp, r7
 649              		@ sp needed
 650 000e 80BD     		pop	{r7, pc}
 651              	.L55:
 652              		.align	2
 653              	.L54:
 654 0010 41000F40 		.word	1074724929
 655              		.cfi_endproc
 656              	.LFE15:
 657              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 658              		.text
 659              	.Letext0:
 660              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 661              		.section	.debug_info,"",%progbits
 662              	.Ldebug_info0:
 663 0000 7E020000 		.4byte	0x27e
 664 0004 0400     		.2byte	0x4
 665 0006 00000000 		.4byte	.Ldebug_abbrev0
 666 000a 04       		.byte	0x4
 667 000b 01       		.uleb128 0x1
 668 000c 69000000 		.4byte	.LASF38
 669 0010 01       		.byte	0x1
 670 0011 5A020000 		.4byte	.LASF39
 671 0015 BA020000 		.4byte	.LASF40
 672 0019 00000000 		.4byte	.Ldebug_ranges0+0
 673 001d 00000000 		.4byte	0
 674 0021 00000000 		.4byte	.Ldebug_line0
 675 0025 02       		.uleb128 0x2
 676 0026 01       		.byte	0x1
 677 0027 06       		.byte	0x6
 678 0028 A6020000 		.4byte	.LASF0
 679 002c 02       		.uleb128 0x2
 680 002d 01       		.byte	0x1
 681 002e 08       		.byte	0x8
 682 002f E5000000 		.4byte	.LASF1
 683 0033 02       		.uleb128 0x2
 684 0034 02       		.byte	0x2
 685 0035 05       		.byte	0x5
 686 0036 7C010000 		.4byte	.LASF2
 687 003a 02       		.uleb128 0x2
 688 003b 02       		.byte	0x2
 689 003c 07       		.byte	0x7
 690 003d 37000000 		.4byte	.LASF3
 691 0041 02       		.uleb128 0x2
 692 0042 04       		.byte	0x4
 693 0043 05       		.byte	0x5
 694 0044 98020000 		.4byte	.LASF4
 695 0048 02       		.uleb128 0x2
 696 0049 04       		.byte	0x4
 697 004a 07       		.byte	0x7
 698 004b 09010000 		.4byte	.LASF5
 699 004f 02       		.uleb128 0x2
 700 0050 08       		.byte	0x8
 701 0051 05       		.byte	0x5
 702 0052 12020000 		.4byte	.LASF6
 703 0056 02       		.uleb128 0x2
 704 0057 08       		.byte	0x8
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 29


 705 0058 07       		.byte	0x7
 706 0059 CB010000 		.4byte	.LASF7
 707 005d 03       		.uleb128 0x3
 708 005e 04       		.byte	0x4
 709 005f 05       		.byte	0x5
 710 0060 696E7400 		.ascii	"int\000"
 711 0064 02       		.uleb128 0x2
 712 0065 04       		.byte	0x4
 713 0066 07       		.byte	0x7
 714 0067 BE010000 		.4byte	.LASF8
 715 006b 04       		.uleb128 0x4
 716 006c 1B010000 		.4byte	.LASF12
 717 0070 02       		.byte	0x2
 718 0071 A1       		.byte	0xa1
 719 0072 2C000000 		.4byte	0x2c
 720 0076 02       		.uleb128 0x2
 721 0077 04       		.byte	0x4
 722 0078 04       		.byte	0x4
 723 0079 63000000 		.4byte	.LASF9
 724 007d 02       		.uleb128 0x2
 725 007e 08       		.byte	0x8
 726 007f 04       		.byte	0x4
 727 0080 52010000 		.4byte	.LASF10
 728 0084 02       		.uleb128 0x2
 729 0085 01       		.byte	0x1
 730 0086 08       		.byte	0x8
 731 0087 A1020000 		.4byte	.LASF11
 732 008b 05       		.uleb128 0x5
 733 008c F3000000 		.4byte	.LASF13
 734 0090 02       		.byte	0x2
 735 0091 4B01     		.2byte	0x14b
 736 0093 97000000 		.4byte	0x97
 737 0097 06       		.uleb128 0x6
 738 0098 6B000000 		.4byte	0x6b
 739 009c 02       		.uleb128 0x2
 740 009d 04       		.byte	0x4
 741 009e 07       		.byte	0x7
 742 009f F6010000 		.4byte	.LASF14
 743 00a3 07       		.uleb128 0x7
 744 00a4 26030000 		.4byte	.LASF17
 745 00a8 01       		.byte	0x1
 746 00a9 37       		.byte	0x37
 747 00aa 00000000 		.4byte	.LFB0
 748 00ae 24000000 		.4byte	.LFE0-.LFB0
 749 00b2 01       		.uleb128 0x1
 750 00b3 9C       		.byte	0x9c
 751 00b4 08       		.uleb128 0x8
 752 00b5 B3010000 		.4byte	.LASF20
 753 00b9 01       		.byte	0x1
 754 00ba 54       		.byte	0x54
 755 00bb 00000000 		.4byte	.LFB1
 756 00bf 84000000 		.4byte	.LFE1-.LFB1
 757 00c3 01       		.uleb128 0x1
 758 00c4 9C       		.byte	0x9c
 759 00c5 E6000000 		.4byte	0xe6
 760 00c9 09       		.uleb128 0x9
 761 00ca F1010000 		.4byte	.LASF15
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 30


 762 00ce 01       		.byte	0x1
 763 00cf 57       		.byte	0x57
 764 00d0 6B000000 		.4byte	0x6b
 765 00d4 02       		.uleb128 0x2
 766 00d5 91       		.byte	0x91
 767 00d6 6F       		.sleb128 -17
 768 00d7 09       		.uleb128 0x9
 769 00d8 59010000 		.4byte	.LASF16
 770 00dc 01       		.byte	0x1
 771 00dd 5D       		.byte	0x5d
 772 00de 6B000000 		.4byte	0x6b
 773 00e2 02       		.uleb128 0x2
 774 00e3 91       		.byte	0x91
 775 00e4 6E       		.sleb128 -18
 776 00e5 00       		.byte	0
 777 00e6 0A       		.uleb128 0xa
 778 00e7 00000000 		.4byte	.LASF18
 779 00eb 01       		.byte	0x1
 780 00ec C7       		.byte	0xc7
 781 00ed 00000000 		.4byte	.LFB2
 782 00f1 20000000 		.4byte	.LFE2-.LFB2
 783 00f5 01       		.uleb128 0x1
 784 00f6 9C       		.byte	0x9c
 785 00f7 0A       		.uleb128 0xa
 786 00f8 8D020000 		.4byte	.LASF19
 787 00fc 01       		.byte	0x1
 788 00fd E9       		.byte	0xe9
 789 00fe 00000000 		.4byte	.LFB3
 790 0102 1C000000 		.4byte	.LFE3-.LFB3
 791 0106 01       		.uleb128 0x1
 792 0107 9C       		.byte	0x9c
 793 0108 0B       		.uleb128 0xb
 794 0109 0D000000 		.4byte	.LASF21
 795 010d 01       		.byte	0x1
 796 010e 9301     		.2byte	0x193
 797 0110 00000000 		.4byte	.LFB4
 798 0114 20000000 		.4byte	.LFE4-.LFB4
 799 0118 01       		.uleb128 0x1
 800 0119 9C       		.byte	0x9c
 801 011a 2E010000 		.4byte	0x12e
 802 011e 0C       		.uleb128 0xc
 803 011f E2010000 		.4byte	.LASF24
 804 0123 01       		.byte	0x1
 805 0124 9301     		.2byte	0x193
 806 0126 6B000000 		.4byte	0x6b
 807 012a 02       		.uleb128 0x2
 808 012b 91       		.byte	0x91
 809 012c 77       		.sleb128 -9
 810 012d 00       		.byte	0
 811 012e 0D       		.uleb128 0xd
 812 012f 7B020000 		.4byte	.LASF30
 813 0133 01       		.byte	0x1
 814 0134 A901     		.2byte	0x1a9
 815 0136 6B000000 		.4byte	0x6b
 816 013a 00000000 		.4byte	.LFB5
 817 013e 1C000000 		.4byte	.LFE5-.LFB5
 818 0142 01       		.uleb128 0x1
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 31


 819 0143 9C       		.byte	0x9c
 820 0144 0E       		.uleb128 0xe
 821 0145 27000000 		.4byte	.LASF22
 822 0149 01       		.byte	0x1
 823 014a C501     		.2byte	0x1c5
 824 014c 00000000 		.4byte	.LFB6
 825 0150 1C000000 		.4byte	.LFE6-.LFB6
 826 0154 01       		.uleb128 0x1
 827 0155 9C       		.byte	0x9c
 828 0156 0B       		.uleb128 0xb
 829 0157 48020000 		.4byte	.LASF23
 830 015b 01       		.byte	0x1
 831 015c E201     		.2byte	0x1e2
 832 015e 00000000 		.4byte	.LFB7
 833 0162 20000000 		.4byte	.LFE7-.LFB7
 834 0166 01       		.uleb128 0x1
 835 0167 9C       		.byte	0x9c
 836 0168 7C010000 		.4byte	0x17c
 837 016c 0C       		.uleb128 0xc
 838 016d 20000000 		.4byte	.LASF25
 839 0171 01       		.byte	0x1
 840 0172 E201     		.2byte	0x1e2
 841 0174 6B000000 		.4byte	0x6b
 842 0178 02       		.uleb128 0x2
 843 0179 91       		.byte	0x91
 844 017a 77       		.sleb128 -9
 845 017b 00       		.byte	0
 846 017c 0B       		.uleb128 0xb
 847 017d FF010000 		.4byte	.LASF26
 848 0181 01       		.byte	0x1
 849 0182 0402     		.2byte	0x204
 850 0184 00000000 		.4byte	.LFB8
 851 0188 20000000 		.4byte	.LFE8-.LFB8
 852 018c 01       		.uleb128 0x1
 853 018d 9C       		.byte	0x9c
 854 018e A2010000 		.4byte	0x1a2
 855 0192 0C       		.uleb128 0xc
 856 0193 B2020000 		.4byte	.LASF27
 857 0197 01       		.byte	0x1
 858 0198 0402     		.2byte	0x204
 859 019a 6B000000 		.4byte	0x6b
 860 019e 02       		.uleb128 0x2
 861 019f 91       		.byte	0x91
 862 01a0 77       		.sleb128 -9
 863 01a1 00       		.byte	0
 864 01a2 0B       		.uleb128 0xb
 865 01a3 29010000 		.4byte	.LASF28
 866 01a7 01       		.byte	0x1
 867 01a8 AC02     		.2byte	0x2ac
 868 01aa 00000000 		.4byte	.LFB9
 869 01ae 20000000 		.4byte	.LFE9-.LFB9
 870 01b2 01       		.uleb128 0x1
 871 01b3 9C       		.byte	0x9c
 872 01b4 C8010000 		.4byte	0x1c8
 873 01b8 0C       		.uleb128 0xc
 874 01b9 3A020000 		.4byte	.LASF29
 875 01bd 01       		.byte	0x1
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 32


 876 01be AC02     		.2byte	0x2ac
 877 01c0 6B000000 		.4byte	0x6b
 878 01c4 02       		.uleb128 0x2
 879 01c5 91       		.byte	0x91
 880 01c6 77       		.sleb128 -9
 881 01c7 00       		.byte	0
 882 01c8 0D       		.uleb128 0xd
 883 01c9 4A000000 		.4byte	.LASF31
 884 01cd 01       		.byte	0x1
 885 01ce C702     		.2byte	0x2c7
 886 01d0 6B000000 		.4byte	0x6b
 887 01d4 00000000 		.4byte	.LFB10
 888 01d8 14000000 		.4byte	.LFE10-.LFB10
 889 01dc 01       		.uleb128 0x1
 890 01dd 9C       		.byte	0x9c
 891 01de 0F       		.uleb128 0xf
 892 01df 20020000 		.4byte	.LASF41
 893 01e3 01       		.byte	0x1
 894 01e4 E102     		.2byte	0x2e1
 895 01e6 6B000000 		.4byte	0x6b
 896 01ea 00000000 		.4byte	.LFB11
 897 01ee 20000000 		.4byte	.LFE11-.LFB11
 898 01f2 01       		.uleb128 0x1
 899 01f3 9C       		.byte	0x9c
 900 01f4 08020000 		.4byte	0x208
 901 01f8 10       		.uleb128 0x10
 902 01f9 EA010000 		.4byte	.LASF32
 903 01fd 01       		.byte	0x1
 904 01fe E302     		.2byte	0x2e3
 905 0200 6B000000 		.4byte	0x6b
 906 0204 02       		.uleb128 0x2
 907 0205 91       		.byte	0x91
 908 0206 77       		.sleb128 -9
 909 0207 00       		.byte	0
 910 0208 0B       		.uleb128 0xb
 911 0209 98010000 		.4byte	.LASF33
 912 020d 01       		.byte	0x1
 913 020e FD02     		.2byte	0x2fd
 914 0210 00000000 		.4byte	.LFB12
 915 0214 20000000 		.4byte	.LFE12-.LFB12
 916 0218 01       		.uleb128 0x1
 917 0219 9C       		.byte	0x9c
 918 021a 2E020000 		.4byte	0x22e
 919 021e 0C       		.uleb128 0xc
 920 021f 21010000 		.4byte	.LASF34
 921 0223 01       		.byte	0x1
 922 0224 FD02     		.2byte	0x2fd
 923 0226 6B000000 		.4byte	0x6b
 924 022a 02       		.uleb128 0x2
 925 022b 91       		.byte	0x91
 926 022c 77       		.sleb128 -9
 927 022d 00       		.byte	0
 928 022e 0D       		.uleb128 0xd
 929 022f 86010000 		.4byte	.LASF35
 930 0233 01       		.byte	0x1
 931 0234 1603     		.2byte	0x316
 932 0236 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 33


 933 023a 00000000 		.4byte	.LFB13
 934 023e 14000000 		.4byte	.LFE13-.LFB13
 935 0242 01       		.uleb128 0x1
 936 0243 9C       		.byte	0x9c
 937 0244 0D       		.uleb128 0xd
 938 0245 40010000 		.4byte	.LASF36
 939 0249 01       		.byte	0x1
 940 024a 3003     		.2byte	0x330
 941 024c 6B000000 		.4byte	0x6b
 942 0250 00000000 		.4byte	.LFB14
 943 0254 14000000 		.4byte	.LFE14-.LFB14
 944 0258 01       		.uleb128 0x1
 945 0259 9C       		.byte	0x9c
 946 025a 0D       		.uleb128 0xd
 947 025b F8000000 		.4byte	.LASF37
 948 025f 01       		.byte	0x1
 949 0260 7403     		.2byte	0x374
 950 0262 6B000000 		.4byte	0x6b
 951 0266 00000000 		.4byte	.LFB15
 952 026a 14000000 		.4byte	.LFE15-.LFB15
 953 026e 01       		.uleb128 0x1
 954 026f 9C       		.byte	0x9c
 955 0270 11       		.uleb128 0x11
 956 0271 6E010000 		.4byte	.LASF42
 957 0275 01       		.byte	0x1
 958 0276 20       		.byte	0x20
 959 0277 6B000000 		.4byte	0x6b
 960 027b 05       		.uleb128 0x5
 961 027c 03       		.byte	0x3
 962 027d 00000000 		.4byte	PWM_1_initVar
 963 0281 00       		.byte	0
 964              		.section	.debug_abbrev,"",%progbits
 965              	.Ldebug_abbrev0:
 966 0000 01       		.uleb128 0x1
 967 0001 11       		.uleb128 0x11
 968 0002 01       		.byte	0x1
 969 0003 25       		.uleb128 0x25
 970 0004 0E       		.uleb128 0xe
 971 0005 13       		.uleb128 0x13
 972 0006 0B       		.uleb128 0xb
 973 0007 03       		.uleb128 0x3
 974 0008 0E       		.uleb128 0xe
 975 0009 1B       		.uleb128 0x1b
 976 000a 0E       		.uleb128 0xe
 977 000b 55       		.uleb128 0x55
 978 000c 17       		.uleb128 0x17
 979 000d 11       		.uleb128 0x11
 980 000e 01       		.uleb128 0x1
 981 000f 10       		.uleb128 0x10
 982 0010 17       		.uleb128 0x17
 983 0011 00       		.byte	0
 984 0012 00       		.byte	0
 985 0013 02       		.uleb128 0x2
 986 0014 24       		.uleb128 0x24
 987 0015 00       		.byte	0
 988 0016 0B       		.uleb128 0xb
 989 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 34


 990 0018 3E       		.uleb128 0x3e
 991 0019 0B       		.uleb128 0xb
 992 001a 03       		.uleb128 0x3
 993 001b 0E       		.uleb128 0xe
 994 001c 00       		.byte	0
 995 001d 00       		.byte	0
 996 001e 03       		.uleb128 0x3
 997 001f 24       		.uleb128 0x24
 998 0020 00       		.byte	0
 999 0021 0B       		.uleb128 0xb
 1000 0022 0B       		.uleb128 0xb
 1001 0023 3E       		.uleb128 0x3e
 1002 0024 0B       		.uleb128 0xb
 1003 0025 03       		.uleb128 0x3
 1004 0026 08       		.uleb128 0x8
 1005 0027 00       		.byte	0
 1006 0028 00       		.byte	0
 1007 0029 04       		.uleb128 0x4
 1008 002a 16       		.uleb128 0x16
 1009 002b 00       		.byte	0
 1010 002c 03       		.uleb128 0x3
 1011 002d 0E       		.uleb128 0xe
 1012 002e 3A       		.uleb128 0x3a
 1013 002f 0B       		.uleb128 0xb
 1014 0030 3B       		.uleb128 0x3b
 1015 0031 0B       		.uleb128 0xb
 1016 0032 49       		.uleb128 0x49
 1017 0033 13       		.uleb128 0x13
 1018 0034 00       		.byte	0
 1019 0035 00       		.byte	0
 1020 0036 05       		.uleb128 0x5
 1021 0037 16       		.uleb128 0x16
 1022 0038 00       		.byte	0
 1023 0039 03       		.uleb128 0x3
 1024 003a 0E       		.uleb128 0xe
 1025 003b 3A       		.uleb128 0x3a
 1026 003c 0B       		.uleb128 0xb
 1027 003d 3B       		.uleb128 0x3b
 1028 003e 05       		.uleb128 0x5
 1029 003f 49       		.uleb128 0x49
 1030 0040 13       		.uleb128 0x13
 1031 0041 00       		.byte	0
 1032 0042 00       		.byte	0
 1033 0043 06       		.uleb128 0x6
 1034 0044 35       		.uleb128 0x35
 1035 0045 00       		.byte	0
 1036 0046 49       		.uleb128 0x49
 1037 0047 13       		.uleb128 0x13
 1038 0048 00       		.byte	0
 1039 0049 00       		.byte	0
 1040 004a 07       		.uleb128 0x7
 1041 004b 2E       		.uleb128 0x2e
 1042 004c 00       		.byte	0
 1043 004d 3F       		.uleb128 0x3f
 1044 004e 19       		.uleb128 0x19
 1045 004f 03       		.uleb128 0x3
 1046 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 35


 1047 0051 3A       		.uleb128 0x3a
 1048 0052 0B       		.uleb128 0xb
 1049 0053 3B       		.uleb128 0x3b
 1050 0054 0B       		.uleb128 0xb
 1051 0055 27       		.uleb128 0x27
 1052 0056 19       		.uleb128 0x19
 1053 0057 11       		.uleb128 0x11
 1054 0058 01       		.uleb128 0x1
 1055 0059 12       		.uleb128 0x12
 1056 005a 06       		.uleb128 0x6
 1057 005b 40       		.uleb128 0x40
 1058 005c 18       		.uleb128 0x18
 1059 005d 9642     		.uleb128 0x2116
 1060 005f 19       		.uleb128 0x19
 1061 0060 00       		.byte	0
 1062 0061 00       		.byte	0
 1063 0062 08       		.uleb128 0x8
 1064 0063 2E       		.uleb128 0x2e
 1065 0064 01       		.byte	0x1
 1066 0065 3F       		.uleb128 0x3f
 1067 0066 19       		.uleb128 0x19
 1068 0067 03       		.uleb128 0x3
 1069 0068 0E       		.uleb128 0xe
 1070 0069 3A       		.uleb128 0x3a
 1071 006a 0B       		.uleb128 0xb
 1072 006b 3B       		.uleb128 0x3b
 1073 006c 0B       		.uleb128 0xb
 1074 006d 27       		.uleb128 0x27
 1075 006e 19       		.uleb128 0x19
 1076 006f 11       		.uleb128 0x11
 1077 0070 01       		.uleb128 0x1
 1078 0071 12       		.uleb128 0x12
 1079 0072 06       		.uleb128 0x6
 1080 0073 40       		.uleb128 0x40
 1081 0074 18       		.uleb128 0x18
 1082 0075 9642     		.uleb128 0x2116
 1083 0077 19       		.uleb128 0x19
 1084 0078 01       		.uleb128 0x1
 1085 0079 13       		.uleb128 0x13
 1086 007a 00       		.byte	0
 1087 007b 00       		.byte	0
 1088 007c 09       		.uleb128 0x9
 1089 007d 34       		.uleb128 0x34
 1090 007e 00       		.byte	0
 1091 007f 03       		.uleb128 0x3
 1092 0080 0E       		.uleb128 0xe
 1093 0081 3A       		.uleb128 0x3a
 1094 0082 0B       		.uleb128 0xb
 1095 0083 3B       		.uleb128 0x3b
 1096 0084 0B       		.uleb128 0xb
 1097 0085 49       		.uleb128 0x49
 1098 0086 13       		.uleb128 0x13
 1099 0087 02       		.uleb128 0x2
 1100 0088 18       		.uleb128 0x18
 1101 0089 00       		.byte	0
 1102 008a 00       		.byte	0
 1103 008b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 36


 1104 008c 2E       		.uleb128 0x2e
 1105 008d 00       		.byte	0
 1106 008e 3F       		.uleb128 0x3f
 1107 008f 19       		.uleb128 0x19
 1108 0090 03       		.uleb128 0x3
 1109 0091 0E       		.uleb128 0xe
 1110 0092 3A       		.uleb128 0x3a
 1111 0093 0B       		.uleb128 0xb
 1112 0094 3B       		.uleb128 0x3b
 1113 0095 0B       		.uleb128 0xb
 1114 0096 27       		.uleb128 0x27
 1115 0097 19       		.uleb128 0x19
 1116 0098 11       		.uleb128 0x11
 1117 0099 01       		.uleb128 0x1
 1118 009a 12       		.uleb128 0x12
 1119 009b 06       		.uleb128 0x6
 1120 009c 40       		.uleb128 0x40
 1121 009d 18       		.uleb128 0x18
 1122 009e 9742     		.uleb128 0x2117
 1123 00a0 19       		.uleb128 0x19
 1124 00a1 00       		.byte	0
 1125 00a2 00       		.byte	0
 1126 00a3 0B       		.uleb128 0xb
 1127 00a4 2E       		.uleb128 0x2e
 1128 00a5 01       		.byte	0x1
 1129 00a6 3F       		.uleb128 0x3f
 1130 00a7 19       		.uleb128 0x19
 1131 00a8 03       		.uleb128 0x3
 1132 00a9 0E       		.uleb128 0xe
 1133 00aa 3A       		.uleb128 0x3a
 1134 00ab 0B       		.uleb128 0xb
 1135 00ac 3B       		.uleb128 0x3b
 1136 00ad 05       		.uleb128 0x5
 1137 00ae 27       		.uleb128 0x27
 1138 00af 19       		.uleb128 0x19
 1139 00b0 11       		.uleb128 0x11
 1140 00b1 01       		.uleb128 0x1
 1141 00b2 12       		.uleb128 0x12
 1142 00b3 06       		.uleb128 0x6
 1143 00b4 40       		.uleb128 0x40
 1144 00b5 18       		.uleb128 0x18
 1145 00b6 9742     		.uleb128 0x2117
 1146 00b8 19       		.uleb128 0x19
 1147 00b9 01       		.uleb128 0x1
 1148 00ba 13       		.uleb128 0x13
 1149 00bb 00       		.byte	0
 1150 00bc 00       		.byte	0
 1151 00bd 0C       		.uleb128 0xc
 1152 00be 05       		.uleb128 0x5
 1153 00bf 00       		.byte	0
 1154 00c0 03       		.uleb128 0x3
 1155 00c1 0E       		.uleb128 0xe
 1156 00c2 3A       		.uleb128 0x3a
 1157 00c3 0B       		.uleb128 0xb
 1158 00c4 3B       		.uleb128 0x3b
 1159 00c5 05       		.uleb128 0x5
 1160 00c6 49       		.uleb128 0x49
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 37


 1161 00c7 13       		.uleb128 0x13
 1162 00c8 02       		.uleb128 0x2
 1163 00c9 18       		.uleb128 0x18
 1164 00ca 00       		.byte	0
 1165 00cb 00       		.byte	0
 1166 00cc 0D       		.uleb128 0xd
 1167 00cd 2E       		.uleb128 0x2e
 1168 00ce 00       		.byte	0
 1169 00cf 3F       		.uleb128 0x3f
 1170 00d0 19       		.uleb128 0x19
 1171 00d1 03       		.uleb128 0x3
 1172 00d2 0E       		.uleb128 0xe
 1173 00d3 3A       		.uleb128 0x3a
 1174 00d4 0B       		.uleb128 0xb
 1175 00d5 3B       		.uleb128 0x3b
 1176 00d6 05       		.uleb128 0x5
 1177 00d7 27       		.uleb128 0x27
 1178 00d8 19       		.uleb128 0x19
 1179 00d9 49       		.uleb128 0x49
 1180 00da 13       		.uleb128 0x13
 1181 00db 11       		.uleb128 0x11
 1182 00dc 01       		.uleb128 0x1
 1183 00dd 12       		.uleb128 0x12
 1184 00de 06       		.uleb128 0x6
 1185 00df 40       		.uleb128 0x40
 1186 00e0 18       		.uleb128 0x18
 1187 00e1 9742     		.uleb128 0x2117
 1188 00e3 19       		.uleb128 0x19
 1189 00e4 00       		.byte	0
 1190 00e5 00       		.byte	0
 1191 00e6 0E       		.uleb128 0xe
 1192 00e7 2E       		.uleb128 0x2e
 1193 00e8 00       		.byte	0
 1194 00e9 3F       		.uleb128 0x3f
 1195 00ea 19       		.uleb128 0x19
 1196 00eb 03       		.uleb128 0x3
 1197 00ec 0E       		.uleb128 0xe
 1198 00ed 3A       		.uleb128 0x3a
 1199 00ee 0B       		.uleb128 0xb
 1200 00ef 3B       		.uleb128 0x3b
 1201 00f0 05       		.uleb128 0x5
 1202 00f1 27       		.uleb128 0x27
 1203 00f2 19       		.uleb128 0x19
 1204 00f3 11       		.uleb128 0x11
 1205 00f4 01       		.uleb128 0x1
 1206 00f5 12       		.uleb128 0x12
 1207 00f6 06       		.uleb128 0x6
 1208 00f7 40       		.uleb128 0x40
 1209 00f8 18       		.uleb128 0x18
 1210 00f9 9642     		.uleb128 0x2116
 1211 00fb 19       		.uleb128 0x19
 1212 00fc 00       		.byte	0
 1213 00fd 00       		.byte	0
 1214 00fe 0F       		.uleb128 0xf
 1215 00ff 2E       		.uleb128 0x2e
 1216 0100 01       		.byte	0x1
 1217 0101 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 38


 1218 0102 19       		.uleb128 0x19
 1219 0103 03       		.uleb128 0x3
 1220 0104 0E       		.uleb128 0xe
 1221 0105 3A       		.uleb128 0x3a
 1222 0106 0B       		.uleb128 0xb
 1223 0107 3B       		.uleb128 0x3b
 1224 0108 05       		.uleb128 0x5
 1225 0109 27       		.uleb128 0x27
 1226 010a 19       		.uleb128 0x19
 1227 010b 49       		.uleb128 0x49
 1228 010c 13       		.uleb128 0x13
 1229 010d 11       		.uleb128 0x11
 1230 010e 01       		.uleb128 0x1
 1231 010f 12       		.uleb128 0x12
 1232 0110 06       		.uleb128 0x6
 1233 0111 40       		.uleb128 0x40
 1234 0112 18       		.uleb128 0x18
 1235 0113 9742     		.uleb128 0x2117
 1236 0115 19       		.uleb128 0x19
 1237 0116 01       		.uleb128 0x1
 1238 0117 13       		.uleb128 0x13
 1239 0118 00       		.byte	0
 1240 0119 00       		.byte	0
 1241 011a 10       		.uleb128 0x10
 1242 011b 34       		.uleb128 0x34
 1243 011c 00       		.byte	0
 1244 011d 03       		.uleb128 0x3
 1245 011e 0E       		.uleb128 0xe
 1246 011f 3A       		.uleb128 0x3a
 1247 0120 0B       		.uleb128 0xb
 1248 0121 3B       		.uleb128 0x3b
 1249 0122 05       		.uleb128 0x5
 1250 0123 49       		.uleb128 0x49
 1251 0124 13       		.uleb128 0x13
 1252 0125 02       		.uleb128 0x2
 1253 0126 18       		.uleb128 0x18
 1254 0127 00       		.byte	0
 1255 0128 00       		.byte	0
 1256 0129 11       		.uleb128 0x11
 1257 012a 34       		.uleb128 0x34
 1258 012b 00       		.byte	0
 1259 012c 03       		.uleb128 0x3
 1260 012d 0E       		.uleb128 0xe
 1261 012e 3A       		.uleb128 0x3a
 1262 012f 0B       		.uleb128 0xb
 1263 0130 3B       		.uleb128 0x3b
 1264 0131 0B       		.uleb128 0xb
 1265 0132 49       		.uleb128 0x49
 1266 0133 13       		.uleb128 0x13
 1267 0134 3F       		.uleb128 0x3f
 1268 0135 19       		.uleb128 0x19
 1269 0136 02       		.uleb128 0x2
 1270 0137 18       		.uleb128 0x18
 1271 0138 00       		.byte	0
 1272 0139 00       		.byte	0
 1273 013a 00       		.byte	0
 1274              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 39


 1275 0000 94000000 		.4byte	0x94
 1276 0004 0200     		.2byte	0x2
 1277 0006 00000000 		.4byte	.Ldebug_info0
 1278 000a 04       		.byte	0x4
 1279 000b 00       		.byte	0
 1280 000c 0000     		.2byte	0
 1281 000e 0000     		.2byte	0
 1282 0010 00000000 		.4byte	.LFB0
 1283 0014 24000000 		.4byte	.LFE0-.LFB0
 1284 0018 00000000 		.4byte	.LFB1
 1285 001c 84000000 		.4byte	.LFE1-.LFB1
 1286 0020 00000000 		.4byte	.LFB2
 1287 0024 20000000 		.4byte	.LFE2-.LFB2
 1288 0028 00000000 		.4byte	.LFB3
 1289 002c 1C000000 		.4byte	.LFE3-.LFB3
 1290 0030 00000000 		.4byte	.LFB4
 1291 0034 20000000 		.4byte	.LFE4-.LFB4
 1292 0038 00000000 		.4byte	.LFB5
 1293 003c 1C000000 		.4byte	.LFE5-.LFB5
 1294 0040 00000000 		.4byte	.LFB6
 1295 0044 1C000000 		.4byte	.LFE6-.LFB6
 1296 0048 00000000 		.4byte	.LFB7
 1297 004c 20000000 		.4byte	.LFE7-.LFB7
 1298 0050 00000000 		.4byte	.LFB8
 1299 0054 20000000 		.4byte	.LFE8-.LFB8
 1300 0058 00000000 		.4byte	.LFB9
 1301 005c 20000000 		.4byte	.LFE9-.LFB9
 1302 0060 00000000 		.4byte	.LFB10
 1303 0064 14000000 		.4byte	.LFE10-.LFB10
 1304 0068 00000000 		.4byte	.LFB11
 1305 006c 20000000 		.4byte	.LFE11-.LFB11
 1306 0070 00000000 		.4byte	.LFB12
 1307 0074 20000000 		.4byte	.LFE12-.LFB12
 1308 0078 00000000 		.4byte	.LFB13
 1309 007c 14000000 		.4byte	.LFE13-.LFB13
 1310 0080 00000000 		.4byte	.LFB14
 1311 0084 14000000 		.4byte	.LFE14-.LFB14
 1312 0088 00000000 		.4byte	.LFB15
 1313 008c 14000000 		.4byte	.LFE15-.LFB15
 1314 0090 00000000 		.4byte	0
 1315 0094 00000000 		.4byte	0
 1316              		.section	.debug_ranges,"",%progbits
 1317              	.Ldebug_ranges0:
 1318 0000 00000000 		.4byte	.LFB0
 1319 0004 24000000 		.4byte	.LFE0
 1320 0008 00000000 		.4byte	.LFB1
 1321 000c 84000000 		.4byte	.LFE1
 1322 0010 00000000 		.4byte	.LFB2
 1323 0014 20000000 		.4byte	.LFE2
 1324 0018 00000000 		.4byte	.LFB3
 1325 001c 1C000000 		.4byte	.LFE3
 1326 0020 00000000 		.4byte	.LFB4
 1327 0024 20000000 		.4byte	.LFE4
 1328 0028 00000000 		.4byte	.LFB5
 1329 002c 1C000000 		.4byte	.LFE5
 1330 0030 00000000 		.4byte	.LFB6
 1331 0034 1C000000 		.4byte	.LFE6
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 40


 1332 0038 00000000 		.4byte	.LFB7
 1333 003c 20000000 		.4byte	.LFE7
 1334 0040 00000000 		.4byte	.LFB8
 1335 0044 20000000 		.4byte	.LFE8
 1336 0048 00000000 		.4byte	.LFB9
 1337 004c 20000000 		.4byte	.LFE9
 1338 0050 00000000 		.4byte	.LFB10
 1339 0054 14000000 		.4byte	.LFE10
 1340 0058 00000000 		.4byte	.LFB11
 1341 005c 20000000 		.4byte	.LFE11
 1342 0060 00000000 		.4byte	.LFB12
 1343 0064 20000000 		.4byte	.LFE12
 1344 0068 00000000 		.4byte	.LFB13
 1345 006c 14000000 		.4byte	.LFE13
 1346 0070 00000000 		.4byte	.LFB14
 1347 0074 14000000 		.4byte	.LFE14
 1348 0078 00000000 		.4byte	.LFB15
 1349 007c 14000000 		.4byte	.LFE15
 1350 0080 00000000 		.4byte	0
 1351 0084 00000000 		.4byte	0
 1352              		.section	.debug_line,"",%progbits
 1353              	.Ldebug_line0:
 1354 0000 88010000 		.section	.debug_str,"MS",%progbits,1
 1354      02004400 
 1354      00000201 
 1354      FB0E0D00 
 1354      01010101 
 1355              	.LASF18:
 1356 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1356      315F456E 
 1356      61626C65 
 1356      00
 1357              	.LASF21:
 1358 000d 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1358      315F5772 
 1358      69746543 
 1358      6F756E74 
 1358      657200
 1359              	.LASF25:
 1360 0020 70657269 		.ascii	"period\000"
 1360      6F6400
 1361              	.LASF22:
 1362 0027 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1362      315F436C 
 1362      65617246 
 1362      49464F00 
 1363              	.LASF3:
 1364 0037 73686F72 		.ascii	"short unsigned int\000"
 1364      7420756E 
 1364      7369676E 
 1364      65642069 
 1364      6E7400
 1365              	.LASF31:
 1366 004a 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1366      315F5265 
 1366      61645374 
 1366      61747573 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 41


 1366      52656769 
 1367              	.LASF9:
 1368 0063 666C6F61 		.ascii	"float\000"
 1368      7400
 1369              	.LASF38:
 1370 0069 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1370      4320342E 
 1370      382E3420 
 1370      32303134 
 1370      30353236 
 1371 009c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1371      20726576 
 1371      6973696F 
 1371      6E203231 
 1371      31333538 
 1372 00cf 30202D66 		.ascii	"0 -ffunction-sections\000"
 1372      66756E63 
 1372      74696F6E 
 1372      2D736563 
 1372      74696F6E 
 1373              	.LASF1:
 1374 00e5 756E7369 		.ascii	"unsigned char\000"
 1374      676E6564 
 1374      20636861 
 1374      7200
 1375              	.LASF13:
 1376 00f3 72656738 		.ascii	"reg8\000"
 1376      00
 1377              	.LASF37:
 1378 00f8 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1378      315F5265 
 1378      61645065 
 1378      72696F64 
 1378      00
 1379              	.LASF5:
 1380 0109 6C6F6E67 		.ascii	"long unsigned int\000"
 1380      20756E73 
 1380      69676E65 
 1380      6420696E 
 1380      7400
 1381              	.LASF12:
 1382 011b 75696E74 		.ascii	"uint8\000"
 1382      3800
 1383              	.LASF34:
 1384 0121 636F6E74 		.ascii	"control\000"
 1384      726F6C00 
 1385              	.LASF28:
 1386 0129 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1386      315F5365 
 1386      74496E74 
 1386      65727275 
 1386      70744D6F 
 1387              	.LASF36:
 1388 0140 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1388      315F5265 
 1388      6164436F 
 1388      6D706172 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 42


 1388      6500
 1389              	.LASF10:
 1390 0152 646F7562 		.ascii	"double\000"
 1390      6C6500
 1391              	.LASF16:
 1392 0159 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1392      315F696E 
 1392      74657272 
 1392      75707453 
 1392      74617465 
 1393              	.LASF42:
 1394 016e 50574D5F 		.ascii	"PWM_1_initVar\000"
 1394      315F696E 
 1394      69745661 
 1394      7200
 1395              	.LASF2:
 1396 017c 73686F72 		.ascii	"short int\000"
 1396      7420696E 
 1396      7400
 1397              	.LASF35:
 1398 0186 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1398      315F5265 
 1398      61644361 
 1398      70747572 
 1398      6500
 1399              	.LASF33:
 1400 0198 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1400      315F5772 
 1400      69746543 
 1400      6F6E7472 
 1400      6F6C5265 
 1401              	.LASF20:
 1402 01b3 50574D5F 		.ascii	"PWM_1_Init\000"
 1402      315F496E 
 1402      697400
 1403              	.LASF8:
 1404 01be 756E7369 		.ascii	"unsigned int\000"
 1404      676E6564 
 1404      20696E74 
 1404      00
 1405              	.LASF7:
 1406 01cb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1406      206C6F6E 
 1406      6720756E 
 1406      7369676E 
 1406      65642069 
 1407              	.LASF24:
 1408 01e2 636F756E 		.ascii	"counter\000"
 1408      74657200 
 1409              	.LASF32:
 1410 01ea 72657375 		.ascii	"result\000"
 1410      6C7400
 1411              	.LASF15:
 1412 01f1 6374726C 		.ascii	"ctrl\000"
 1412      00
 1413              	.LASF14:
 1414 01f6 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 43


 1414      74797065 
 1414      00
 1415              	.LASF26:
 1416 01ff 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1416      315F5772 
 1416      69746543 
 1416      6F6D7061 
 1416      726500
 1417              	.LASF6:
 1418 0212 6C6F6E67 		.ascii	"long long int\000"
 1418      206C6F6E 
 1418      6720696E 
 1418      7400
 1419              	.LASF41:
 1420 0220 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1420      315F5265 
 1420      6164436F 
 1420      6E74726F 
 1420      6C526567 
 1421              	.LASF29:
 1422 023a 696E7465 		.ascii	"interruptMode\000"
 1422      72727570 
 1422      744D6F64 
 1422      6500
 1423              	.LASF23:
 1424 0248 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1424      315F5772 
 1424      69746550 
 1424      6572696F 
 1424      6400
 1425              	.LASF39:
 1426 025a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1426      6E657261 
 1426      7465645F 
 1426      536F7572 
 1426      63655C50 
 1427              	.LASF30:
 1428 027b 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1428      315F5265 
 1428      6164436F 
 1428      756E7465 
 1428      7200
 1429              	.LASF19:
 1430 028d 50574D5F 		.ascii	"PWM_1_Stop\000"
 1430      315F5374 
 1430      6F7000
 1431              	.LASF4:
 1432 0298 6C6F6E67 		.ascii	"long int\000"
 1432      20696E74 
 1432      00
 1433              	.LASF11:
 1434 02a1 63686172 		.ascii	"char\000"
 1434      00
 1435              	.LASF0:
 1436 02a6 7369676E 		.ascii	"signed char\000"
 1436      65642063 
 1436      68617200 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc27PA5t.s 			page 44


 1437              	.LASF27:
 1438 02b2 636F6D70 		.ascii	"compare\000"
 1438      61726500 
 1439              	.LASF40:
 1440 02ba 433A5C55 		.ascii	"C:\\Users\\Jeppe\\Google Drev\\E4PRJ4 gDrive\\Vugge"
 1440      73657273 
 1440      5C4A6570 
 1440      70655C47 
 1440      6F6F676C 
 1441 02e8 73797374 		.ascii	"system arbejdsdokumenter\\Ny mappe\\VuggeSinus\\Vug"
 1441      656D2061 
 1441      7262656A 
 1441      6473646F 
 1441      6B756D65 
 1442 0318 67655369 		.ascii	"geSinus.cydsn\000"
 1442      6E75732E 
 1442      63796473 
 1442      6E00
 1443              	.LASF17:
 1444 0326 50574D5F 		.ascii	"PWM_1_Start\000"
 1444      315F5374 
 1444      61727400 
 1445              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
