ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"MotorPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	MotorPWM_initVar
  18              		.bss
  19              		.type	MotorPWM_initVar, %object
  20              		.size	MotorPWM_initVar, 1
  21              	MotorPWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.MotorPWM_Start,"ax",%progbits
  24              		.align	2
  25              		.global	MotorPWM_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	MotorPWM_Start, %function
  29              	MotorPWM_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\MotorPWM.c"
   1:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/MotorPWM.c **** * File Name: MotorPWM.c
   3:.\Generated_Source\PSoC4/MotorPWM.c **** * Version 3.20
   4:.\Generated_Source\PSoC4/MotorPWM.c **** *
   5:.\Generated_Source\PSoC4/MotorPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/MotorPWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/MotorPWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/MotorPWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/MotorPWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/MotorPWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/MotorPWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/MotorPWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/MotorPWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/MotorPWM.c **** *
  15:.\Generated_Source\PSoC4/MotorPWM.c **** * Note:
  16:.\Generated_Source\PSoC4/MotorPWM.c **** *
  17:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/MotorPWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/MotorPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/MotorPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/MotorPWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/MotorPWM.c **** 
  24:.\Generated_Source\PSoC4/MotorPWM.c **** #include "MotorPWM.h"
  25:.\Generated_Source\PSoC4/MotorPWM.c **** 
  26:.\Generated_Source\PSoC4/MotorPWM.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 2


  27:.\Generated_Source\PSoC4/MotorPWM.c **** #ifdef MotorPWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/MotorPWM.c ****     #error PWM_v3_20 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/MotorPWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* MotorPWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/MotorPWM.c **** 
  32:.\Generated_Source\PSoC4/MotorPWM.c **** uint8 MotorPWM_initVar = 0u;
  33:.\Generated_Source\PSoC4/MotorPWM.c **** 
  34:.\Generated_Source\PSoC4/MotorPWM.c **** 
  35:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Start
  37:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/MotorPWM.c **** *
  39:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/MotorPWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/MotorPWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/MotorPWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/MotorPWM.c **** *
  44:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  46:.\Generated_Source\PSoC4/MotorPWM.c **** *
  47:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
  48:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  49:.\Generated_Source\PSoC4/MotorPWM.c **** *
  50:.\Generated_Source\PSoC4/MotorPWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/MotorPWM.c **** *  MotorPWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/MotorPWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/MotorPWM.c **** *
  54:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Start(void) 
  56:.\Generated_Source\PSoC4/MotorPWM.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/MotorPWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/MotorPWM.c ****     if(MotorPWM_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/MotorPWM.c ****     {
  60:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	MotorPWM_Init
  61:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/MotorPWM.c ****     }
  63:.\Generated_Source\PSoC4/MotorPWM.c ****     MotorPWM_Enable();
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	MotorPWM_Enable
  64:.\Generated_Source\PSoC4/MotorPWM.c **** 
  65:.\Generated_Source\PSoC4/MotorPWM.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	MotorPWM_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	MotorPWM_Start, .-MotorPWM_Start
  65              		.section	.text.MotorPWM_Init,"ax",%progbits
  66              		.align	2
  67              		.global	MotorPWM_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	MotorPWM_Init, %function
  71              	MotorPWM_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/MotorPWM.c **** 
  67:.\Generated_Source\PSoC4/MotorPWM.c **** 
  68:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Init
  70:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/MotorPWM.c **** *
  72:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/MotorPWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/MotorPWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/MotorPWM.c **** *  MotorPWM_Start().
  76:.\Generated_Source\PSoC4/MotorPWM.c **** *
  77:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  79:.\Generated_Source\PSoC4/MotorPWM.c **** *
  80:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
  81:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  82:.\Generated_Source\PSoC4/MotorPWM.c **** *
  83:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Init(void) 
  85:.\Generated_Source\PSoC4/MotorPWM.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction || MotorPWM_UseControl)
  87:.\Generated_Source\PSoC4/MotorPWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction || MotorPWM_UseControl) */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 4


  89:.\Generated_Source\PSoC4/MotorPWM.c **** 
  90:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(!MotorPWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UseStatus)
  92:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 MotorPWM_interruptState;
  94:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseStatus) */
  95:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (!MotorPWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/MotorPWM.c **** 
  97:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/MotorPWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL |= MotorPWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL |= MotorPWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/MotorPWM.c **** 
 104:.\Generated_Source\PSoC4/MotorPWM.c ****         ctrl = MotorPWM_CONTROL3 & ((uint8 )(~MotorPWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL3 = ctrl | MotorPWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/MotorPWM.c **** 
 107:.\Generated_Source\PSoC4/MotorPWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 &= ((uint8)(~MotorPWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 |= MotorPWM_SYNC;
 110:.\Generated_Source\PSoC4/MotorPWM.c **** 
 111:.\Generated_Source\PSoC4/MotorPWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 &= ((uint8)(~MotorPWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 |= MotorPWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/MotorPWM.c **** 
 115:.\Generated_Source\PSoC4/MotorPWM.c ****     #elif (MotorPWM_UseControl)
 116:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/MotorPWM.c ****         ctrl = MotorPWM_CONTROL & ((uint8)(~MotorPWM_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 224B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL = ctrl | MotorPWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1E4B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0921     		mov	r1, #9
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/MotorPWM.c ****                                    MotorPWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/MotorPWM.c **** 
 123:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (!MotorPWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP0 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/MotorPWM.c ****         #else /* (MotorPWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP0 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 5


 100              		.loc 1 129 0
 101 0022 1C4B     		ldr	r3, .L6+4
 102 0024 1B4A     		ldr	r2, .L6+4
 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP1 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 194B     		ldr	r3, .L6+8
 111 0034 184A     		ldr	r2, .L6+8
 112 0036 1278     		ldrb	r2, [r2]
 113 0038 D2B2     		uxtb	r2, r2
 114 003a 0121     		mov	r1, #1
 115 003c 0A43     		orr	r2, r1
 116 003e D2B2     		uxtb	r2, r2
 117 0040 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/MotorPWM.c **** 
 133:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_WriteCounter(MotorPWM_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 FF20     		mov	r0, #255
 120 0044 FFF7FEFF 		bl	MotorPWM_WriteCounter
 134:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (!MotorPWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/MotorPWM.c **** 
 136:.\Generated_Source\PSoC4/MotorPWM.c ****     MotorPWM_WritePeriod(MotorPWM_INIT_PERIOD_VALUE);
 121              		.loc 1 136 0
 122 0048 FF20     		mov	r0, #255
 123 004a FFF7FEFF 		bl	MotorPWM_WritePeriod
 137:.\Generated_Source\PSoC4/MotorPWM.c **** 
 138:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare(MotorPWM_INIT_COMPARE_VALUE1);
 124              		.loc 1 139 0
 125 004e 7F20     		mov	r0, #127
 126 0050 FFF7FEFF 		bl	MotorPWM_WriteCompare
 140:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 141:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare1(MotorPWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare2(MotorPWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/MotorPWM.c **** 
 145:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteKillTime(MotorPWM_MinimumKillTime);
 147:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/MotorPWM.c **** 
 149:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteDeadTime(MotorPWM_INIT_DEAD_TIME);
 127              		.loc 1 150 0
 128 0054 0120     		mov	r0, #1
 129 0056 FFF7FEFF 		bl	MotorPWM_WriteDeadTime
 151:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/MotorPWM.c **** 
 153:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_SetInterruptMode(MotorPWM_INIT_INTERRUPTS_MODE);
 130              		.loc 1 154 0
 131 005a 0020     		mov	r0, #0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 6


 132 005c FFF7FEFF 		bl	MotorPWM_SetInterruptMode
 155:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/MotorPWM.c **** 
 157:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE |= MotorPWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL2 |= MotorPWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 163:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UseStatus)
 164:.\Generated_Source\PSoC4/MotorPWM.c **** 
 165:.\Generated_Source\PSoC4/MotorPWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_interruptState = CyEnterCriticalSection();
 133              		.loc 1 167 0
 134 0060 BC1D     		add	r4, r7, #6
 135 0062 FFF7FEFF 		bl	CyEnterCriticalSection
 136 0066 031C     		mov	r3, r0
 137 0068 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_STATUS_AUX_CTRL |= MotorPWM_STATUS_ACTL_INT_EN_MASK;
 138              		.loc 1 169 0
 139 006a 0A4B     		ldr	r3, .L6+4
 140 006c 094A     		ldr	r2, .L6+4
 141 006e 1278     		ldrb	r2, [r2]
 142 0070 D2B2     		uxtb	r2, r2
 143 0072 1021     		mov	r1, #16
 144 0074 0A43     		orr	r2, r1
 145 0076 D2B2     		uxtb	r2, r2
 146 0078 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/MotorPWM.c **** 
 171:.\Generated_Source\PSoC4/MotorPWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/MotorPWM.c ****             CyExitCriticalSection(MotorPWM_interruptState);
 147              		.loc 1 172 0
 148 007a BB1D     		add	r3, r7, #6
 149 007c 1B78     		ldrb	r3, [r3]
 150 007e 181C     		mov	r0, r3
 151 0080 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/MotorPWM.c **** 
 174:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Clear the FIFO to enable the MotorPWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/MotorPWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_ClearFIFO();
 152              		.loc 1 176 0
 153 0084 FFF7FEFF 		bl	MotorPWM_ClearFIFO
 177:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseStatus) */
 178:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/MotorPWM.c **** }
 154              		.loc 1 179 0
 155 0088 BD46     		mov	sp, r7
 156 008a 03B0     		add	sp, sp, #12
 157              		@ sp needed
 158 008c 90BD     		pop	{r4, r7, pc}
 159              	.L7:
 160 008e C046     		.align	2
 161              	.L6:
 162 0090 73000F40 		.word	1074724979
 163 0094 92000F40 		.word	1074725010
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 7


 164 0098 93000F40 		.word	1074725011
 165              		.cfi_endproc
 166              	.LFE1:
 167              		.size	MotorPWM_Init, .-MotorPWM_Init
 168              		.section	.text.MotorPWM_Enable,"ax",%progbits
 169              		.align	2
 170              		.global	MotorPWM_Enable
 171              		.code	16
 172              		.thumb_func
 173              		.type	MotorPWM_Enable, %function
 174              	MotorPWM_Enable:
 175              	.LFB2:
 180:.\Generated_Source\PSoC4/MotorPWM.c **** 
 181:.\Generated_Source\PSoC4/MotorPWM.c **** 
 182:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Enable
 184:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/MotorPWM.c **** *
 186:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/MotorPWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/MotorPWM.c **** *
 189:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 191:.\Generated_Source\PSoC4/MotorPWM.c **** *
 192:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 193:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 194:.\Generated_Source\PSoC4/MotorPWM.c **** *
 195:.\Generated_Source\PSoC4/MotorPWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/MotorPWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/MotorPWM.c **** *
 198:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Enable(void) 
 200:.\Generated_Source\PSoC4/MotorPWM.c **** {
 176              		.loc 1 200 0
 177              		.cfi_startproc
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE |= MotorPWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_STBY_ENABLE |= MotorPWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/MotorPWM.c **** 
 207:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseControl || MotorPWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL |= MotorPWM_CTRL_ENABLE;
 184              		.loc 1 209 0
 185 0004 054B     		ldr	r3, .L9
 186 0006 054A     		ldr	r2, .L9
 187 0008 1278     		ldrb	r2, [r2]
 188 000a D2B2     		uxtb	r2, r2
 189 000c 8021     		mov	r1, #128
 190 000e 4942     		neg	r1, r1
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 8


 191 0010 0A43     		orr	r2, r1
 192 0012 D2B2     		uxtb	r2, r2
 193 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/MotorPWM.c **** }
 194              		.loc 1 211 0
 195 0016 BD46     		mov	sp, r7
 196              		@ sp needed
 197 0018 80BD     		pop	{r7, pc}
 198              	.L10:
 199 001a C046     		.align	2
 200              	.L9:
 201 001c 73000F40 		.word	1074724979
 202              		.cfi_endproc
 203              	.LFE2:
 204              		.size	MotorPWM_Enable, .-MotorPWM_Enable
 205              		.section	.text.MotorPWM_Stop,"ax",%progbits
 206              		.align	2
 207              		.global	MotorPWM_Stop
 208              		.code	16
 209              		.thumb_func
 210              		.type	MotorPWM_Stop, %function
 211              	MotorPWM_Stop:
 212              	.LFB3:
 212:.\Generated_Source\PSoC4/MotorPWM.c **** 
 213:.\Generated_Source\PSoC4/MotorPWM.c **** 
 214:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Stop
 216:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/MotorPWM.c **** *
 218:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/MotorPWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/MotorPWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/MotorPWM.c **** *
 222:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 224:.\Generated_Source\PSoC4/MotorPWM.c **** *
 225:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 226:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 227:.\Generated_Source\PSoC4/MotorPWM.c **** *
 228:.\Generated_Source\PSoC4/MotorPWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/MotorPWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/MotorPWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/MotorPWM.c **** *
 232:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Stop(void) 
 234:.\Generated_Source\PSoC4/MotorPWM.c **** {
 213              		.loc 1 234 0
 214              		.cfi_startproc
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseControl || MotorPWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_ENABLE));
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 9


 221              		.loc 1 236 0
 222 0004 044B     		ldr	r3, .L12
 223 0006 044A     		ldr	r2, .L12
 224 0008 1278     		ldrb	r2, [r2]
 225 000a D1B2     		uxtb	r1, r2
 226 000c 7F22     		mov	r2, #127
 227 000e 0A40     		and	r2, r1
 228 0010 D2B2     		uxtb	r2, r2
 229 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/MotorPWM.c **** 
 239:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE &= ((uint8)(~MotorPWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_STBY_ENABLE &= ((uint8)(~MotorPWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/MotorPWM.c **** }
 230              		.loc 1 244 0
 231 0014 BD46     		mov	sp, r7
 232              		@ sp needed
 233 0016 80BD     		pop	{r7, pc}
 234              	.L13:
 235              		.align	2
 236              	.L12:
 237 0018 73000F40 		.word	1074724979
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	MotorPWM_Stop, .-MotorPWM_Stop
 241              		.section	.text.MotorPWM_WriteCounter,"ax",%progbits
 242              		.align	2
 243              		.global	MotorPWM_WriteCounter
 244              		.code	16
 245              		.thumb_func
 246              		.type	MotorPWM_WriteCounter, %function
 247              	MotorPWM_WriteCounter:
 248              	.LFB4:
 245:.\Generated_Source\PSoC4/MotorPWM.c **** 
 246:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/MotorPWM.c **** 
 249:.\Generated_Source\PSoC4/MotorPWM.c **** 
 250:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_SetCompareMode
 252:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 254:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/MotorPWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 258:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/MotorPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/MotorPWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 262:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
 263:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 264:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 265:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 10


 266:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 268:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/MotorPWM.c **** 
 270:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 273:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/MotorPWM.c **** 
 276:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL3 &= ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/MotorPWM.c **** 
 279:.\Generated_Source\PSoC4/MotorPWM.c ****             #elif (MotorPWM_UseControl)
 280:.\Generated_Source\PSoC4/MotorPWM.c **** 
 281:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE
 283:.\Generated_Source\PSoC4/MotorPWM.c ****                                                 MotorPWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 285:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode1masked = comparemode & MotorPWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/MotorPWM.c **** 
 288:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE
 290:.\Generated_Source\PSoC4/MotorPWM.c ****                                                MotorPWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 292:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode2masked = comparemode & MotorPWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/MotorPWM.c **** 
 295:.\Generated_Source\PSoC4/MotorPWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL &= ((uint8)(~(MotorPWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/MotorPWM.c ****                                             MotorPWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/MotorPWM.c **** 
 300:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 301:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 304:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/MotorPWM.c **** 
 306:.\Generated_Source\PSoC4/MotorPWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/MotorPWM.c **** 
 308:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/MotorPWM.c **** 
 310:.\Generated_Source\PSoC4/MotorPWM.c **** 
 311:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 315:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 318:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/MotorPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/MotorPWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 322:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 11


 323:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 324:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 325:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 328:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC4/MotorPWM.c ****                                            MotorPWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 332:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 comparemodemasked = comparemode & MotorPWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/MotorPWM.c **** 
 335:.\Generated_Source\PSoC4/MotorPWM.c ****             #if (MotorPWM_UseControl)
 336:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UseControl) */
 339:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 340:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/MotorPWM.c **** 
 342:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/MotorPWM.c **** 
 344:.\Generated_Source\PSoC4/MotorPWM.c **** 
 345:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 349:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 352:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/MotorPWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/MotorPWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 356:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 358:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 359:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 362:.\Generated_Source\PSoC4/MotorPWM.c **** 
 363:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(0 != MotorPWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC4/MotorPWM.c ****                                                  MotorPWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 367:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 comparemodemasked = comparemode & MotorPWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (0 != MotorPWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/MotorPWM.c **** 
 370:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_UseControl)
 371:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseControl) */
 374:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 375:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /*MotorPWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/MotorPWM.c **** 
 377:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/MotorPWM.c **** 
 379:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 12


 380:.\Generated_Source\PSoC4/MotorPWM.c **** #if (!MotorPWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/MotorPWM.c **** 
 382:.\Generated_Source\PSoC4/MotorPWM.c **** 
 383:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCounter
 385:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 387:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/MotorPWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/MotorPWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/MotorPWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 393:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/MotorPWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 396:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 398:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 399:.\Generated_Source\PSoC4/MotorPWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 402:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/MotorPWM.c ****                                        
 405:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 249              		.loc 1 405 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 021C     		mov	r2, r0
 260 0008 BB1D     		add	r3, r7, #6
 261 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_COUNTER_LSB_PTR, counter);
 262              		.loc 1 406 0
 263 000c 034B     		ldr	r3, .L15
 264 000e BA1D     		add	r2, r7, #6
 265 0010 1288     		ldrh	r2, [r2]
 266 0012 1A80     		strh	r2, [r3]
 407:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 267              		.loc 1 407 0
 268 0014 BD46     		mov	sp, r7
 269 0016 02B0     		add	sp, sp, #8
 270              		@ sp needed
 271 0018 80BD     		pop	{r7, pc}
 272              	.L16:
 273 001a C046     		.align	2
 274              	.L15:
 275 001c 04100F40 		.word	1074728964
 276              		.cfi_endproc
 277              	.LFE4:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 13


 278              		.size	MotorPWM_WriteCounter, .-MotorPWM_WriteCounter
 279              		.section	.text.MotorPWM_ReadCounter,"ax",%progbits
 280              		.align	2
 281              		.global	MotorPWM_ReadCounter
 282              		.code	16
 283              		.thumb_func
 284              		.type	MotorPWM_ReadCounter, %function
 285              	MotorPWM_ReadCounter:
 286              	.LFB5:
 408:.\Generated_Source\PSoC4/MotorPWM.c **** 
 409:.\Generated_Source\PSoC4/MotorPWM.c **** 
 410:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCounter
 412:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 414:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/MotorPWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 418:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 420:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 421:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 424:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 287              		.loc 1 426 0
 288              		.cfi_startproc
 289 0000 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/MotorPWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/MotorPWM.c ****           (void)CY_GET_REG8(MotorPWM_COUNTERCAP_LSB_PTR_8BIT);
 295              		.loc 1 430 0
 296 0004 034B     		ldr	r3, .L19
 297 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/MotorPWM.c **** 
 432:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_CAPTURE_LSB_PTR));
 298              		.loc 1 433 0
 299 0008 034B     		ldr	r3, .L19+4
 300 000a 1B88     		ldrh	r3, [r3]
 301 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 302              		.loc 1 434 0
 303 000e 181C     		mov	r0, r3
 304 0010 BD46     		mov	sp, r7
 305              		@ sp needed
 306 0012 80BD     		pop	{r7, pc}
 307              	.L20:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 14


 308              		.align	2
 309              	.L19:
 310 0014 12000F40 		.word	1074724882
 311 0018 A4100F40 		.word	1074729124
 312              		.cfi_endproc
 313              	.LFE5:
 314              		.size	MotorPWM_ReadCounter, .-MotorPWM_ReadCounter
 315              		.section	.text.MotorPWM_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	MotorPWM_ClearFIFO
 318              		.code	16
 319              		.thumb_func
 320              		.type	MotorPWM_ClearFIFO, %function
 321              	MotorPWM_ClearFIFO:
 322              	.LFB6:
 435:.\Generated_Source\PSoC4/MotorPWM.c **** 
 436:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseStatus)
 437:.\Generated_Source\PSoC4/MotorPWM.c **** 
 438:.\Generated_Source\PSoC4/MotorPWM.c **** 
 439:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_ClearFIFO
 441:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 443:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 446:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 448:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 449:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 451:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 452:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/MotorPWM.c ****             while(0u != (MotorPWM_ReadStatusRegister() & MotorPWM_STATUS_FIFONEMPTY))
 331              		.loc 1 455 0
 332 0004 01E0     		b	.L22
 333              	.L23:
 456:.\Generated_Source\PSoC4/MotorPWM.c ****             {
 457:.\Generated_Source\PSoC4/MotorPWM.c ****                 (void)MotorPWM_ReadCapture();
 334              		.loc 1 457 0
 335 0006 FFF7FEFF 		bl	MotorPWM_ReadCapture
 336              	.L22:
 455:.\Generated_Source\PSoC4/MotorPWM.c ****             while(0u != (MotorPWM_ReadStatusRegister() & MotorPWM_STATUS_FIFONEMPTY))
 337              		.loc 1 455 0 discriminator 1
 338 000a FFF7FEFF 		bl	MotorPWM_ReadStatusRegister
 339 000e 031C     		mov	r3, r0
 340 0010 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 15


 341 0012 1023     		mov	r3, #16
 342 0014 1340     		and	r3, r2
 343 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/MotorPWM.c ****             }
 459:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 344              		.loc 1 459 0
 345 0018 BD46     		mov	sp, r7
 346              		@ sp needed
 347 001a 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE6:
 350              		.size	MotorPWM_ClearFIFO, .-MotorPWM_ClearFIFO
 351              		.section	.text.MotorPWM_WritePeriod,"ax",%progbits
 352              		.align	2
 353              		.global	MotorPWM_WritePeriod
 354              		.code	16
 355              		.thumb_func
 356              		.type	MotorPWM_WritePeriod, %function
 357              	MotorPWM_WritePeriod:
 358              	.LFB7:
 460:.\Generated_Source\PSoC4/MotorPWM.c **** 
 461:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_UseStatus */
 462:.\Generated_Source\PSoC4/MotorPWM.c **** 
 463:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* !MotorPWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/MotorPWM.c **** 
 465:.\Generated_Source\PSoC4/MotorPWM.c **** 
 466:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_WritePeriod
 468:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/MotorPWM.c **** *
 470:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/MotorPWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/MotorPWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/MotorPWM.c **** *
 474:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/MotorPWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/MotorPWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/MotorPWM.c **** *
 478:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 479:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 480:.\Generated_Source\PSoC4/MotorPWM.c **** *
 481:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/MotorPWM.c **** {
 359              		.loc 1 483 0
 360              		.cfi_startproc
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 82B0     		sub	sp, sp, #8
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 021C     		mov	r2, r0
 370 0008 BB1D     		add	r3, r7, #6
 371 000a 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 16


 484:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(MotorPWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 487:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_PERIOD_LSB_PTR, period);
 372              		.loc 1 487 0
 373 000c 034B     		ldr	r3, .L25
 374 000e BA1D     		add	r2, r7, #6
 375 0010 1288     		ldrh	r2, [r2]
 376 0012 1A80     		strh	r2, [r3]
 488:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/MotorPWM.c **** }
 377              		.loc 1 489 0
 378 0014 BD46     		mov	sp, r7
 379 0016 02B0     		add	sp, sp, #8
 380              		@ sp needed
 381 0018 80BD     		pop	{r7, pc}
 382              	.L26:
 383 001a C046     		.align	2
 384              	.L25:
 385 001c 84100F40 		.word	1074729092
 386              		.cfi_endproc
 387              	.LFE7:
 388              		.size	MotorPWM_WritePeriod, .-MotorPWM_WritePeriod
 389              		.section	.text.MotorPWM_WriteCompare,"ax",%progbits
 390              		.align	2
 391              		.global	MotorPWM_WriteCompare
 392              		.code	16
 393              		.thumb_func
 394              		.type	MotorPWM_WriteCompare, %function
 395              	MotorPWM_WriteCompare:
 396              	.LFB8:
 490:.\Generated_Source\PSoC4/MotorPWM.c **** 
 491:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/MotorPWM.c **** 
 493:.\Generated_Source\PSoC4/MotorPWM.c **** 
 494:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare
 496:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 498:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/MotorPWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 505:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 508:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 510:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 511:.\Generated_Source\PSoC4/MotorPWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 515:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 17


 516:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/MotorPWM.c ****                                        
 518:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 397              		.loc 1 518 0
 398              		.cfi_startproc
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 407 0006 021C     		mov	r2, r0
 408 0008 BB1D     		add	r3, r7, #6
 409 000a 1A80     		strh	r2, [r3]
 519:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 522:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, compare);
 410              		.loc 1 522 0
 411 000c 034B     		ldr	r3, .L28
 412 000e BA1D     		add	r2, r7, #6
 413 0010 1288     		ldrh	r2, [r2]
 414 0012 1A80     		strh	r2, [r3]
 523:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/MotorPWM.c **** 
 525:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_PWMMode == MotorPWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/MotorPWM.c ****                 CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 529:.\Generated_Source\PSoC4/MotorPWM.c ****                 CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_PWMMode == MotorPWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 415              		.loc 1 532 0
 416 0014 BD46     		mov	sp, r7
 417 0016 02B0     		add	sp, sp, #8
 418              		@ sp needed
 419 0018 80BD     		pop	{r7, pc}
 420              	.L29:
 421 001a C046     		.align	2
 422              	.L28:
 423 001c 44100F40 		.word	1074729028
 424              		.cfi_endproc
 425              	.LFE8:
 426              		.size	MotorPWM_WriteCompare, .-MotorPWM_WriteCompare
 427              		.section	.text.MotorPWM_WriteDeadTime,"ax",%progbits
 428              		.align	2
 429              		.global	MotorPWM_WriteDeadTime
 430              		.code	16
 431              		.thumb_func
 432              		.type	MotorPWM_WriteDeadTime, %function
 433              	MotorPWM_WriteDeadTime:
 434              	.LFB9:
 533:.\Generated_Source\PSoC4/MotorPWM.c **** 
 534:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 18


 535:.\Generated_Source\PSoC4/MotorPWM.c **** #else
 536:.\Generated_Source\PSoC4/MotorPWM.c **** 
 537:.\Generated_Source\PSoC4/MotorPWM.c **** 
 538:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare1
 540:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 542:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/MotorPWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/MotorPWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/MotorPWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 548:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 551:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 553:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 554:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/MotorPWM.c ****                                         
 557:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 558:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 561:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 564:.\Generated_Source\PSoC4/MotorPWM.c **** 
 565:.\Generated_Source\PSoC4/MotorPWM.c **** 
 566:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare2
 568:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 570:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/MotorPWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/MotorPWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 577:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 580:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 582:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 583:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/MotorPWM.c ****                                         
 586:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 587:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 590:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 19


 592:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 593:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/MotorPWM.c **** 
 595:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/MotorPWM.c **** 
 597:.\Generated_Source\PSoC4/MotorPWM.c **** 
 598:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 602:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 605:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/MotorPWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 608:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 610:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 611:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 435              		.loc 1 613 0
 436              		.cfi_startproc
 437 0000 80B5     		push	{r7, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0002 82B0     		sub	sp, sp, #8
 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 445 0006 021C     		mov	r2, r0
 446 0008 FB1D     		add	r3, r7, #7
 447 000a 1A70     		strb	r2, [r3]
 614:.\Generated_Source\PSoC4/MotorPWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(!MotorPWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG8(MotorPWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 618:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_DEADBAND_COUNT &= ((uint8)(~MotorPWM_DEADBAND_COUNT_MASK));
 448              		.loc 1 620 0
 449 000c 0C4B     		ldr	r3, .L31
 450 000e 0C4A     		ldr	r2, .L31
 451 0010 1278     		ldrb	r2, [r2]
 452 0012 D2B2     		uxtb	r2, r2
 453 0014 0321     		mov	r1, #3
 454 0016 8A43     		bic	r2, r1
 455 0018 D2B2     		uxtb	r2, r2
 456 001a 1A70     		strb	r2, [r3]
 621:.\Generated_Source\PSoC4/MotorPWM.c **** 
 622:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << MotorPWM_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC4/MotorPWM.c ****                                                     MotorPWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 20


 627:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_DEADBAND_COUNT |= deadtime & MotorPWM_DEADBAND_COUNT_MASK;
 457              		.loc 1 627 0
 458 001c 084B     		ldr	r3, .L31
 459 001e 084A     		ldr	r2, .L31
 460 0020 1278     		ldrb	r2, [r2]
 461 0022 D2B2     		uxtb	r2, r2
 462 0024 D1B2     		uxtb	r1, r2
 463 0026 FA1D     		add	r2, r7, #7
 464 0028 1278     		ldrb	r2, [r2]
 465 002a 101C     		add	r0, r2, #0
 466 002c 0322     		mov	r2, #3
 467 002e 0240     		and	r2, r0
 468 0030 D2B2     		uxtb	r2, r2
 469 0032 0A43     		orr	r2, r1
 470 0034 D2B2     		uxtb	r2, r2
 471 0036 D2B2     		uxtb	r2, r2
 472 0038 1A70     		strb	r2, [r3]
 628:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/MotorPWM.c **** 
 630:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (!MotorPWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 473              		.loc 1 631 0
 474 003a BD46     		mov	sp, r7
 475 003c 02B0     		add	sp, sp, #8
 476              		@ sp needed
 477 003e 80BD     		pop	{r7, pc}
 478              	.L32:
 479              		.align	2
 480              	.L31:
 481 0040 71000F40 		.word	1074724977
 482              		.cfi_endproc
 483              	.LFE9:
 484              		.size	MotorPWM_WriteDeadTime, .-MotorPWM_WriteDeadTime
 485              		.section	.text.MotorPWM_ReadDeadTime,"ax",%progbits
 486              		.align	2
 487              		.global	MotorPWM_ReadDeadTime
 488              		.code	16
 489              		.thumb_func
 490              		.type	MotorPWM_ReadDeadTime, %function
 491              	MotorPWM_ReadDeadTime:
 492              	.LFB10:
 632:.\Generated_Source\PSoC4/MotorPWM.c **** 
 633:.\Generated_Source\PSoC4/MotorPWM.c **** 
 634:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 638:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 641:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 643:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 644:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 647:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 21


 648:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 493              		.loc 1 649 0
 494              		.cfi_startproc
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 650:.\Generated_Source\PSoC4/MotorPWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(!MotorPWM_DeadBand2_4)
 652:.\Generated_Source\PSoC4/MotorPWM.c ****             return (CY_GET_REG8(MotorPWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 654:.\Generated_Source\PSoC4/MotorPWM.c **** 
 655:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/MotorPWM.c ****                 return ((uint8)(((uint8)(MotorPWM_DEADBAND_COUNT & MotorPWM_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC4/MotorPWM.c ****                                                                            MotorPWM_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 660:.\Generated_Source\PSoC4/MotorPWM.c ****                 return (MotorPWM_DEADBAND_COUNT & MotorPWM_DEADBAND_COUNT_MASK);
 501              		.loc 1 660 0
 502 0004 044B     		ldr	r3, .L35
 503 0006 1B78     		ldrb	r3, [r3]
 504 0008 DAB2     		uxtb	r2, r3
 505 000a 0323     		mov	r3, #3
 506 000c 1340     		and	r3, r2
 507 000e DBB2     		uxtb	r3, r3
 661:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (!MotorPWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 508              		.loc 1 663 0
 509 0010 181C     		mov	r0, r3
 510 0012 BD46     		mov	sp, r7
 511              		@ sp needed
 512 0014 80BD     		pop	{r7, pc}
 513              	.L36:
 514 0016 C046     		.align	2
 515              	.L35:
 516 0018 71000F40 		.word	1074724977
 517              		.cfi_endproc
 518              	.LFE10:
 519              		.size	MotorPWM_ReadDeadTime, .-MotorPWM_ReadDeadTime
 520              		.section	.text.MotorPWM_SetInterruptMode,"ax",%progbits
 521              		.align	2
 522              		.global	MotorPWM_SetInterruptMode
 523              		.code	16
 524              		.thumb_func
 525              		.type	MotorPWM_SetInterruptMode, %function
 526              	MotorPWM_SetInterruptMode:
 527              	.LFB11:
 664:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/MotorPWM.c **** 
 666:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/MotorPWM.c **** 
 668:.\Generated_Source\PSoC4/MotorPWM.c **** 
 669:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 22


 670:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 673:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/MotorPWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 677:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 680:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 682:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 683:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 528              		.loc 1 685 0
 529              		.cfi_startproc
 530 0000 80B5     		push	{r7, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 82B0     		sub	sp, sp, #8
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 538 0006 021C     		mov	r2, r0
 539 0008 FB1D     		add	r3, r7, #7
 540 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_STATUS_MASK_PTR, interruptMode);
 541              		.loc 1 686 0
 542 000c 034B     		ldr	r3, .L38
 543 000e FA1D     		add	r2, r7, #7
 544 0010 1278     		ldrb	r2, [r2]
 545 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 546              		.loc 1 687 0
 547 0014 BD46     		mov	sp, r7
 548 0016 02B0     		add	sp, sp, #8
 549              		@ sp needed
 550 0018 80BD     		pop	{r7, pc}
 551              	.L39:
 552 001a C046     		.align	2
 553              	.L38:
 554 001c 82000F40 		.word	1074724994
 555              		.cfi_endproc
 556              	.LFE11:
 557              		.size	MotorPWM_SetInterruptMode, .-MotorPWM_SetInterruptMode
 558              		.section	.text.MotorPWM_ReadStatusRegister,"ax",%progbits
 559              		.align	2
 560              		.global	MotorPWM_ReadStatusRegister
 561              		.code	16
 562              		.thumb_func
 563              		.type	MotorPWM_ReadStatusRegister, %function
 564              	MotorPWM_ReadStatusRegister:
 565              	.LFB12:
 688:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 23


 689:.\Generated_Source\PSoC4/MotorPWM.c **** 
 690:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 694:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 697:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 699:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 700:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 710:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 566              		.loc 1 712 0
 567              		.cfi_startproc
 568 0000 80B5     		push	{r7, lr}
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG8(MotorPWM_STATUS_PTR));
 574              		.loc 1 713 0
 575 0004 024B     		ldr	r3, .L42
 576 0006 1B78     		ldrb	r3, [r3]
 577 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 578              		.loc 1 714 0
 579 000a 181C     		mov	r0, r3
 580 000c BD46     		mov	sp, r7
 581              		@ sp needed
 582 000e 80BD     		pop	{r7, pc}
 583              	.L43:
 584              		.align	2
 585              	.L42:
 586 0010 62000F40 		.word	1074724962
 587              		.cfi_endproc
 588              	.LFE12:
 589              		.size	MotorPWM_ReadStatusRegister, .-MotorPWM_ReadStatusRegister
 590              		.section	.text.MotorPWM_ReadControlRegister,"ax",%progbits
 591              		.align	2
 592              		.global	MotorPWM_ReadControlRegister
 593              		.code	16
 594              		.thumb_func
 595              		.type	MotorPWM_ReadControlRegister, %function
 596              	MotorPWM_ReadControlRegister:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 24


 597              	.LFB13:
 715:.\Generated_Source\PSoC4/MotorPWM.c **** 
 716:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/MotorPWM.c **** 
 718:.\Generated_Source\PSoC4/MotorPWM.c **** 
 719:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseControl)
 720:.\Generated_Source\PSoC4/MotorPWM.c **** 
 721:.\Generated_Source\PSoC4/MotorPWM.c **** 
 722:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 726:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/MotorPWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 730:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 732:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 733:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 736:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 598              		.loc 1 738 0
 599              		.cfi_startproc
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 82B0     		sub	sp, sp, #8
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/MotorPWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/MotorPWM.c **** 
 741:.\Generated_Source\PSoC4/MotorPWM.c ****         result = CY_GET_REG8(MotorPWM_CONTROL_PTR);
 608              		.loc 1 741 0
 609 0006 054A     		ldr	r2, .L46
 610 0008 FB1D     		add	r3, r7, #7
 611 000a 1278     		ldrb	r2, [r2]
 612 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/MotorPWM.c ****         return (result);
 613              		.loc 1 742 0
 614 000e FB1D     		add	r3, r7, #7
 615 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 616              		.loc 1 743 0
 617 0012 181C     		mov	r0, r3
 618 0014 BD46     		mov	sp, r7
 619 0016 02B0     		add	sp, sp, #8
 620              		@ sp needed
 621 0018 80BD     		pop	{r7, pc}
 622              	.L47:
 623 001a C046     		.align	2
 624              	.L46:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 25


 625 001c 73000F40 		.word	1074724979
 626              		.cfi_endproc
 627              	.LFE13:
 628              		.size	MotorPWM_ReadControlRegister, .-MotorPWM_ReadControlRegister
 629              		.section	.text.MotorPWM_WriteControlRegister,"ax",%progbits
 630              		.align	2
 631              		.global	MotorPWM_WriteControlRegister
 632              		.code	16
 633              		.thumb_func
 634              		.type	MotorPWM_WriteControlRegister, %function
 635              	MotorPWM_WriteControlRegister:
 636              	.LFB14:
 744:.\Generated_Source\PSoC4/MotorPWM.c **** 
 745:.\Generated_Source\PSoC4/MotorPWM.c **** 
 746:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 750:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/MotorPWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 754:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 761:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 763:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 764:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 637              		.loc 1 766 0
 638              		.cfi_startproc
 639 0000 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 82B0     		sub	sp, sp, #8
 644              		.cfi_def_cfa_offset 16
 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 647 0006 021C     		mov	r2, r0
 648 0008 FB1D     		add	r3, r7, #7
 649 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_CONTROL_PTR, control);
 650              		.loc 1 767 0
 651 000c 034B     		ldr	r3, .L49
 652 000e FA1D     		add	r2, r7, #7
 653 0010 1278     		ldrb	r2, [r2]
 654 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 655              		.loc 1 768 0
 656 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 26


 657 0016 02B0     		add	sp, sp, #8
 658              		@ sp needed
 659 0018 80BD     		pop	{r7, pc}
 660              	.L50:
 661 001a C046     		.align	2
 662              	.L49:
 663 001c 73000F40 		.word	1074724979
 664              		.cfi_endproc
 665              	.LFE14:
 666              		.size	MotorPWM_WriteControlRegister, .-MotorPWM_WriteControlRegister
 667              		.section	.text.MotorPWM_ReadCapture,"ax",%progbits
 668              		.align	2
 669              		.global	MotorPWM_ReadCapture
 670              		.code	16
 671              		.thumb_func
 672              		.type	MotorPWM_ReadCapture, %function
 673              	MotorPWM_ReadCapture:
 674              	.LFB15:
 769:.\Generated_Source\PSoC4/MotorPWM.c **** 
 770:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseControl) */
 771:.\Generated_Source\PSoC4/MotorPWM.c **** 
 772:.\Generated_Source\PSoC4/MotorPWM.c **** 
 773:.\Generated_Source\PSoC4/MotorPWM.c **** #if (!MotorPWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/MotorPWM.c **** 
 775:.\Generated_Source\PSoC4/MotorPWM.c **** 
 776:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCapture
 778:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 780:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 783:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 785:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 786:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 789:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 675              		.loc 1 791 0
 676              		.cfi_startproc
 677 0000 80B5     		push	{r7, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_CAPTURE_LSB_PTR));
 683              		.loc 1 792 0
 684 0004 024B     		ldr	r3, .L53
 685 0006 1B88     		ldrh	r3, [r3]
 686 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 687              		.loc 1 793 0
 688 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 27


 689 000c BD46     		mov	sp, r7
 690              		@ sp needed
 691 000e 80BD     		pop	{r7, pc}
 692              	.L54:
 693              		.align	2
 694              	.L53:
 695 0010 A4100F40 		.word	1074729124
 696              		.cfi_endproc
 697              	.LFE15:
 698              		.size	MotorPWM_ReadCapture, .-MotorPWM_ReadCapture
 699              		.section	.text.MotorPWM_ReadCompare,"ax",%progbits
 700              		.align	2
 701              		.global	MotorPWM_ReadCompare
 702              		.code	16
 703              		.thumb_func
 704              		.type	MotorPWM_ReadCompare, %function
 705              	MotorPWM_ReadCompare:
 706              	.LFB16:
 794:.\Generated_Source\PSoC4/MotorPWM.c **** 
 795:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (!MotorPWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/MotorPWM.c **** 
 797:.\Generated_Source\PSoC4/MotorPWM.c **** 
 798:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/MotorPWM.c **** 
 800:.\Generated_Source\PSoC4/MotorPWM.c **** 
 801:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare
 803:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 805:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/MotorPWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 809:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 811:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 812:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 815:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 707              		.loc 1 817 0
 708              		.cfi_startproc
 709 0000 80B5     		push	{r7, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/MotorPWM.c ****             return ((uint16)CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 821:.\Generated_Source\PSoC4/MotorPWM.c ****             return (CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 715              		.loc 1 821 0
 716 0004 024B     		ldr	r3, .L57
 717 0006 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 28


 718 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 719              		.loc 1 823 0
 720 000a 181C     		mov	r0, r3
 721 000c BD46     		mov	sp, r7
 722              		@ sp needed
 723 000e 80BD     		pop	{r7, pc}
 724              	.L58:
 725              		.align	2
 726              	.L57:
 727 0010 44100F40 		.word	1074729028
 728              		.cfi_endproc
 729              	.LFE16:
 730              		.size	MotorPWM_ReadCompare, .-MotorPWM_ReadCompare
 731              		.section	.text.MotorPWM_ReadPeriod,"ax",%progbits
 732              		.align	2
 733              		.global	MotorPWM_ReadPeriod
 734              		.code	16
 735              		.thumb_func
 736              		.type	MotorPWM_ReadPeriod, %function
 737              	MotorPWM_ReadPeriod:
 738              	.LFB17:
 824:.\Generated_Source\PSoC4/MotorPWM.c **** 
 825:.\Generated_Source\PSoC4/MotorPWM.c **** #else
 826:.\Generated_Source\PSoC4/MotorPWM.c **** 
 827:.\Generated_Source\PSoC4/MotorPWM.c **** 
 828:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare1
 830:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 832:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 835:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 837:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 838:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 841:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 844:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 846:.\Generated_Source\PSoC4/MotorPWM.c **** 
 847:.\Generated_Source\PSoC4/MotorPWM.c **** 
 848:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare2
 850:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 852:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 855:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 857:.\Generated_Source\PSoC4/MotorPWM.c ****     *
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 29


 858:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 861:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 864:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 866:.\Generated_Source\PSoC4/MotorPWM.c **** 
 867:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/MotorPWM.c **** 
 869:.\Generated_Source\PSoC4/MotorPWM.c **** 
 870:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_ReadPeriod
 872:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/MotorPWM.c **** *
 874:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/MotorPWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/MotorPWM.c **** *
 877:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 879:.\Generated_Source\PSoC4/MotorPWM.c **** *
 880:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 881:.\Generated_Source\PSoC4/MotorPWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/MotorPWM.c **** *
 883:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/MotorPWM.c **** uint16 MotorPWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/MotorPWM.c **** {
 739              		.loc 1 885 0
 740              		.cfi_startproc
 741 0000 80B5     		push	{r7, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(MotorPWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/MotorPWM.c ****         return ((uint16)CY_GET_REG16(MotorPWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 889:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_PERIOD_LSB_PTR));
 747              		.loc 1 889 0
 748 0004 024B     		ldr	r3, .L61
 749 0006 1B88     		ldrh	r3, [r3]
 750 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/MotorPWM.c **** }
 751              		.loc 1 891 0
 752 000a 181C     		mov	r0, r3
 753 000c BD46     		mov	sp, r7
 754              		@ sp needed
 755 000e 80BD     		pop	{r7, pc}
 756              	.L62:
 757              		.align	2
 758              	.L61:
 759 0010 84100F40 		.word	1074729092
 760              		.cfi_endproc
 761              	.LFE17:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 30


 762              		.size	MotorPWM_ReadPeriod, .-MotorPWM_ReadPeriod
 763              		.text
 764              	.Letext0:
 765              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 766              		.section	.debug_info,"",%progbits
 767              	.Ldebug_info0:
 768 0000 D6020000 		.4byte	0x2d6
 769 0004 0400     		.2byte	0x4
 770 0006 00000000 		.4byte	.Ldebug_abbrev0
 771 000a 04       		.byte	0x4
 772 000b 01       		.uleb128 0x1
 773 000c D8000000 		.4byte	.LASF43
 774 0010 01       		.byte	0x1
 775 0011 4B000000 		.4byte	.LASF44
 776 0015 18020000 		.4byte	.LASF45
 777 0019 00000000 		.4byte	.Ldebug_ranges0+0
 778 001d 00000000 		.4byte	0
 779 0021 00000000 		.4byte	.Ldebug_line0
 780 0025 02       		.uleb128 0x2
 781 0026 01       		.byte	0x1
 782 0027 06       		.byte	0x6
 783 0028 79030000 		.4byte	.LASF0
 784 002c 02       		.uleb128 0x2
 785 002d 01       		.byte	0x1
 786 002e 08       		.byte	0x8
 787 002f 54010000 		.4byte	.LASF1
 788 0033 02       		.uleb128 0x2
 789 0034 02       		.byte	0x2
 790 0035 05       		.byte	0x5
 791 0036 DD020000 		.4byte	.LASF2
 792 003a 02       		.uleb128 0x2
 793 003b 02       		.byte	0x2
 794 003c 07       		.byte	0x7
 795 003d 6F000000 		.4byte	.LASF3
 796 0041 02       		.uleb128 0x2
 797 0042 04       		.byte	0x4
 798 0043 05       		.byte	0x5
 799 0044 53030000 		.4byte	.LASF4
 800 0048 02       		.uleb128 0x2
 801 0049 04       		.byte	0x4
 802 004a 07       		.byte	0x7
 803 004b 70010000 		.4byte	.LASF5
 804 004f 02       		.uleb128 0x2
 805 0050 08       		.byte	0x8
 806 0051 05       		.byte	0x5
 807 0052 AB020000 		.4byte	.LASF6
 808 0056 02       		.uleb128 0x2
 809 0057 08       		.byte	0x8
 810 0058 07       		.byte	0x7
 811 0059 01020000 		.4byte	.LASF7
 812 005d 03       		.uleb128 0x3
 813 005e 04       		.byte	0x4
 814 005f 05       		.byte	0x5
 815 0060 696E7400 		.ascii	"int\000"
 816 0064 02       		.uleb128 0x2
 817 0065 04       		.byte	0x4
 818 0066 07       		.byte	0x7
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 31


 819 0067 F4010000 		.4byte	.LASF8
 820 006b 04       		.uleb128 0x4
 821 006c 82010000 		.4byte	.LASF9
 822 0070 02       		.byte	0x2
 823 0071 A1       		.byte	0xa1
 824 0072 2C000000 		.4byte	0x2c
 825 0076 04       		.uleb128 0x4
 826 0077 D8010000 		.4byte	.LASF10
 827 007b 02       		.byte	0x2
 828 007c A2       		.byte	0xa2
 829 007d 3A000000 		.4byte	0x3a
 830 0081 02       		.uleb128 0x2
 831 0082 04       		.byte	0x4
 832 0083 04       		.byte	0x4
 833 0084 D2000000 		.4byte	.LASF11
 834 0088 02       		.uleb128 0x2
 835 0089 08       		.byte	0x8
 836 008a 04       		.byte	0x4
 837 008b AC010000 		.4byte	.LASF12
 838 008f 02       		.uleb128 0x2
 839 0090 01       		.byte	0x1
 840 0091 08       		.byte	0x8
 841 0092 5C030000 		.4byte	.LASF13
 842 0096 05       		.uleb128 0x5
 843 0097 86020000 		.4byte	.LASF14
 844 009b 02       		.byte	0x2
 845 009c 4B01     		.2byte	0x14b
 846 009e A2000000 		.4byte	0xa2
 847 00a2 06       		.uleb128 0x6
 848 00a3 6B000000 		.4byte	0x6b
 849 00a7 05       		.uleb128 0x5
 850 00a8 00000000 		.4byte	.LASF15
 851 00ac 02       		.byte	0x2
 852 00ad 4C01     		.2byte	0x14c
 853 00af B3000000 		.4byte	0xb3
 854 00b3 06       		.uleb128 0x6
 855 00b4 76000000 		.4byte	0x76
 856 00b8 02       		.uleb128 0x2
 857 00b9 04       		.byte	0x4
 858 00ba 07       		.byte	0x7
 859 00bb A2020000 		.4byte	.LASF16
 860 00bf 07       		.uleb128 0x7
 861 00c0 16030000 		.4byte	.LASF19
 862 00c4 01       		.byte	0x1
 863 00c5 37       		.byte	0x37
 864 00c6 00000000 		.4byte	.LFB0
 865 00ca 24000000 		.4byte	.LFE0-.LFB0
 866 00ce 01       		.uleb128 0x1
 867 00cf 9C       		.byte	0x9c
 868 00d0 08       		.uleb128 0x8
 869 00d1 9B030000 		.4byte	.LASF22
 870 00d5 01       		.byte	0x1
 871 00d6 54       		.byte	0x54
 872 00d7 00000000 		.4byte	.LFB1
 873 00db 9C000000 		.4byte	.LFE1-.LFB1
 874 00df 01       		.uleb128 0x1
 875 00e0 9C       		.byte	0x9c
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 32


 876 00e1 02010000 		.4byte	0x102
 877 00e5 09       		.uleb128 0x9
 878 00e6 96030000 		.4byte	.LASF17
 879 00ea 01       		.byte	0x1
 880 00eb 57       		.byte	0x57
 881 00ec 6B000000 		.4byte	0x6b
 882 00f0 02       		.uleb128 0x2
 883 00f1 91       		.byte	0x91
 884 00f2 6F       		.sleb128 -17
 885 00f3 09       		.uleb128 0x9
 886 00f4 61030000 		.4byte	.LASF18
 887 00f8 01       		.byte	0x1
 888 00f9 5D       		.byte	0x5d
 889 00fa 6B000000 		.4byte	0x6b
 890 00fe 02       		.uleb128 0x2
 891 00ff 91       		.byte	0x91
 892 0100 6E       		.sleb128 -18
 893 0101 00       		.byte	0
 894 0102 0A       		.uleb128 0xa
 895 0103 C8010000 		.4byte	.LASF20
 896 0107 01       		.byte	0x1
 897 0108 C7       		.byte	0xc7
 898 0109 00000000 		.4byte	.LFB2
 899 010d 20000000 		.4byte	.LFE2-.LFB2
 900 0111 01       		.uleb128 0x1
 901 0112 9C       		.byte	0x9c
 902 0113 0A       		.uleb128 0xa
 903 0114 62010000 		.4byte	.LASF21
 904 0118 01       		.byte	0x1
 905 0119 E9       		.byte	0xe9
 906 011a 00000000 		.4byte	.LFB3
 907 011e 1C000000 		.4byte	.LFE3-.LFB3
 908 0122 01       		.uleb128 0x1
 909 0123 9C       		.byte	0x9c
 910 0124 0B       		.uleb128 0xb
 911 0125 1B000000 		.4byte	.LASF23
 912 0129 01       		.byte	0x1
 913 012a 9301     		.2byte	0x193
 914 012c 00000000 		.4byte	.LFB4
 915 0130 20000000 		.4byte	.LFE4-.LFB4
 916 0134 01       		.uleb128 0x1
 917 0135 9C       		.byte	0x9c
 918 0136 4A010000 		.4byte	0x14a
 919 013a 0C       		.uleb128 0xc
 920 013b A4010000 		.4byte	.LASF26
 921 013f 01       		.byte	0x1
 922 0140 9301     		.2byte	0x193
 923 0142 76000000 		.4byte	0x76
 924 0146 02       		.uleb128 0x2
 925 0147 91       		.byte	0x91
 926 0148 76       		.sleb128 -10
 927 0149 00       		.byte	0
 928 014a 0D       		.uleb128 0xd
 929 014b E7020000 		.4byte	.LASF32
 930 014f 01       		.byte	0x1
 931 0150 A901     		.2byte	0x1a9
 932 0152 76000000 		.4byte	0x76
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 33


 933 0156 00000000 		.4byte	.LFB5
 934 015a 1C000000 		.4byte	.LFE5-.LFB5
 935 015e 01       		.uleb128 0x1
 936 015f 9C       		.byte	0x9c
 937 0160 0E       		.uleb128 0xe
 938 0161 31000000 		.4byte	.LASF24
 939 0165 01       		.byte	0x1
 940 0166 C501     		.2byte	0x1c5
 941 0168 00000000 		.4byte	.LFB6
 942 016c 1C000000 		.4byte	.LFE6-.LFB6
 943 0170 01       		.uleb128 0x1
 944 0171 9C       		.byte	0x9c
 945 0172 0B       		.uleb128 0xb
 946 0173 06000000 		.4byte	.LASF25
 947 0177 01       		.byte	0x1
 948 0178 E201     		.2byte	0x1e2
 949 017a 00000000 		.4byte	.LFB7
 950 017e 20000000 		.4byte	.LFE7-.LFB7
 951 0182 01       		.uleb128 0x1
 952 0183 9C       		.byte	0x9c
 953 0184 98010000 		.4byte	0x198
 954 0188 0C       		.uleb128 0xc
 955 0189 44000000 		.4byte	.LASF27
 956 018d 01       		.byte	0x1
 957 018e E201     		.2byte	0x1e2
 958 0190 76000000 		.4byte	0x76
 959 0194 02       		.uleb128 0x2
 960 0195 91       		.byte	0x91
 961 0196 76       		.sleb128 -10
 962 0197 00       		.byte	0
 963 0198 0B       		.uleb128 0xb
 964 0199 C7020000 		.4byte	.LASF28
 965 019d 01       		.byte	0x1
 966 019e 0402     		.2byte	0x204
 967 01a0 00000000 		.4byte	.LFB8
 968 01a4 20000000 		.4byte	.LFE8-.LFB8
 969 01a8 01       		.uleb128 0x1
 970 01a9 9C       		.byte	0x9c
 971 01aa BE010000 		.4byte	0x1be
 972 01ae 0C       		.uleb128 0xc
 973 01af 85030000 		.4byte	.LASF29
 974 01b3 01       		.byte	0x1
 975 01b4 0402     		.2byte	0x204
 976 01b6 76000000 		.4byte	0x76
 977 01ba 02       		.uleb128 0x2
 978 01bb 91       		.byte	0x91
 979 01bc 76       		.sleb128 -10
 980 01bd 00       		.byte	0
 981 01be 0B       		.uleb128 0xb
 982 01bf 8B020000 		.4byte	.LASF30
 983 01c3 01       		.byte	0x1
 984 01c4 6402     		.2byte	0x264
 985 01c6 00000000 		.4byte	.LFB9
 986 01ca 44000000 		.4byte	.LFE9-.LFB9
 987 01ce 01       		.uleb128 0x1
 988 01cf 9C       		.byte	0x9c
 989 01d0 E4010000 		.4byte	0x1e4
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 34


 990 01d4 0C       		.uleb128 0xc
 991 01d5 8D030000 		.4byte	.LASF31
 992 01d9 01       		.byte	0x1
 993 01da 6402     		.2byte	0x264
 994 01dc 6B000000 		.4byte	0x6b
 995 01e0 02       		.uleb128 0x2
 996 01e1 91       		.byte	0x91
 997 01e2 77       		.sleb128 -9
 998 01e3 00       		.byte	0
 999 01e4 0D       		.uleb128 0xd
 1000 01e5 A0000000 		.4byte	.LASF33
 1001 01e9 01       		.byte	0x1
 1002 01ea 8802     		.2byte	0x288
 1003 01ec 6B000000 		.4byte	0x6b
 1004 01f0 00000000 		.4byte	.LFB10
 1005 01f4 1C000000 		.4byte	.LFE10-.LFB10
 1006 01f8 01       		.uleb128 0x1
 1007 01f9 9C       		.byte	0x9c
 1008 01fa 0B       		.uleb128 0xb
 1009 01fb FC020000 		.4byte	.LASF34
 1010 01ff 01       		.byte	0x1
 1011 0200 AC02     		.2byte	0x2ac
 1012 0202 00000000 		.4byte	.LFB11
 1013 0206 20000000 		.4byte	.LFE11-.LFB11
 1014 020a 01       		.uleb128 0x1
 1015 020b 9C       		.byte	0x9c
 1016 020c 20020000 		.4byte	0x220
 1017 0210 0C       		.uleb128 0xc
 1018 0211 B9020000 		.4byte	.LASF35
 1019 0215 01       		.byte	0x1
 1020 0216 AC02     		.2byte	0x2ac
 1021 0218 6B000000 		.4byte	0x6b
 1022 021c 02       		.uleb128 0x2
 1023 021d 91       		.byte	0x91
 1024 021e 77       		.sleb128 -9
 1025 021f 00       		.byte	0
 1026 0220 0D       		.uleb128 0xd
 1027 0221 B6000000 		.4byte	.LASF36
 1028 0225 01       		.byte	0x1
 1029 0226 C702     		.2byte	0x2c7
 1030 0228 6B000000 		.4byte	0x6b
 1031 022c 00000000 		.4byte	.LFB12
 1032 0230 14000000 		.4byte	.LFE12-.LFB12
 1033 0234 01       		.uleb128 0x1
 1034 0235 9C       		.byte	0x9c
 1035 0236 0F       		.uleb128 0xf
 1036 0237 36030000 		.4byte	.LASF46
 1037 023b 01       		.byte	0x1
 1038 023c E102     		.2byte	0x2e1
 1039 023e 6B000000 		.4byte	0x6b
 1040 0242 00000000 		.4byte	.LFB13
 1041 0246 20000000 		.4byte	.LFE13-.LFB13
 1042 024a 01       		.uleb128 0x1
 1043 024b 9C       		.byte	0x9c
 1044 024c 60020000 		.4byte	0x260
 1045 0250 10       		.uleb128 0x10
 1046 0251 7F020000 		.4byte	.LASF37
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 35


 1047 0255 01       		.byte	0x1
 1048 0256 E302     		.2byte	0x2e3
 1049 0258 6B000000 		.4byte	0x6b
 1050 025c 02       		.uleb128 0x2
 1051 025d 91       		.byte	0x91
 1052 025e 77       		.sleb128 -9
 1053 025f 00       		.byte	0
 1054 0260 0B       		.uleb128 0xb
 1055 0261 82000000 		.4byte	.LASF38
 1056 0265 01       		.byte	0x1
 1057 0266 FD02     		.2byte	0x2fd
 1058 0268 00000000 		.4byte	.LFB14
 1059 026c 20000000 		.4byte	.LFE14-.LFB14
 1060 0270 01       		.uleb128 0x1
 1061 0271 9C       		.byte	0x9c
 1062 0272 86020000 		.4byte	0x286
 1063 0276 0C       		.uleb128 0xc
 1064 0277 88010000 		.4byte	.LASF39
 1065 027b 01       		.byte	0x1
 1066 027c FD02     		.2byte	0x2fd
 1067 027e 6B000000 		.4byte	0x6b
 1068 0282 02       		.uleb128 0x2
 1069 0283 91       		.byte	0x91
 1070 0284 77       		.sleb128 -9
 1071 0285 00       		.byte	0
 1072 0286 0D       		.uleb128 0xd
 1073 0287 DF010000 		.4byte	.LASF40
 1074 028b 01       		.byte	0x1
 1075 028c 1603     		.2byte	0x316
 1076 028e 76000000 		.4byte	0x76
 1077 0292 00000000 		.4byte	.LFB15
 1078 0296 14000000 		.4byte	.LFE15-.LFB15
 1079 029a 01       		.uleb128 0x1
 1080 029b 9C       		.byte	0x9c
 1081 029c 0D       		.uleb128 0xd
 1082 029d B3010000 		.4byte	.LASF41
 1083 02a1 01       		.byte	0x1
 1084 02a2 3003     		.2byte	0x330
 1085 02a4 76000000 		.4byte	0x76
 1086 02a8 00000000 		.4byte	.LFB16
 1087 02ac 14000000 		.4byte	.LFE16-.LFB16
 1088 02b0 01       		.uleb128 0x1
 1089 02b1 9C       		.byte	0x9c
 1090 02b2 0D       		.uleb128 0xd
 1091 02b3 90010000 		.4byte	.LASF42
 1092 02b7 01       		.byte	0x1
 1093 02b8 7403     		.2byte	0x374
 1094 02ba 76000000 		.4byte	0x76
 1095 02be 00000000 		.4byte	.LFB17
 1096 02c2 14000000 		.4byte	.LFE17-.LFB17
 1097 02c6 01       		.uleb128 0x1
 1098 02c7 9C       		.byte	0x9c
 1099 02c8 11       		.uleb128 0x11
 1100 02c9 25030000 		.4byte	.LASF47
 1101 02cd 01       		.byte	0x1
 1102 02ce 20       		.byte	0x20
 1103 02cf 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 36


 1104 02d3 05       		.uleb128 0x5
 1105 02d4 03       		.byte	0x3
 1106 02d5 00000000 		.4byte	MotorPWM_initVar
 1107 02d9 00       		.byte	0
 1108              		.section	.debug_abbrev,"",%progbits
 1109              	.Ldebug_abbrev0:
 1110 0000 01       		.uleb128 0x1
 1111 0001 11       		.uleb128 0x11
 1112 0002 01       		.byte	0x1
 1113 0003 25       		.uleb128 0x25
 1114 0004 0E       		.uleb128 0xe
 1115 0005 13       		.uleb128 0x13
 1116 0006 0B       		.uleb128 0xb
 1117 0007 03       		.uleb128 0x3
 1118 0008 0E       		.uleb128 0xe
 1119 0009 1B       		.uleb128 0x1b
 1120 000a 0E       		.uleb128 0xe
 1121 000b 55       		.uleb128 0x55
 1122 000c 17       		.uleb128 0x17
 1123 000d 11       		.uleb128 0x11
 1124 000e 01       		.uleb128 0x1
 1125 000f 10       		.uleb128 0x10
 1126 0010 17       		.uleb128 0x17
 1127 0011 00       		.byte	0
 1128 0012 00       		.byte	0
 1129 0013 02       		.uleb128 0x2
 1130 0014 24       		.uleb128 0x24
 1131 0015 00       		.byte	0
 1132 0016 0B       		.uleb128 0xb
 1133 0017 0B       		.uleb128 0xb
 1134 0018 3E       		.uleb128 0x3e
 1135 0019 0B       		.uleb128 0xb
 1136 001a 03       		.uleb128 0x3
 1137 001b 0E       		.uleb128 0xe
 1138 001c 00       		.byte	0
 1139 001d 00       		.byte	0
 1140 001e 03       		.uleb128 0x3
 1141 001f 24       		.uleb128 0x24
 1142 0020 00       		.byte	0
 1143 0021 0B       		.uleb128 0xb
 1144 0022 0B       		.uleb128 0xb
 1145 0023 3E       		.uleb128 0x3e
 1146 0024 0B       		.uleb128 0xb
 1147 0025 03       		.uleb128 0x3
 1148 0026 08       		.uleb128 0x8
 1149 0027 00       		.byte	0
 1150 0028 00       		.byte	0
 1151 0029 04       		.uleb128 0x4
 1152 002a 16       		.uleb128 0x16
 1153 002b 00       		.byte	0
 1154 002c 03       		.uleb128 0x3
 1155 002d 0E       		.uleb128 0xe
 1156 002e 3A       		.uleb128 0x3a
 1157 002f 0B       		.uleb128 0xb
 1158 0030 3B       		.uleb128 0x3b
 1159 0031 0B       		.uleb128 0xb
 1160 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 37


 1161 0033 13       		.uleb128 0x13
 1162 0034 00       		.byte	0
 1163 0035 00       		.byte	0
 1164 0036 05       		.uleb128 0x5
 1165 0037 16       		.uleb128 0x16
 1166 0038 00       		.byte	0
 1167 0039 03       		.uleb128 0x3
 1168 003a 0E       		.uleb128 0xe
 1169 003b 3A       		.uleb128 0x3a
 1170 003c 0B       		.uleb128 0xb
 1171 003d 3B       		.uleb128 0x3b
 1172 003e 05       		.uleb128 0x5
 1173 003f 49       		.uleb128 0x49
 1174 0040 13       		.uleb128 0x13
 1175 0041 00       		.byte	0
 1176 0042 00       		.byte	0
 1177 0043 06       		.uleb128 0x6
 1178 0044 35       		.uleb128 0x35
 1179 0045 00       		.byte	0
 1180 0046 49       		.uleb128 0x49
 1181 0047 13       		.uleb128 0x13
 1182 0048 00       		.byte	0
 1183 0049 00       		.byte	0
 1184 004a 07       		.uleb128 0x7
 1185 004b 2E       		.uleb128 0x2e
 1186 004c 00       		.byte	0
 1187 004d 3F       		.uleb128 0x3f
 1188 004e 19       		.uleb128 0x19
 1189 004f 03       		.uleb128 0x3
 1190 0050 0E       		.uleb128 0xe
 1191 0051 3A       		.uleb128 0x3a
 1192 0052 0B       		.uleb128 0xb
 1193 0053 3B       		.uleb128 0x3b
 1194 0054 0B       		.uleb128 0xb
 1195 0055 27       		.uleb128 0x27
 1196 0056 19       		.uleb128 0x19
 1197 0057 11       		.uleb128 0x11
 1198 0058 01       		.uleb128 0x1
 1199 0059 12       		.uleb128 0x12
 1200 005a 06       		.uleb128 0x6
 1201 005b 40       		.uleb128 0x40
 1202 005c 18       		.uleb128 0x18
 1203 005d 9642     		.uleb128 0x2116
 1204 005f 19       		.uleb128 0x19
 1205 0060 00       		.byte	0
 1206 0061 00       		.byte	0
 1207 0062 08       		.uleb128 0x8
 1208 0063 2E       		.uleb128 0x2e
 1209 0064 01       		.byte	0x1
 1210 0065 3F       		.uleb128 0x3f
 1211 0066 19       		.uleb128 0x19
 1212 0067 03       		.uleb128 0x3
 1213 0068 0E       		.uleb128 0xe
 1214 0069 3A       		.uleb128 0x3a
 1215 006a 0B       		.uleb128 0xb
 1216 006b 3B       		.uleb128 0x3b
 1217 006c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 38


 1218 006d 27       		.uleb128 0x27
 1219 006e 19       		.uleb128 0x19
 1220 006f 11       		.uleb128 0x11
 1221 0070 01       		.uleb128 0x1
 1222 0071 12       		.uleb128 0x12
 1223 0072 06       		.uleb128 0x6
 1224 0073 40       		.uleb128 0x40
 1225 0074 18       		.uleb128 0x18
 1226 0075 9642     		.uleb128 0x2116
 1227 0077 19       		.uleb128 0x19
 1228 0078 01       		.uleb128 0x1
 1229 0079 13       		.uleb128 0x13
 1230 007a 00       		.byte	0
 1231 007b 00       		.byte	0
 1232 007c 09       		.uleb128 0x9
 1233 007d 34       		.uleb128 0x34
 1234 007e 00       		.byte	0
 1235 007f 03       		.uleb128 0x3
 1236 0080 0E       		.uleb128 0xe
 1237 0081 3A       		.uleb128 0x3a
 1238 0082 0B       		.uleb128 0xb
 1239 0083 3B       		.uleb128 0x3b
 1240 0084 0B       		.uleb128 0xb
 1241 0085 49       		.uleb128 0x49
 1242 0086 13       		.uleb128 0x13
 1243 0087 02       		.uleb128 0x2
 1244 0088 18       		.uleb128 0x18
 1245 0089 00       		.byte	0
 1246 008a 00       		.byte	0
 1247 008b 0A       		.uleb128 0xa
 1248 008c 2E       		.uleb128 0x2e
 1249 008d 00       		.byte	0
 1250 008e 3F       		.uleb128 0x3f
 1251 008f 19       		.uleb128 0x19
 1252 0090 03       		.uleb128 0x3
 1253 0091 0E       		.uleb128 0xe
 1254 0092 3A       		.uleb128 0x3a
 1255 0093 0B       		.uleb128 0xb
 1256 0094 3B       		.uleb128 0x3b
 1257 0095 0B       		.uleb128 0xb
 1258 0096 27       		.uleb128 0x27
 1259 0097 19       		.uleb128 0x19
 1260 0098 11       		.uleb128 0x11
 1261 0099 01       		.uleb128 0x1
 1262 009a 12       		.uleb128 0x12
 1263 009b 06       		.uleb128 0x6
 1264 009c 40       		.uleb128 0x40
 1265 009d 18       		.uleb128 0x18
 1266 009e 9742     		.uleb128 0x2117
 1267 00a0 19       		.uleb128 0x19
 1268 00a1 00       		.byte	0
 1269 00a2 00       		.byte	0
 1270 00a3 0B       		.uleb128 0xb
 1271 00a4 2E       		.uleb128 0x2e
 1272 00a5 01       		.byte	0x1
 1273 00a6 3F       		.uleb128 0x3f
 1274 00a7 19       		.uleb128 0x19
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 39


 1275 00a8 03       		.uleb128 0x3
 1276 00a9 0E       		.uleb128 0xe
 1277 00aa 3A       		.uleb128 0x3a
 1278 00ab 0B       		.uleb128 0xb
 1279 00ac 3B       		.uleb128 0x3b
 1280 00ad 05       		.uleb128 0x5
 1281 00ae 27       		.uleb128 0x27
 1282 00af 19       		.uleb128 0x19
 1283 00b0 11       		.uleb128 0x11
 1284 00b1 01       		.uleb128 0x1
 1285 00b2 12       		.uleb128 0x12
 1286 00b3 06       		.uleb128 0x6
 1287 00b4 40       		.uleb128 0x40
 1288 00b5 18       		.uleb128 0x18
 1289 00b6 9742     		.uleb128 0x2117
 1290 00b8 19       		.uleb128 0x19
 1291 00b9 01       		.uleb128 0x1
 1292 00ba 13       		.uleb128 0x13
 1293 00bb 00       		.byte	0
 1294 00bc 00       		.byte	0
 1295 00bd 0C       		.uleb128 0xc
 1296 00be 05       		.uleb128 0x5
 1297 00bf 00       		.byte	0
 1298 00c0 03       		.uleb128 0x3
 1299 00c1 0E       		.uleb128 0xe
 1300 00c2 3A       		.uleb128 0x3a
 1301 00c3 0B       		.uleb128 0xb
 1302 00c4 3B       		.uleb128 0x3b
 1303 00c5 05       		.uleb128 0x5
 1304 00c6 49       		.uleb128 0x49
 1305 00c7 13       		.uleb128 0x13
 1306 00c8 02       		.uleb128 0x2
 1307 00c9 18       		.uleb128 0x18
 1308 00ca 00       		.byte	0
 1309 00cb 00       		.byte	0
 1310 00cc 0D       		.uleb128 0xd
 1311 00cd 2E       		.uleb128 0x2e
 1312 00ce 00       		.byte	0
 1313 00cf 3F       		.uleb128 0x3f
 1314 00d0 19       		.uleb128 0x19
 1315 00d1 03       		.uleb128 0x3
 1316 00d2 0E       		.uleb128 0xe
 1317 00d3 3A       		.uleb128 0x3a
 1318 00d4 0B       		.uleb128 0xb
 1319 00d5 3B       		.uleb128 0x3b
 1320 00d6 05       		.uleb128 0x5
 1321 00d7 27       		.uleb128 0x27
 1322 00d8 19       		.uleb128 0x19
 1323 00d9 49       		.uleb128 0x49
 1324 00da 13       		.uleb128 0x13
 1325 00db 11       		.uleb128 0x11
 1326 00dc 01       		.uleb128 0x1
 1327 00dd 12       		.uleb128 0x12
 1328 00de 06       		.uleb128 0x6
 1329 00df 40       		.uleb128 0x40
 1330 00e0 18       		.uleb128 0x18
 1331 00e1 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 40


 1332 00e3 19       		.uleb128 0x19
 1333 00e4 00       		.byte	0
 1334 00e5 00       		.byte	0
 1335 00e6 0E       		.uleb128 0xe
 1336 00e7 2E       		.uleb128 0x2e
 1337 00e8 00       		.byte	0
 1338 00e9 3F       		.uleb128 0x3f
 1339 00ea 19       		.uleb128 0x19
 1340 00eb 03       		.uleb128 0x3
 1341 00ec 0E       		.uleb128 0xe
 1342 00ed 3A       		.uleb128 0x3a
 1343 00ee 0B       		.uleb128 0xb
 1344 00ef 3B       		.uleb128 0x3b
 1345 00f0 05       		.uleb128 0x5
 1346 00f1 27       		.uleb128 0x27
 1347 00f2 19       		.uleb128 0x19
 1348 00f3 11       		.uleb128 0x11
 1349 00f4 01       		.uleb128 0x1
 1350 00f5 12       		.uleb128 0x12
 1351 00f6 06       		.uleb128 0x6
 1352 00f7 40       		.uleb128 0x40
 1353 00f8 18       		.uleb128 0x18
 1354 00f9 9642     		.uleb128 0x2116
 1355 00fb 19       		.uleb128 0x19
 1356 00fc 00       		.byte	0
 1357 00fd 00       		.byte	0
 1358 00fe 0F       		.uleb128 0xf
 1359 00ff 2E       		.uleb128 0x2e
 1360 0100 01       		.byte	0x1
 1361 0101 3F       		.uleb128 0x3f
 1362 0102 19       		.uleb128 0x19
 1363 0103 03       		.uleb128 0x3
 1364 0104 0E       		.uleb128 0xe
 1365 0105 3A       		.uleb128 0x3a
 1366 0106 0B       		.uleb128 0xb
 1367 0107 3B       		.uleb128 0x3b
 1368 0108 05       		.uleb128 0x5
 1369 0109 27       		.uleb128 0x27
 1370 010a 19       		.uleb128 0x19
 1371 010b 49       		.uleb128 0x49
 1372 010c 13       		.uleb128 0x13
 1373 010d 11       		.uleb128 0x11
 1374 010e 01       		.uleb128 0x1
 1375 010f 12       		.uleb128 0x12
 1376 0110 06       		.uleb128 0x6
 1377 0111 40       		.uleb128 0x40
 1378 0112 18       		.uleb128 0x18
 1379 0113 9742     		.uleb128 0x2117
 1380 0115 19       		.uleb128 0x19
 1381 0116 01       		.uleb128 0x1
 1382 0117 13       		.uleb128 0x13
 1383 0118 00       		.byte	0
 1384 0119 00       		.byte	0
 1385 011a 10       		.uleb128 0x10
 1386 011b 34       		.uleb128 0x34
 1387 011c 00       		.byte	0
 1388 011d 03       		.uleb128 0x3
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 41


 1389 011e 0E       		.uleb128 0xe
 1390 011f 3A       		.uleb128 0x3a
 1391 0120 0B       		.uleb128 0xb
 1392 0121 3B       		.uleb128 0x3b
 1393 0122 05       		.uleb128 0x5
 1394 0123 49       		.uleb128 0x49
 1395 0124 13       		.uleb128 0x13
 1396 0125 02       		.uleb128 0x2
 1397 0126 18       		.uleb128 0x18
 1398 0127 00       		.byte	0
 1399 0128 00       		.byte	0
 1400 0129 11       		.uleb128 0x11
 1401 012a 34       		.uleb128 0x34
 1402 012b 00       		.byte	0
 1403 012c 03       		.uleb128 0x3
 1404 012d 0E       		.uleb128 0xe
 1405 012e 3A       		.uleb128 0x3a
 1406 012f 0B       		.uleb128 0xb
 1407 0130 3B       		.uleb128 0x3b
 1408 0131 0B       		.uleb128 0xb
 1409 0132 49       		.uleb128 0x49
 1410 0133 13       		.uleb128 0x13
 1411 0134 3F       		.uleb128 0x3f
 1412 0135 19       		.uleb128 0x19
 1413 0136 02       		.uleb128 0x2
 1414 0137 18       		.uleb128 0x18
 1415 0138 00       		.byte	0
 1416 0139 00       		.byte	0
 1417 013a 00       		.byte	0
 1418              		.section	.debug_aranges,"",%progbits
 1419 0000 A4000000 		.4byte	0xa4
 1420 0004 0200     		.2byte	0x2
 1421 0006 00000000 		.4byte	.Ldebug_info0
 1422 000a 04       		.byte	0x4
 1423 000b 00       		.byte	0
 1424 000c 0000     		.2byte	0
 1425 000e 0000     		.2byte	0
 1426 0010 00000000 		.4byte	.LFB0
 1427 0014 24000000 		.4byte	.LFE0-.LFB0
 1428 0018 00000000 		.4byte	.LFB1
 1429 001c 9C000000 		.4byte	.LFE1-.LFB1
 1430 0020 00000000 		.4byte	.LFB2
 1431 0024 20000000 		.4byte	.LFE2-.LFB2
 1432 0028 00000000 		.4byte	.LFB3
 1433 002c 1C000000 		.4byte	.LFE3-.LFB3
 1434 0030 00000000 		.4byte	.LFB4
 1435 0034 20000000 		.4byte	.LFE4-.LFB4
 1436 0038 00000000 		.4byte	.LFB5
 1437 003c 1C000000 		.4byte	.LFE5-.LFB5
 1438 0040 00000000 		.4byte	.LFB6
 1439 0044 1C000000 		.4byte	.LFE6-.LFB6
 1440 0048 00000000 		.4byte	.LFB7
 1441 004c 20000000 		.4byte	.LFE7-.LFB7
 1442 0050 00000000 		.4byte	.LFB8
 1443 0054 20000000 		.4byte	.LFE8-.LFB8
 1444 0058 00000000 		.4byte	.LFB9
 1445 005c 44000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 42


 1446 0060 00000000 		.4byte	.LFB10
 1447 0064 1C000000 		.4byte	.LFE10-.LFB10
 1448 0068 00000000 		.4byte	.LFB11
 1449 006c 20000000 		.4byte	.LFE11-.LFB11
 1450 0070 00000000 		.4byte	.LFB12
 1451 0074 14000000 		.4byte	.LFE12-.LFB12
 1452 0078 00000000 		.4byte	.LFB13
 1453 007c 20000000 		.4byte	.LFE13-.LFB13
 1454 0080 00000000 		.4byte	.LFB14
 1455 0084 20000000 		.4byte	.LFE14-.LFB14
 1456 0088 00000000 		.4byte	.LFB15
 1457 008c 14000000 		.4byte	.LFE15-.LFB15
 1458 0090 00000000 		.4byte	.LFB16
 1459 0094 14000000 		.4byte	.LFE16-.LFB16
 1460 0098 00000000 		.4byte	.LFB17
 1461 009c 14000000 		.4byte	.LFE17-.LFB17
 1462 00a0 00000000 		.4byte	0
 1463 00a4 00000000 		.4byte	0
 1464              		.section	.debug_ranges,"",%progbits
 1465              	.Ldebug_ranges0:
 1466 0000 00000000 		.4byte	.LFB0
 1467 0004 24000000 		.4byte	.LFE0
 1468 0008 00000000 		.4byte	.LFB1
 1469 000c 9C000000 		.4byte	.LFE1
 1470 0010 00000000 		.4byte	.LFB2
 1471 0014 20000000 		.4byte	.LFE2
 1472 0018 00000000 		.4byte	.LFB3
 1473 001c 1C000000 		.4byte	.LFE3
 1474 0020 00000000 		.4byte	.LFB4
 1475 0024 20000000 		.4byte	.LFE4
 1476 0028 00000000 		.4byte	.LFB5
 1477 002c 1C000000 		.4byte	.LFE5
 1478 0030 00000000 		.4byte	.LFB6
 1479 0034 1C000000 		.4byte	.LFE6
 1480 0038 00000000 		.4byte	.LFB7
 1481 003c 20000000 		.4byte	.LFE7
 1482 0040 00000000 		.4byte	.LFB8
 1483 0044 20000000 		.4byte	.LFE8
 1484 0048 00000000 		.4byte	.LFB9
 1485 004c 44000000 		.4byte	.LFE9
 1486 0050 00000000 		.4byte	.LFB10
 1487 0054 1C000000 		.4byte	.LFE10
 1488 0058 00000000 		.4byte	.LFB11
 1489 005c 20000000 		.4byte	.LFE11
 1490 0060 00000000 		.4byte	.LFB12
 1491 0064 14000000 		.4byte	.LFE12
 1492 0068 00000000 		.4byte	.LFB13
 1493 006c 20000000 		.4byte	.LFE13
 1494 0070 00000000 		.4byte	.LFB14
 1495 0074 20000000 		.4byte	.LFE14
 1496 0078 00000000 		.4byte	.LFB15
 1497 007c 14000000 		.4byte	.LFE15
 1498 0080 00000000 		.4byte	.LFB16
 1499 0084 14000000 		.4byte	.LFE16
 1500 0088 00000000 		.4byte	.LFB17
 1501 008c 14000000 		.4byte	.LFE17
 1502 0090 00000000 		.4byte	0
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 43


 1503 0094 00000000 		.4byte	0
 1504              		.section	.debug_line,"",%progbits
 1505              	.Ldebug_line0:
 1506 0000 B6010000 		.section	.debug_str,"MS",%progbits,1
 1506      02004700 
 1506      00000201 
 1506      FB0E0D00 
 1506      01010101 
 1507              	.LASF15:
 1508 0000 72656731 		.ascii	"reg16\000"
 1508      3600
 1509              	.LASF25:
 1510 0006 4D6F746F 		.ascii	"MotorPWM_WritePeriod\000"
 1510      7250574D 
 1510      5F577269 
 1510      74655065 
 1510      72696F64 
 1511              	.LASF23:
 1512 001b 4D6F746F 		.ascii	"MotorPWM_WriteCounter\000"
 1512      7250574D 
 1512      5F577269 
 1512      7465436F 
 1512      756E7465 
 1513              	.LASF24:
 1514 0031 4D6F746F 		.ascii	"MotorPWM_ClearFIFO\000"
 1514      7250574D 
 1514      5F436C65 
 1514      61724649 
 1514      464F00
 1515              	.LASF27:
 1516 0044 70657269 		.ascii	"period\000"
 1516      6F6400
 1517              	.LASF44:
 1518 004b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\MotorPWM.c\000"
 1518      6E657261 
 1518      7465645F 
 1518      536F7572 
 1518      63655C50 
 1519              	.LASF3:
 1520 006f 73686F72 		.ascii	"short unsigned int\000"
 1520      7420756E 
 1520      7369676E 
 1520      65642069 
 1520      6E7400
 1521              	.LASF38:
 1522 0082 4D6F746F 		.ascii	"MotorPWM_WriteControlRegister\000"
 1522      7250574D 
 1522      5F577269 
 1522      7465436F 
 1522      6E74726F 
 1523              	.LASF33:
 1524 00a0 4D6F746F 		.ascii	"MotorPWM_ReadDeadTime\000"
 1524      7250574D 
 1524      5F526561 
 1524      64446561 
 1524      6454696D 
 1525              	.LASF36:
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 44


 1526 00b6 4D6F746F 		.ascii	"MotorPWM_ReadStatusRegister\000"
 1526      7250574D 
 1526      5F526561 
 1526      64537461 
 1526      74757352 
 1527              	.LASF11:
 1528 00d2 666C6F61 		.ascii	"float\000"
 1528      7400
 1529              	.LASF43:
 1530 00d8 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1530      4320342E 
 1530      382E3420 
 1530      32303134 
 1530      30353236 
 1531 010b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1531      20726576 
 1531      6973696F 
 1531      6E203231 
 1531      31333538 
 1532 013e 30202D66 		.ascii	"0 -ffunction-sections\000"
 1532      66756E63 
 1532      74696F6E 
 1532      2D736563 
 1532      74696F6E 
 1533              	.LASF1:
 1534 0154 756E7369 		.ascii	"unsigned char\000"
 1534      676E6564 
 1534      20636861 
 1534      7200
 1535              	.LASF21:
 1536 0162 4D6F746F 		.ascii	"MotorPWM_Stop\000"
 1536      7250574D 
 1536      5F53746F 
 1536      7000
 1537              	.LASF5:
 1538 0170 6C6F6E67 		.ascii	"long unsigned int\000"
 1538      20756E73 
 1538      69676E65 
 1538      6420696E 
 1538      7400
 1539              	.LASF9:
 1540 0182 75696E74 		.ascii	"uint8\000"
 1540      3800
 1541              	.LASF39:
 1542 0188 636F6E74 		.ascii	"control\000"
 1542      726F6C00 
 1543              	.LASF42:
 1544 0190 4D6F746F 		.ascii	"MotorPWM_ReadPeriod\000"
 1544      7250574D 
 1544      5F526561 
 1544      64506572 
 1544      696F6400 
 1545              	.LASF26:
 1546 01a4 636F756E 		.ascii	"counter\000"
 1546      74657200 
 1547              	.LASF12:
 1548 01ac 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 45


 1548      6C6500
 1549              	.LASF41:
 1550 01b3 4D6F746F 		.ascii	"MotorPWM_ReadCompare\000"
 1550      7250574D 
 1550      5F526561 
 1550      64436F6D 
 1550      70617265 
 1551              	.LASF20:
 1552 01c8 4D6F746F 		.ascii	"MotorPWM_Enable\000"
 1552      7250574D 
 1552      5F456E61 
 1552      626C6500 
 1553              	.LASF10:
 1554 01d8 75696E74 		.ascii	"uint16\000"
 1554      313600
 1555              	.LASF40:
 1556 01df 4D6F746F 		.ascii	"MotorPWM_ReadCapture\000"
 1556      7250574D 
 1556      5F526561 
 1556      64436170 
 1556      74757265 
 1557              	.LASF8:
 1558 01f4 756E7369 		.ascii	"unsigned int\000"
 1558      676E6564 
 1558      20696E74 
 1558      00
 1559              	.LASF7:
 1560 0201 6C6F6E67 		.ascii	"long long unsigned int\000"
 1560      206C6F6E 
 1560      6720756E 
 1560      7369676E 
 1560      65642069 
 1561              	.LASF45:
 1562 0218 433A5C55 		.ascii	"C:\\Users\\Jeppe\\Google Drev\\E4PRJ4 gDrive\\Vugge"
 1562      73657273 
 1562      5C4A6570 
 1562      70655C47 
 1562      6F6F676C 
 1563 0246 73797374 		.ascii	"system arbejdsdokumenter\\vuggeControl\\vuggeContro"
 1563      656D2061 
 1563      7262656A 
 1563      6473646F 
 1563      6B756D65 
 1564 0277 6C2E6379 		.ascii	"l.cydsn\000"
 1564      64736E00 
 1565              	.LASF37:
 1566 027f 72657375 		.ascii	"result\000"
 1566      6C7400
 1567              	.LASF14:
 1568 0286 72656738 		.ascii	"reg8\000"
 1568      00
 1569              	.LASF30:
 1570 028b 4D6F746F 		.ascii	"MotorPWM_WriteDeadTime\000"
 1570      7250574D 
 1570      5F577269 
 1570      74654465 
 1570      61645469 
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 46


 1571              	.LASF16:
 1572 02a2 73697A65 		.ascii	"sizetype\000"
 1572      74797065 
 1572      00
 1573              	.LASF6:
 1574 02ab 6C6F6E67 		.ascii	"long long int\000"
 1574      206C6F6E 
 1574      6720696E 
 1574      7400
 1575              	.LASF35:
 1576 02b9 696E7465 		.ascii	"interruptMode\000"
 1576      72727570 
 1576      744D6F64 
 1576      6500
 1577              	.LASF28:
 1578 02c7 4D6F746F 		.ascii	"MotorPWM_WriteCompare\000"
 1578      7250574D 
 1578      5F577269 
 1578      7465436F 
 1578      6D706172 
 1579              	.LASF2:
 1580 02dd 73686F72 		.ascii	"short int\000"
 1580      7420696E 
 1580      7400
 1581              	.LASF32:
 1582 02e7 4D6F746F 		.ascii	"MotorPWM_ReadCounter\000"
 1582      7250574D 
 1582      5F526561 
 1582      64436F75 
 1582      6E746572 
 1583              	.LASF34:
 1584 02fc 4D6F746F 		.ascii	"MotorPWM_SetInterruptMode\000"
 1584      7250574D 
 1584      5F536574 
 1584      496E7465 
 1584      72727570 
 1585              	.LASF19:
 1586 0316 4D6F746F 		.ascii	"MotorPWM_Start\000"
 1586      7250574D 
 1586      5F537461 
 1586      727400
 1587              	.LASF47:
 1588 0325 4D6F746F 		.ascii	"MotorPWM_initVar\000"
 1588      7250574D 
 1588      5F696E69 
 1588      74566172 
 1588      00
 1589              	.LASF46:
 1590 0336 4D6F746F 		.ascii	"MotorPWM_ReadControlRegister\000"
 1590      7250574D 
 1590      5F526561 
 1590      64436F6E 
 1590      74726F6C 
 1591              	.LASF4:
 1592 0353 6C6F6E67 		.ascii	"long int\000"
 1592      20696E74 
 1592      00
ARM GAS  C:\Users\Jeppe\AppData\Local\Temp\cc3BpKIE.s 			page 47


 1593              	.LASF13:
 1594 035c 63686172 		.ascii	"char\000"
 1594      00
 1595              	.LASF18:
 1596 0361 4D6F746F 		.ascii	"MotorPWM_interruptState\000"
 1596      7250574D 
 1596      5F696E74 
 1596      65727275 
 1596      70745374 
 1597              	.LASF0:
 1598 0379 7369676E 		.ascii	"signed char\000"
 1598      65642063 
 1598      68617200 
 1599              	.LASF29:
 1600 0385 636F6D70 		.ascii	"compare\000"
 1600      61726500 
 1601              	.LASF31:
 1602 038d 64656164 		.ascii	"deadtime\000"
 1602      74696D65 
 1602      00
 1603              	.LASF17:
 1604 0396 6374726C 		.ascii	"ctrl\000"
 1604      00
 1605              	.LASF22:
 1606 039b 4D6F746F 		.ascii	"MotorPWM_Init\000"
 1606      7250574D 
 1606      5F496E69 
 1606      7400
 1607              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
